//////////////////////////////////////////////////////////////////////////////////////////////
// DO NOT MODIFY THIS FILE                                                                  //
// This file is automatically generated by ZenStack CLI and should not be manually updated. //
//////////////////////////////////////////////////////////////////////////////////////////////

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum AuthProvider {
  USER_PASS
  TC_SHUKE
}

enum PostStatus {
  DRAFT
  PUBLISHED
  REJECTED
}

enum AuditStatus {
  PENDING
  RESOLVED
  REJECTED
  FAILED
}

enum AuditChannel {
  TIAN_YUAN
  SELF
}

enum LogAction {
  create
  createMany
  delete
  deleteMany
  update
  updateMany
}

enum FormType {
  text
  textarea
  select
  selectMany
  checkbox
  checkboxMany
  date
  dateRange
  number
  slider
  radio
  switch
  file
  code
  video
}

enum OptionsType {
  static
  database
  api
}

model User {
  id                 String              @id() @default(cuid())
  deleted            Boolean?            @default(false)
  createdAt          DateTime            @default(now())
  updatedAt          DateTime?           @updatedAt()
  operatedById       String?
  email              String              @unique()
  name               String
  avatar             String?
  provider           AuthProvider        @default(USER_PASS)
  roles              UserRole[]
  role               String?
  password           String?
  posts              Post[]              @relation("PostOperator")
  frontRouteProjects FrontRouteProject[] @relation("FrontRouteProjectOperator")
  frontRouteModules  FrontRouteModule[]  @relation("FrontRouteModuleOperator")
  logs               Log[]
  auditRecords       AuditRecord[]       @relation("AuditRecordOperator")

  @@index([name])
}

model Role {
  id           String     @id() @default(cuid())
  deleted      Boolean?   @default(false)
  createdAt    DateTime   @default(now())
  updatedAt    DateTime?  @updatedAt()
  operatedById String?
  title        String     @unique()
  description  String
  users        UserRole[]

  @@index([operatedById])
}

model UserRole {
  id           String    @id() @default(cuid())
  deleted      Boolean?  @default(false)
  createdAt    DateTime  @default(now())
  updatedAt    DateTime? @updatedAt()
  operatedById String?
  user         User?     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId       String
  role         Role      @relation(fields: [roleId], references: [id], onDelete: Cascade)
  roleId       String

  @@unique([userId, roleId])
}

model Post {
  id           String     @id() @default(cuid())
  deleted      Boolean?   @default(false)
  createdAt    DateTime   @default(now())
  updatedAt    DateTime?  @updatedAt()
  operatedById String?
  operatedBy   User?      @relation("PostOperator", references: [id], fields: [operatedById])
  title        String
  content      String
  hit          Int        @default(0)
  like         Int        @default(0)
  image        String?
  status       PostStatus @default(DRAFT)
  category     Category   @relation(fields: [categoryId], references: [id])
  categoryId   String

  @@index([operatedById])
  @@index([categoryId])
  @@index([status])
  @@index([title])
  @@index([createdAt])
}

model Category {
  id           String    @id() @default(cuid())
  deleted      Boolean?  @default(false)
  createdAt    DateTime  @default(now())
  updatedAt    DateTime? @updatedAt()
  operatedById String?
  title        String    @unique()
  description  String?
  posts        Post[]

  @@index([operatedById])
  @@index([title])
}

model CasbinRule {
  id           String    @id() @default(cuid())
  deleted      Boolean?  @default(false)
  createdAt    DateTime  @default(now())
  updatedAt    DateTime? @updatedAt()
  operatedById String?
  ptype        String
  v0           String
  v1           String
  v2           String
  v3           String?
  v4           String?

  @@index([operatedById])
  @@index([ptype, v0, v1, v2])
  @@map("casbin_rule")
}

model FrontRouteProject {
  id           String             @id() @default(cuid())
  deleted      Boolean?           @default(false)
  createdAt    DateTime           @default(now())
  updatedAt    DateTime?          @updatedAt()
  operatedById String?
  operatedBy   User?              @relation("FrontRouteProjectOperator", references: [id], fields: [operatedById])
  title        String             @unique()
  description  String?
  global       Json
  modules      FrontRouteModule[]

  @@index([title])
}

model FrontRouteModule {
  id                 String            @id() @default(cuid())
  deleted            Boolean?          @default(false)
  createdAt          DateTime          @default(now())
  updatedAt          DateTime?         @updatedAt()
  operatedById       String?
  operatedBy         User?             @relation("FrontRouteModuleOperator", references: [id], fields: [operatedById])
  title              String            @unique()
  description        String?
  pathReplaceProject String?
  pathReplaceModule  String?
  global             Json?
  project            FrontRouteProject @relation(fields: [projectId], references: [id])
  projectId          String

  @@index([title])
}

model AuditRecord {
  id           String       @id() @default(cuid())
  deleted      Boolean?     @default(false)
  createdAt    DateTime     @default(now())
  updatedAt    DateTime?    @updatedAt()
  operatedById String?
  operatedBy   User?        @relation("AuditRecordOperator", references: [id], fields: [operatedById])
  title        String
  dataPrevious Json?
  data         Json?
  meta         Json
  resource     String
  error        String?
  status       AuditStatus  @default(PENDING)
  channel      AuditChannel @default(SELF)
  action       LogAction

  @@index([title])
  @@index([status])
  @@index([resource])
  @@index([operatedById])
}

model Log {
  id           String    @id() @default(cuid())
  deleted      Boolean?  @default(false)
  createdAt    DateTime  @default(now())
  updatedAt    DateTime? @updatedAt()
  operatedById String?
  operatedBy   User?     @relation(references: [id], fields: [operatedById])
  resource     String
  action       LogAction
  data         Json?
  dataPrevious Json?
  meta         Json?

  @@index([operatedById])
  @@index([resource])
  @@index([action])
}

model Menu {
  id           String    @id() @default(cuid())
  deleted      Boolean?  @default(false)
  createdAt    DateTime  @default(now())
  updatedAt    DateTime? @updatedAt()
  operatedById String?
  name         String
  title        String?
  order        Int?      @default(0)
  isActive     Boolean?  @default(true)
  list         String?
  create       String?
  edit         String?
  show         String?
  clone        String?
  meta         Json?

  @@index([name])
  @@index([operatedById])
}

model DynamicPage {
  id              String    @id() @default(cuid())
  deleted         Boolean?  @default(false)
  createdAt       DateTime  @default(now())
  updatedAt       DateTime? @updatedAt()
  operatedById    String?
  path            String    @unique()
  title           String
  isActive        Boolean?  @default(true)
  enableCreate    Boolean?
  enableDelete    Boolean?
  enableEdit      Boolean?
  enableClone     Boolean?
  db              String
  tableSql        String
  tableRecordLink Json?
  formField       Json?
  meta            Json?

  @@index([path])
}

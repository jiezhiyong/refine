{"version":3,"file":"index-jG6TLAuK.js","sources":["../../../node_modules/.pnpm/react@18.3.1/node_modules/react/cjs/react.production.min.js","../../../node_modules/.pnpm/react@18.3.1/node_modules/react/index.js","../../../node_modules/.pnpm/react@18.3.1/node_modules/react/cjs/react-jsx-runtime.production.min.js","../../../node_modules/.pnpm/react@18.3.1/node_modules/react/jsx-runtime.js","../../../node_modules/.pnpm/@remix-run+router@1.22.0/node_modules/@remix-run/router/dist/router.js","../../../node_modules/.pnpm/react-router@6.29.0_react@18.3.1/node_modules/react-router/dist/index.js"],"sourcesContent":["/**\n * @license React\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var l=Symbol.for(\"react.element\"),n=Symbol.for(\"react.portal\"),p=Symbol.for(\"react.fragment\"),q=Symbol.for(\"react.strict_mode\"),r=Symbol.for(\"react.profiler\"),t=Symbol.for(\"react.provider\"),u=Symbol.for(\"react.context\"),v=Symbol.for(\"react.forward_ref\"),w=Symbol.for(\"react.suspense\"),x=Symbol.for(\"react.memo\"),y=Symbol.for(\"react.lazy\"),z=Symbol.iterator;function A(a){if(null===a||\"object\"!==typeof a)return null;a=z&&a[z]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\nvar B={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},C=Object.assign,D={};function E(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}E.prototype.isReactComponent={};\nE.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(\"setState(...): takes an object of state variables to update or a function which returns an object of state variables.\");this.updater.enqueueSetState(this,a,b,\"setState\")};E.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};function F(){}F.prototype=E.prototype;function G(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}var H=G.prototype=new F;\nH.constructor=G;C(H,E.prototype);H.isPureReactComponent=!0;var I=Array.isArray,J=Object.prototype.hasOwnProperty,K={current:null},L={key:!0,ref:!0,__self:!0,__source:!0};\nfunction M(a,b,e){var d,c={},k=null,h=null;if(null!=b)for(d in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(k=\"\"+b.key),b)J.call(b,d)&&!L.hasOwnProperty(d)&&(c[d]=b[d]);var g=arguments.length-2;if(1===g)c.children=e;else if(1<g){for(var f=Array(g),m=0;m<g;m++)f[m]=arguments[m+2];c.children=f}if(a&&a.defaultProps)for(d in g=a.defaultProps,g)void 0===c[d]&&(c[d]=g[d]);return{$$typeof:l,type:a,key:k,ref:h,props:c,_owner:K.current}}\nfunction N(a,b){return{$$typeof:l,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function O(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===l}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+a.replace(/[=:]/g,function(a){return b[a]})}var P=/\\/+/g;function Q(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(\"\"+a.key):b.toString(36)}\nfunction R(a,b,e,d,c){var k=typeof a;if(\"undefined\"===k||\"boolean\"===k)a=null;var h=!1;if(null===a)h=!0;else switch(k){case \"string\":case \"number\":h=!0;break;case \"object\":switch(a.$$typeof){case l:case n:h=!0}}if(h)return h=a,c=c(h),a=\"\"===d?\".\"+Q(h,0):d,I(c)?(e=\"\",null!=a&&(e=a.replace(P,\"$&/\")+\"/\"),R(c,b,e,\"\",function(a){return a})):null!=c&&(O(c)&&(c=N(c,e+(!c.key||h&&h.key===c.key?\"\":(\"\"+c.key).replace(P,\"$&/\")+\"/\")+a)),b.push(c)),1;h=0;d=\"\"===d?\".\":d+\":\";if(I(a))for(var g=0;g<a.length;g++){k=\na[g];var f=d+Q(k,g);h+=R(k,b,e,f,c)}else if(f=A(a),\"function\"===typeof f)for(a=f.call(a),g=0;!(k=a.next()).done;)k=k.value,f=d+Q(k,g++),h+=R(k,b,e,f,c);else if(\"object\"===k)throw b=String(a),Error(\"Objects are not valid as a React child (found: \"+(\"[object Object]\"===b?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":b)+\"). If you meant to render a collection of children, use an array instead.\");return h}\nfunction S(a,b,e){if(null==a)return a;var d=[],c=0;R(a,d,\"\",\"\",function(a){return b.call(e,a,c++)});return d}function T(a){if(-1===a._status){var b=a._result;b=b();b.then(function(b){if(0===a._status||-1===a._status)a._status=1,a._result=b},function(b){if(0===a._status||-1===a._status)a._status=2,a._result=b});-1===a._status&&(a._status=0,a._result=b)}if(1===a._status)return a._result.default;throw a._result;}\nvar U={current:null},V={transition:null},W={ReactCurrentDispatcher:U,ReactCurrentBatchConfig:V,ReactCurrentOwner:K};function X(){throw Error(\"act(...) is not supported in production builds of React.\");}\nexports.Children={map:S,forEach:function(a,b,e){S(a,function(){b.apply(this,arguments)},e)},count:function(a){var b=0;S(a,function(){b++});return b},toArray:function(a){return S(a,function(a){return a})||[]},only:function(a){if(!O(a))throw Error(\"React.Children.only expected to receive a single React element child.\");return a}};exports.Component=E;exports.Fragment=p;exports.Profiler=r;exports.PureComponent=G;exports.StrictMode=q;exports.Suspense=w;\nexports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=W;exports.act=X;\nexports.cloneElement=function(a,b,e){if(null===a||void 0===a)throw Error(\"React.cloneElement(...): The argument must be a React element, but you passed \"+a+\".\");var d=C({},a.props),c=a.key,k=a.ref,h=a._owner;if(null!=b){void 0!==b.ref&&(k=b.ref,h=K.current);void 0!==b.key&&(c=\"\"+b.key);if(a.type&&a.type.defaultProps)var g=a.type.defaultProps;for(f in b)J.call(b,f)&&!L.hasOwnProperty(f)&&(d[f]=void 0===b[f]&&void 0!==g?g[f]:b[f])}var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){g=Array(f);\nfor(var m=0;m<f;m++)g[m]=arguments[m+2];d.children=g}return{$$typeof:l,type:a.type,key:c,ref:k,props:d,_owner:h}};exports.createContext=function(a){a={$$typeof:u,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null};a.Provider={$$typeof:t,_context:a};return a.Consumer=a};exports.createElement=M;exports.createFactory=function(a){var b=M.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};\nexports.forwardRef=function(a){return{$$typeof:v,render:a}};exports.isValidElement=O;exports.lazy=function(a){return{$$typeof:y,_payload:{_status:-1,_result:a},_init:T}};exports.memo=function(a,b){return{$$typeof:x,type:a,compare:void 0===b?null:b}};exports.startTransition=function(a){var b=V.transition;V.transition={};try{a()}finally{V.transition=b}};exports.unstable_act=X;exports.useCallback=function(a,b){return U.current.useCallback(a,b)};exports.useContext=function(a){return U.current.useContext(a)};\nexports.useDebugValue=function(){};exports.useDeferredValue=function(a){return U.current.useDeferredValue(a)};exports.useEffect=function(a,b){return U.current.useEffect(a,b)};exports.useId=function(){return U.current.useId()};exports.useImperativeHandle=function(a,b,e){return U.current.useImperativeHandle(a,b,e)};exports.useInsertionEffect=function(a,b){return U.current.useInsertionEffect(a,b)};exports.useLayoutEffect=function(a,b){return U.current.useLayoutEffect(a,b)};\nexports.useMemo=function(a,b){return U.current.useMemo(a,b)};exports.useReducer=function(a,b,e){return U.current.useReducer(a,b,e)};exports.useRef=function(a){return U.current.useRef(a)};exports.useState=function(a){return U.current.useState(a)};exports.useSyncExternalStore=function(a,b,e){return U.current.useSyncExternalStore(a,b,e)};exports.useTransition=function(){return U.current.useTransition()};exports.version=\"18.3.1\";\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","/**\n * @remix-run/router v1.22.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Actions represent the type of change to a location value.\n */\nvar Action;\n(function (Action) {\n  /**\n   * A POP indicates a change to an arbitrary index in the history stack, such\n   * as a back or forward navigation. It does not describe the direction of the\n   * navigation, only that the current index changed.\n   *\n   * Note: This is the default action for newly created history objects.\n   */\n  Action[\"Pop\"] = \"POP\";\n  /**\n   * A PUSH indicates a new entry being added to the history stack, such as when\n   * a link is clicked and a new page loads. When this happens, all subsequent\n   * entries in the stack are lost.\n   */\n  Action[\"Push\"] = \"PUSH\";\n  /**\n   * A REPLACE indicates the entry at the current index in the history stack\n   * being replaced by a new one.\n   */\n  Action[\"Replace\"] = \"REPLACE\";\n})(Action || (Action = {}));\nconst PopStateEventType = \"popstate\";\n/**\n * Memory history stores the current location in memory. It is designed for use\n * in stateful non-browser environments like tests and React Native.\n */\nfunction createMemoryHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  let {\n    initialEntries = [\"/\"],\n    initialIndex,\n    v5Compat = false\n  } = options;\n  let entries; // Declare so we can access from createMemoryLocation\n  entries = initialEntries.map((entry, index) => createMemoryLocation(entry, typeof entry === \"string\" ? null : entry.state, index === 0 ? \"default\" : undefined));\n  let index = clampIndex(initialIndex == null ? entries.length - 1 : initialIndex);\n  let action = Action.Pop;\n  let listener = null;\n  function clampIndex(n) {\n    return Math.min(Math.max(n, 0), entries.length - 1);\n  }\n  function getCurrentLocation() {\n    return entries[index];\n  }\n  function createMemoryLocation(to, state, key) {\n    if (state === void 0) {\n      state = null;\n    }\n    let location = createLocation(entries ? getCurrentLocation().pathname : \"/\", to, state, key);\n    warning(location.pathname.charAt(0) === \"/\", \"relative pathnames are not supported in memory history: \" + JSON.stringify(to));\n    return location;\n  }\n  function createHref(to) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n  let history = {\n    get index() {\n      return index;\n    },\n    get action() {\n      return action;\n    },\n    get location() {\n      return getCurrentLocation();\n    },\n    createHref,\n    createURL(to) {\n      return new URL(createHref(to), \"http://localhost\");\n    },\n    encodeLocation(to) {\n      let path = typeof to === \"string\" ? parsePath(to) : to;\n      return {\n        pathname: path.pathname || \"\",\n        search: path.search || \"\",\n        hash: path.hash || \"\"\n      };\n    },\n    push(to, state) {\n      action = Action.Push;\n      let nextLocation = createMemoryLocation(to, state);\n      index += 1;\n      entries.splice(index, entries.length, nextLocation);\n      if (v5Compat && listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta: 1\n        });\n      }\n    },\n    replace(to, state) {\n      action = Action.Replace;\n      let nextLocation = createMemoryLocation(to, state);\n      entries[index] = nextLocation;\n      if (v5Compat && listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta: 0\n        });\n      }\n    },\n    go(delta) {\n      action = Action.Pop;\n      let nextIndex = clampIndex(index + delta);\n      let nextLocation = entries[nextIndex];\n      index = nextIndex;\n      if (listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta\n        });\n      }\n    },\n    listen(fn) {\n      listener = fn;\n      return () => {\n        listener = null;\n      };\n    }\n  };\n  return history;\n}\n/**\n * Browser history stores the location in regular URLs. This is the standard for\n * most web apps, but it requires some configuration on the server to ensure you\n * serve the same app at multiple URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory\n */\nfunction createBrowserHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  function createBrowserLocation(window, globalHistory) {\n    let {\n      pathname,\n      search,\n      hash\n    } = window.location;\n    return createLocation(\"\", {\n      pathname,\n      search,\n      hash\n    },\n    // state defaults to `null` because `window.history.state` does\n    globalHistory.state && globalHistory.state.usr || null, globalHistory.state && globalHistory.state.key || \"default\");\n  }\n  function createBrowserHref(window, to) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n  return getUrlBasedHistory(createBrowserLocation, createBrowserHref, null, options);\n}\n/**\n * Hash history stores the location in window.location.hash. This makes it ideal\n * for situations where you don't want to send the location to the server for\n * some reason, either because you do cannot configure it or the URL space is\n * reserved for something else.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory\n */\nfunction createHashHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  function createHashLocation(window, globalHistory) {\n    let {\n      pathname = \"/\",\n      search = \"\",\n      hash = \"\"\n    } = parsePath(window.location.hash.substr(1));\n    // Hash URL should always have a leading / just like window.location.pathname\n    // does, so if an app ends up at a route like /#something then we add a\n    // leading slash so all of our path-matching behaves the same as if it would\n    // in a browser router.  This is particularly important when there exists a\n    // root splat route (<Route path=\"*\">) since that matches internally against\n    // \"/*\" and we'd expect /#something to 404 in a hash router app.\n    if (!pathname.startsWith(\"/\") && !pathname.startsWith(\".\")) {\n      pathname = \"/\" + pathname;\n    }\n    return createLocation(\"\", {\n      pathname,\n      search,\n      hash\n    },\n    // state defaults to `null` because `window.history.state` does\n    globalHistory.state && globalHistory.state.usr || null, globalHistory.state && globalHistory.state.key || \"default\");\n  }\n  function createHashHref(window, to) {\n    let base = window.document.querySelector(\"base\");\n    let href = \"\";\n    if (base && base.getAttribute(\"href\")) {\n      let url = window.location.href;\n      let hashIndex = url.indexOf(\"#\");\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n    return href + \"#\" + (typeof to === \"string\" ? to : createPath(to));\n  }\n  function validateHashLocation(location, to) {\n    warning(location.pathname.charAt(0) === \"/\", \"relative pathnames are not supported in hash history.push(\" + JSON.stringify(to) + \")\");\n  }\n  return getUrlBasedHistory(createHashLocation, createHashHref, validateHashLocation, options);\n}\nfunction invariant(value, message) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\nfunction warning(cond, message) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n    try {\n      // Welcome to debugging history!\n      //\n      // This error is thrown as a convenience, so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\nfunction createKey() {\n  return Math.random().toString(36).substr(2, 8);\n}\n/**\n * For browser-based histories, we combine the state and key into an object\n */\nfunction getHistoryState(location, index) {\n  return {\n    usr: location.state,\n    key: location.key,\n    idx: index\n  };\n}\n/**\n * Creates a Location object with a unique key from the given Path\n */\nfunction createLocation(current, to, state, key) {\n  if (state === void 0) {\n    state = null;\n  }\n  let location = _extends({\n    pathname: typeof current === \"string\" ? current : current.pathname,\n    search: \"\",\n    hash: \"\"\n  }, typeof to === \"string\" ? parsePath(to) : to, {\n    state,\n    // TODO: This could be cleaned up.  push/replace should probably just take\n    // full Locations now and avoid the need to run through this flow at all\n    // But that's a pretty big refactor to the current test suite so going to\n    // keep as is for the time being and just let any incoming keys take precedence\n    key: to && to.key || key || createKey()\n  });\n  return location;\n}\n/**\n * Creates a string URL path from the given pathname, search, and hash components.\n */\nfunction createPath(_ref) {\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\"\n  } = _ref;\n  if (search && search !== \"?\") pathname += search.charAt(0) === \"?\" ? search : \"?\" + search;\n  if (hash && hash !== \"#\") pathname += hash.charAt(0) === \"#\" ? hash : \"#\" + hash;\n  return pathname;\n}\n/**\n * Parses a string URL path into its separate pathname, search, and hash components.\n */\nfunction parsePath(path) {\n  let parsedPath = {};\n  if (path) {\n    let hashIndex = path.indexOf(\"#\");\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substr(hashIndex);\n      path = path.substr(0, hashIndex);\n    }\n    let searchIndex = path.indexOf(\"?\");\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substr(searchIndex);\n      path = path.substr(0, searchIndex);\n    }\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n  return parsedPath;\n}\nfunction getUrlBasedHistory(getLocation, createHref, validateLocation, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  let {\n    window = document.defaultView,\n    v5Compat = false\n  } = options;\n  let globalHistory = window.history;\n  let action = Action.Pop;\n  let listener = null;\n  let index = getIndex();\n  // Index should only be null when we initialize. If not, it's because the\n  // user called history.pushState or history.replaceState directly, in which\n  // case we should log a warning as it will result in bugs.\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState(_extends({}, globalHistory.state, {\n      idx: index\n    }), \"\");\n  }\n  function getIndex() {\n    let state = globalHistory.state || {\n      idx: null\n    };\n    return state.idx;\n  }\n  function handlePop() {\n    action = Action.Pop;\n    let nextIndex = getIndex();\n    let delta = nextIndex == null ? null : nextIndex - index;\n    index = nextIndex;\n    if (listener) {\n      listener({\n        action,\n        location: history.location,\n        delta\n      });\n    }\n  }\n  function push(to, state) {\n    action = Action.Push;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    index = getIndex() + 1;\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    // try...catch because iOS limits us to 100 pushState calls :/\n    try {\n      globalHistory.pushState(historyState, \"\", url);\n    } catch (error) {\n      // If the exception is because `state` can't be serialized, let that throw\n      // outwards just like a replace call would so the dev knows the cause\n      // https://html.spec.whatwg.org/multipage/nav-history-apis.html#shared-history-push/replace-state-steps\n      // https://html.spec.whatwg.org/multipage/structured-data.html#structuredserializeinternal\n      if (error instanceof DOMException && error.name === \"DataCloneError\") {\n        throw error;\n      }\n      // They are going to lose state here, but there is no real\n      // way to warn them about it since the page will refresh...\n      window.location.assign(url);\n    }\n    if (v5Compat && listener) {\n      listener({\n        action,\n        location: history.location,\n        delta: 1\n      });\n    }\n  }\n  function replace(to, state) {\n    action = Action.Replace;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    index = getIndex();\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    globalHistory.replaceState(historyState, \"\", url);\n    if (v5Compat && listener) {\n      listener({\n        action,\n        location: history.location,\n        delta: 0\n      });\n    }\n  }\n  function createURL(to) {\n    // window.location.origin is \"null\" (the literal string value) in Firefox\n    // under certain conditions, notably when serving from a local HTML file\n    // See https://bugzilla.mozilla.org/show_bug.cgi?id=878297\n    let base = window.location.origin !== \"null\" ? window.location.origin : window.location.href;\n    let href = typeof to === \"string\" ? to : createPath(to);\n    // Treating this as a full URL will strip any trailing spaces so we need to\n    // pre-encode them since they might be part of a matching splat param from\n    // an ancestor route\n    href = href.replace(/ $/, \"%20\");\n    invariant(base, \"No window.location.(origin|href) available to create URL for href: \" + href);\n    return new URL(href, base);\n  }\n  let history = {\n    get action() {\n      return action;\n    },\n    get location() {\n      return getLocation(window, globalHistory);\n    },\n    listen(fn) {\n      if (listener) {\n        throw new Error(\"A history only accepts one active listener\");\n      }\n      window.addEventListener(PopStateEventType, handlePop);\n      listener = fn;\n      return () => {\n        window.removeEventListener(PopStateEventType, handlePop);\n        listener = null;\n      };\n    },\n    createHref(to) {\n      return createHref(window, to);\n    },\n    createURL,\n    encodeLocation(to) {\n      // Encode a Location the same way window.location would\n      let url = createURL(to);\n      return {\n        pathname: url.pathname,\n        search: url.search,\n        hash: url.hash\n      };\n    },\n    push,\n    replace,\n    go(n) {\n      return globalHistory.go(n);\n    }\n  };\n  return history;\n}\n//#endregion\n\nvar ResultType;\n(function (ResultType) {\n  ResultType[\"data\"] = \"data\";\n  ResultType[\"deferred\"] = \"deferred\";\n  ResultType[\"redirect\"] = \"redirect\";\n  ResultType[\"error\"] = \"error\";\n})(ResultType || (ResultType = {}));\nconst immutableRouteKeys = new Set([\"lazy\", \"caseSensitive\", \"path\", \"id\", \"index\", \"children\"]);\nfunction isIndexRoute(route) {\n  return route.index === true;\n}\n// Walk the route tree generating unique IDs where necessary, so we are working\n// solely with AgnosticDataRouteObject's within the Router\nfunction convertRoutesToDataRoutes(routes, mapRouteProperties, parentPath, manifest) {\n  if (parentPath === void 0) {\n    parentPath = [];\n  }\n  if (manifest === void 0) {\n    manifest = {};\n  }\n  return routes.map((route, index) => {\n    let treePath = [...parentPath, String(index)];\n    let id = typeof route.id === \"string\" ? route.id : treePath.join(\"-\");\n    invariant(route.index !== true || !route.children, \"Cannot specify children on an index route\");\n    invariant(!manifest[id], \"Found a route id collision on id \\\"\" + id + \"\\\".  Route \" + \"id's must be globally unique within Data Router usages\");\n    if (isIndexRoute(route)) {\n      let indexRoute = _extends({}, route, mapRouteProperties(route), {\n        id\n      });\n      manifest[id] = indexRoute;\n      return indexRoute;\n    } else {\n      let pathOrLayoutRoute = _extends({}, route, mapRouteProperties(route), {\n        id,\n        children: undefined\n      });\n      manifest[id] = pathOrLayoutRoute;\n      if (route.children) {\n        pathOrLayoutRoute.children = convertRoutesToDataRoutes(route.children, mapRouteProperties, treePath, manifest);\n      }\n      return pathOrLayoutRoute;\n    }\n  });\n}\n/**\n * Matches the given routes to a location and returns the match data.\n *\n * @see https://reactrouter.com/v6/utils/match-routes\n */\nfunction matchRoutes(routes, locationArg, basename) {\n  if (basename === void 0) {\n    basename = \"/\";\n  }\n  return matchRoutesImpl(routes, locationArg, basename, false);\n}\nfunction matchRoutesImpl(routes, locationArg, basename, allowPartial) {\n  let location = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n  if (pathname == null) {\n    return null;\n  }\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n  let matches = null;\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    // Incoming pathnames are generally encoded from either window.location\n    // or from router.navigate, but we want to match against the unencoded\n    // paths in the route definitions.  Memory router locations won't be\n    // encoded here but there also shouldn't be anything to decode so this\n    // should be a safe operation.  This avoids needing matchRoutes to be\n    // history-aware.\n    let decoded = decodePath(pathname);\n    matches = matchRouteBranch(branches[i], decoded, allowPartial);\n  }\n  return matches;\n}\nfunction convertRouteMatchToUiMatch(match, loaderData) {\n  let {\n    route,\n    pathname,\n    params\n  } = match;\n  return {\n    id: route.id,\n    pathname,\n    params,\n    data: loaderData[route.id],\n    handle: route.handle\n  };\n}\nfunction flattenRoutes(routes, branches, parentsMeta, parentPath) {\n  if (branches === void 0) {\n    branches = [];\n  }\n  if (parentsMeta === void 0) {\n    parentsMeta = [];\n  }\n  if (parentPath === void 0) {\n    parentPath = \"\";\n  }\n  let flattenRoute = (route, index, relativePath) => {\n    let meta = {\n      relativePath: relativePath === undefined ? route.path || \"\" : relativePath,\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route\n    };\n    if (meta.relativePath.startsWith(\"/\")) {\n      invariant(meta.relativePath.startsWith(parentPath), \"Absolute route path \\\"\" + meta.relativePath + \"\\\" nested under path \" + (\"\\\"\" + parentPath + \"\\\" is not valid. An absolute child route path \") + \"must start with the combined path of all its parent routes.\");\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta);\n    // Add the children before adding this route to the array, so we traverse the\n    // route tree depth-first and child routes appear before their parents in\n    // the \"flattened\" version.\n    if (route.children && route.children.length > 0) {\n      invariant(\n      // Our types know better, but runtime JS may not!\n      // @ts-expect-error\n      route.index !== true, \"Index routes must not have child routes. Please remove \" + (\"all child routes from route path \\\"\" + path + \"\\\".\"));\n      flattenRoutes(route.children, branches, routesMeta, path);\n    }\n    // Routes without a path shouldn't ever match by themselves unless they are\n    // index routes, so don't add them to the list of possible branches.\n    if (route.path == null && !route.index) {\n      return;\n    }\n    branches.push({\n      path,\n      score: computeScore(path, route.index),\n      routesMeta\n    });\n  };\n  routes.forEach((route, index) => {\n    var _route$path;\n    // coarse-grain check for optional params\n    if (route.path === \"\" || !((_route$path = route.path) != null && _route$path.includes(\"?\"))) {\n      flattenRoute(route, index);\n    } else {\n      for (let exploded of explodeOptionalSegments(route.path)) {\n        flattenRoute(route, index, exploded);\n      }\n    }\n  });\n  return branches;\n}\n/**\n * Computes all combinations of optional path segments for a given path,\n * excluding combinations that are ambiguous and of lower priority.\n *\n * For example, `/one/:two?/three/:four?/:five?` explodes to:\n * - `/one/three`\n * - `/one/:two/three`\n * - `/one/three/:four`\n * - `/one/three/:five`\n * - `/one/:two/three/:four`\n * - `/one/:two/three/:five`\n * - `/one/three/:four/:five`\n * - `/one/:two/three/:four/:five`\n */\nfunction explodeOptionalSegments(path) {\n  let segments = path.split(\"/\");\n  if (segments.length === 0) return [];\n  let [first, ...rest] = segments;\n  // Optional path segments are denoted by a trailing `?`\n  let isOptional = first.endsWith(\"?\");\n  // Compute the corresponding required segment: `foo?` -> `foo`\n  let required = first.replace(/\\?$/, \"\");\n  if (rest.length === 0) {\n    // Intepret empty string as omitting an optional segment\n    // `[\"one\", \"\", \"three\"]` corresponds to omitting `:two` from `/one/:two?/three` -> `/one/three`\n    return isOptional ? [required, \"\"] : [required];\n  }\n  let restExploded = explodeOptionalSegments(rest.join(\"/\"));\n  let result = [];\n  // All child paths with the prefix.  Do this for all children before the\n  // optional version for all children, so we get consistent ordering where the\n  // parent optional aspect is preferred as required.  Otherwise, we can get\n  // child sections interspersed where deeper optional segments are higher than\n  // parent optional segments, where for example, /:two would explode _earlier_\n  // then /:one.  By always including the parent as required _for all children_\n  // first, we avoid this issue\n  result.push(...restExploded.map(subpath => subpath === \"\" ? required : [required, subpath].join(\"/\")));\n  // Then, if this is an optional value, add all child versions without\n  if (isOptional) {\n    result.push(...restExploded);\n  }\n  // for absolute paths, ensure `/` instead of empty segment\n  return result.map(exploded => path.startsWith(\"/\") && exploded === \"\" ? \"/\" : exploded);\n}\nfunction rankRouteBranches(branches) {\n  branches.sort((a, b) => a.score !== b.score ? b.score - a.score // Higher score first\n  : compareIndexes(a.routesMeta.map(meta => meta.childrenIndex), b.routesMeta.map(meta => meta.childrenIndex)));\n}\nconst paramRe = /^:[\\w-]+$/;\nconst dynamicSegmentValue = 3;\nconst indexRouteValue = 2;\nconst emptySegmentValue = 1;\nconst staticSegmentValue = 10;\nconst splatPenalty = -2;\nconst isSplat = s => s === \"*\";\nfunction computeScore(path, index) {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n  return segments.filter(s => !isSplat(s)).reduce((score, segment) => score + (paramRe.test(segment) ? dynamicSegmentValue : segment === \"\" ? emptySegmentValue : staticSegmentValue), initialScore);\n}\nfunction compareIndexes(a, b) {\n  let siblings = a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n  return siblings ?\n  // If two routes are siblings, we should try to match the earlier sibling\n  // first. This allows people to have fine-grained control over the matching\n  // behavior by simply putting routes with identical paths in the order they\n  // want them tried.\n  a[a.length - 1] - b[b.length - 1] :\n  // Otherwise, it doesn't really make sense to rank non-siblings by index,\n  // so they sort equally.\n  0;\n}\nfunction matchRouteBranch(branch, pathname, allowPartial) {\n  if (allowPartial === void 0) {\n    allowPartial = false;\n  }\n  let {\n    routesMeta\n  } = branch;\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches = [];\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname = matchedPathname === \"/\" ? pathname : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath({\n      path: meta.relativePath,\n      caseSensitive: meta.caseSensitive,\n      end\n    }, remainingPathname);\n    let route = meta.route;\n    if (!match && end && allowPartial && !routesMeta[routesMeta.length - 1].route.index) {\n      match = matchPath({\n        path: meta.relativePath,\n        caseSensitive: meta.caseSensitive,\n        end: false\n      }, remainingPathname);\n    }\n    if (!match) {\n      return null;\n    }\n    Object.assign(matchedParams, match.params);\n    matches.push({\n      // TODO: Can this as be avoided?\n      params: matchedParams,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(joinPaths([matchedPathname, match.pathnameBase])),\n      route\n    });\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n  return matches;\n}\n/**\n * Returns a path with params interpolated.\n *\n * @see https://reactrouter.com/v6/utils/generate-path\n */\nfunction generatePath(originalPath, params) {\n  if (params === void 0) {\n    params = {};\n  }\n  let path = originalPath;\n  if (path.endsWith(\"*\") && path !== \"*\" && !path.endsWith(\"/*\")) {\n    warning(false, \"Route path \\\"\" + path + \"\\\" will be treated as if it were \" + (\"\\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\" because the `*` character must \") + \"always follow a `/` in the pattern. To get rid of this warning, \" + (\"please change the route path to \\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\".\"));\n    path = path.replace(/\\*$/, \"/*\");\n  }\n  // ensure `/` is added at the beginning if the path is absolute\n  const prefix = path.startsWith(\"/\") ? \"/\" : \"\";\n  const stringify = p => p == null ? \"\" : typeof p === \"string\" ? p : String(p);\n  const segments = path.split(/\\/+/).map((segment, index, array) => {\n    const isLastSegment = index === array.length - 1;\n    // only apply the splat if it's the last segment\n    if (isLastSegment && segment === \"*\") {\n      const star = \"*\";\n      // Apply the splat\n      return stringify(params[star]);\n    }\n    const keyMatch = segment.match(/^:([\\w-]+)(\\??)$/);\n    if (keyMatch) {\n      const [, key, optional] = keyMatch;\n      let param = params[key];\n      invariant(optional === \"?\" || param != null, \"Missing \\\":\" + key + \"\\\" param\");\n      return stringify(param);\n    }\n    // Remove any optional markers from optional static segments\n    return segment.replace(/\\?$/g, \"\");\n  })\n  // Remove empty segments\n  .filter(segment => !!segment);\n  return prefix + segments.join(\"/\");\n}\n/**\n * Performs pattern matching on a URL pathname and returns information about\n * the match.\n *\n * @see https://reactrouter.com/v6/utils/match-path\n */\nfunction matchPath(pattern, pathname) {\n  if (typeof pattern === \"string\") {\n    pattern = {\n      path: pattern,\n      caseSensitive: false,\n      end: true\n    };\n  }\n  let [matcher, compiledParams] = compilePath(pattern.path, pattern.caseSensitive, pattern.end);\n  let match = pathname.match(matcher);\n  if (!match) return null;\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params = compiledParams.reduce((memo, _ref, index) => {\n    let {\n      paramName,\n      isOptional\n    } = _ref;\n    // We need to compute the pathnameBase here using the raw splat value\n    // instead of using params[\"*\"] later because it will be decoded then\n    if (paramName === \"*\") {\n      let splatValue = captureGroups[index] || \"\";\n      pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\\/+$/, \"$1\");\n    }\n    const value = captureGroups[index];\n    if (isOptional && !value) {\n      memo[paramName] = undefined;\n    } else {\n      memo[paramName] = (value || \"\").replace(/%2F/g, \"/\");\n    }\n    return memo;\n  }, {});\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern\n  };\n}\nfunction compilePath(path, caseSensitive, end) {\n  if (caseSensitive === void 0) {\n    caseSensitive = false;\n  }\n  if (end === void 0) {\n    end = true;\n  }\n  warning(path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"), \"Route path \\\"\" + path + \"\\\" will be treated as if it were \" + (\"\\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\" because the `*` character must \") + \"always follow a `/` in the pattern. To get rid of this warning, \" + (\"please change the route path to \\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\".\"));\n  let params = [];\n  let regexpSource = \"^\" + path.replace(/\\/*\\*?$/, \"\") // Ignore trailing / and /*, we'll handle it below\n  .replace(/^\\/*/, \"/\") // Make sure it has a leading /\n  .replace(/[\\\\.*+^${}|()[\\]]/g, \"\\\\$&\") // Escape special regex chars\n  .replace(/\\/:([\\w-]+)(\\?)?/g, (_, paramName, isOptional) => {\n    params.push({\n      paramName,\n      isOptional: isOptional != null\n    });\n    return isOptional ? \"/?([^\\\\/]+)?\" : \"/([^\\\\/]+)\";\n  });\n  if (path.endsWith(\"*\")) {\n    params.push({\n      paramName: \"*\"\n    });\n    regexpSource += path === \"*\" || path === \"/*\" ? \"(.*)$\" // Already matched the initial /, just match the rest\n    : \"(?:\\\\/(.+)|\\\\/*)$\"; // Don't include the / in params[\"*\"]\n  } else if (end) {\n    // When matching to the end, ignore trailing slashes\n    regexpSource += \"\\\\/*$\";\n  } else if (path !== \"\" && path !== \"/\") {\n    // If our path is non-empty and contains anything beyond an initial slash,\n    // then we have _some_ form of path in our regex, so we should expect to\n    // match only if we find the end of this path segment.  Look for an optional\n    // non-captured trailing slash (to match a portion of the URL) or the end\n    // of the path (if we've matched to the end).  We used to do this with a\n    // word boundary but that gives false positives on routes like\n    // /user-preferences since `-` counts as a word boundary.\n    regexpSource += \"(?:(?=\\\\/|$))\";\n  } else ;\n  let matcher = new RegExp(regexpSource, caseSensitive ? undefined : \"i\");\n  return [matcher, params];\n}\nfunction decodePath(value) {\n  try {\n    return value.split(\"/\").map(v => decodeURIComponent(v).replace(/\\//g, \"%2F\")).join(\"/\");\n  } catch (error) {\n    warning(false, \"The URL path \\\"\" + value + \"\\\" could not be decoded because it is is a \" + \"malformed URL segment. This is probably due to a bad percent \" + (\"encoding (\" + error + \").\"));\n    return value;\n  }\n}\n/**\n * @private\n */\nfunction stripBasename(pathname, basename) {\n  if (basename === \"/\") return pathname;\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n  // We want to leave trailing slash behavior in the user's control, so if they\n  // specify a basename with a trailing slash, we should support it\n  let startIndex = basename.endsWith(\"/\") ? basename.length - 1 : basename.length;\n  let nextChar = pathname.charAt(startIndex);\n  if (nextChar && nextChar !== \"/\") {\n    // pathname does not start with basename/\n    return null;\n  }\n  return pathname.slice(startIndex) || \"/\";\n}\n/**\n * Returns a resolved path object relative to the given pathname.\n *\n * @see https://reactrouter.com/v6/utils/resolve-path\n */\nfunction resolvePath(to, fromPathname) {\n  if (fromPathname === void 0) {\n    fromPathname = \"/\";\n  }\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\"\n  } = typeof to === \"string\" ? parsePath(to) : to;\n  let pathname = toPathname ? toPathname.startsWith(\"/\") ? toPathname : resolvePathname(toPathname, fromPathname) : fromPathname;\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash)\n  };\n}\nfunction resolvePathname(relativePath, fromPathname) {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n  relativeSegments.forEach(segment => {\n    if (segment === \"..\") {\n      // Keep the root \"\" segment so the pathname starts at /\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\nfunction getInvalidPathError(char, field, dest, path) {\n  return \"Cannot include a '\" + char + \"' character in a manually specified \" + (\"`to.\" + field + \"` field [\" + JSON.stringify(path) + \"].  Please separate it out to the \") + (\"`to.\" + dest + \"` field. Alternatively you may provide the full path as \") + \"a string in <Link to=\\\"...\\\"> and the router will parse it for you.\";\n}\n/**\n * @private\n *\n * When processing relative navigation we want to ignore ancestor routes that\n * do not contribute to the path, such that index/pathless layout routes don't\n * interfere.\n *\n * For example, when moving a route element into an index route and/or a\n * pathless layout route, relative link behavior contained within should stay\n * the same.  Both of the following examples should link back to the root:\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\" element={<Link to=\"..\"}>\n *   </Route>\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\">\n *       <Route element={<AccountsLayout />}>       // <-- Does not contribute\n *         <Route index element={<Link to=\"..\"} />  // <-- Does not contribute\n *       </Route\n *     </Route>\n *   </Route>\n */\nfunction getPathContributingMatches(matches) {\n  return matches.filter((match, index) => index === 0 || match.route.path && match.route.path.length > 0);\n}\n// Return the array of pathnames for the current route matches - used to\n// generate the routePathnames input for resolveTo()\nfunction getResolveToMatches(matches, v7_relativeSplatPath) {\n  let pathMatches = getPathContributingMatches(matches);\n  // When v7_relativeSplatPath is enabled, use the full pathname for the leaf\n  // match so we include splat values for \".\" links.  See:\n  // https://github.com/remix-run/react-router/issues/11052#issuecomment-1836589329\n  if (v7_relativeSplatPath) {\n    return pathMatches.map((match, idx) => idx === pathMatches.length - 1 ? match.pathname : match.pathnameBase);\n  }\n  return pathMatches.map(match => match.pathnameBase);\n}\n/**\n * @private\n */\nfunction resolveTo(toArg, routePathnames, locationPathname, isPathRelative) {\n  if (isPathRelative === void 0) {\n    isPathRelative = false;\n  }\n  let to;\n  if (typeof toArg === \"string\") {\n    to = parsePath(toArg);\n  } else {\n    to = _extends({}, toArg);\n    invariant(!to.pathname || !to.pathname.includes(\"?\"), getInvalidPathError(\"?\", \"pathname\", \"search\", to));\n    invariant(!to.pathname || !to.pathname.includes(\"#\"), getInvalidPathError(\"#\", \"pathname\", \"hash\", to));\n    invariant(!to.search || !to.search.includes(\"#\"), getInvalidPathError(\"#\", \"search\", \"hash\", to));\n  }\n  let isEmptyPath = toArg === \"\" || to.pathname === \"\";\n  let toPathname = isEmptyPath ? \"/\" : to.pathname;\n  let from;\n  // Routing is relative to the current pathname if explicitly requested.\n  //\n  // If a pathname is explicitly provided in `to`, it should be relative to the\n  // route context. This is explained in `Note on `<Link to>` values` in our\n  // migration guide from v5 as a means of disambiguation between `to` values\n  // that begin with `/` and those that do not. However, this is problematic for\n  // `to` values that do not provide a pathname. `to` can simply be a search or\n  // hash string, in which case we should assume that the navigation is relative\n  // to the current location's pathname and *not* the route pathname.\n  if (toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n    // With relative=\"route\" (the default), each leading .. segment means\n    // \"go up one route\" instead of \"go up one URL segment\".  This is a key\n    // difference from how <a href> works and a major reason we call this a\n    // \"to\" value instead of a \"href\".\n    if (!isPathRelative && toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\");\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n      to.pathname = toSegments.join(\"/\");\n    }\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n  let path = resolvePath(to, from);\n  // Ensure the pathname has a trailing slash if the original \"to\" had one\n  let hasExplicitTrailingSlash = toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\");\n  // Or if this was a link to the current path which has a trailing slash\n  let hasCurrentTrailingSlash = (isEmptyPath || toPathname === \".\") && locationPathname.endsWith(\"/\");\n  if (!path.pathname.endsWith(\"/\") && (hasExplicitTrailingSlash || hasCurrentTrailingSlash)) {\n    path.pathname += \"/\";\n  }\n  return path;\n}\n/**\n * @private\n */\nfunction getToPathname(to) {\n  // Empty strings should be treated the same as / paths\n  return to === \"\" || to.pathname === \"\" ? \"/\" : typeof to === \"string\" ? parsePath(to).pathname : to.pathname;\n}\n/**\n * @private\n */\nconst joinPaths = paths => paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\n/**\n * @private\n */\nconst normalizePathname = pathname => pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\n/**\n * @private\n */\nconst normalizeSearch = search => !search || search === \"?\" ? \"\" : search.startsWith(\"?\") ? search : \"?\" + search;\n/**\n * @private\n */\nconst normalizeHash = hash => !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\n/**\n * This is a shortcut for creating `application/json` responses. Converts `data`\n * to JSON and sets the `Content-Type` header.\n *\n * @deprecated The `json` method is deprecated in favor of returning raw objects.\n * This method will be removed in v7.\n */\nconst json = function json(data, init) {\n  if (init === void 0) {\n    init = {};\n  }\n  let responseInit = typeof init === \"number\" ? {\n    status: init\n  } : init;\n  let headers = new Headers(responseInit.headers);\n  if (!headers.has(\"Content-Type\")) {\n    headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n  }\n  return new Response(JSON.stringify(data), _extends({}, responseInit, {\n    headers\n  }));\n};\nclass DataWithResponseInit {\n  constructor(data, init) {\n    this.type = \"DataWithResponseInit\";\n    this.data = data;\n    this.init = init || null;\n  }\n}\n/**\n * Create \"responses\" that contain `status`/`headers` without forcing\n * serialization into an actual `Response` - used by Remix single fetch\n */\nfunction data(data, init) {\n  return new DataWithResponseInit(data, typeof init === \"number\" ? {\n    status: init\n  } : init);\n}\nclass AbortedDeferredError extends Error {}\nclass DeferredData {\n  constructor(data, responseInit) {\n    this.pendingKeysSet = new Set();\n    this.subscribers = new Set();\n    this.deferredKeys = [];\n    invariant(data && typeof data === \"object\" && !Array.isArray(data), \"defer() only accepts plain objects\");\n    // Set up an AbortController + Promise we can race against to exit early\n    // cancellation\n    let reject;\n    this.abortPromise = new Promise((_, r) => reject = r);\n    this.controller = new AbortController();\n    let onAbort = () => reject(new AbortedDeferredError(\"Deferred data aborted\"));\n    this.unlistenAbortSignal = () => this.controller.signal.removeEventListener(\"abort\", onAbort);\n    this.controller.signal.addEventListener(\"abort\", onAbort);\n    this.data = Object.entries(data).reduce((acc, _ref2) => {\n      let [key, value] = _ref2;\n      return Object.assign(acc, {\n        [key]: this.trackPromise(key, value)\n      });\n    }, {});\n    if (this.done) {\n      // All incoming values were resolved\n      this.unlistenAbortSignal();\n    }\n    this.init = responseInit;\n  }\n  trackPromise(key, value) {\n    if (!(value instanceof Promise)) {\n      return value;\n    }\n    this.deferredKeys.push(key);\n    this.pendingKeysSet.add(key);\n    // We store a little wrapper promise that will be extended with\n    // _data/_error props upon resolve/reject\n    let promise = Promise.race([value, this.abortPromise]).then(data => this.onSettle(promise, key, undefined, data), error => this.onSettle(promise, key, error));\n    // Register rejection listeners to avoid uncaught promise rejections on\n    // errors or aborted deferred values\n    promise.catch(() => {});\n    Object.defineProperty(promise, \"_tracked\", {\n      get: () => true\n    });\n    return promise;\n  }\n  onSettle(promise, key, error, data) {\n    if (this.controller.signal.aborted && error instanceof AbortedDeferredError) {\n      this.unlistenAbortSignal();\n      Object.defineProperty(promise, \"_error\", {\n        get: () => error\n      });\n      return Promise.reject(error);\n    }\n    this.pendingKeysSet.delete(key);\n    if (this.done) {\n      // Nothing left to abort!\n      this.unlistenAbortSignal();\n    }\n    // If the promise was resolved/rejected with undefined, we'll throw an error as you\n    // should always resolve with a value or null\n    if (error === undefined && data === undefined) {\n      let undefinedError = new Error(\"Deferred data for key \\\"\" + key + \"\\\" resolved/rejected with `undefined`, \" + \"you must resolve/reject with a value or `null`.\");\n      Object.defineProperty(promise, \"_error\", {\n        get: () => undefinedError\n      });\n      this.emit(false, key);\n      return Promise.reject(undefinedError);\n    }\n    if (data === undefined) {\n      Object.defineProperty(promise, \"_error\", {\n        get: () => error\n      });\n      this.emit(false, key);\n      return Promise.reject(error);\n    }\n    Object.defineProperty(promise, \"_data\", {\n      get: () => data\n    });\n    this.emit(false, key);\n    return data;\n  }\n  emit(aborted, settledKey) {\n    this.subscribers.forEach(subscriber => subscriber(aborted, settledKey));\n  }\n  subscribe(fn) {\n    this.subscribers.add(fn);\n    return () => this.subscribers.delete(fn);\n  }\n  cancel() {\n    this.controller.abort();\n    this.pendingKeysSet.forEach((v, k) => this.pendingKeysSet.delete(k));\n    this.emit(true);\n  }\n  async resolveData(signal) {\n    let aborted = false;\n    if (!this.done) {\n      let onAbort = () => this.cancel();\n      signal.addEventListener(\"abort\", onAbort);\n      aborted = await new Promise(resolve => {\n        this.subscribe(aborted => {\n          signal.removeEventListener(\"abort\", onAbort);\n          if (aborted || this.done) {\n            resolve(aborted);\n          }\n        });\n      });\n    }\n    return aborted;\n  }\n  get done() {\n    return this.pendingKeysSet.size === 0;\n  }\n  get unwrappedData() {\n    invariant(this.data !== null && this.done, \"Can only unwrap data on initialized and settled deferreds\");\n    return Object.entries(this.data).reduce((acc, _ref3) => {\n      let [key, value] = _ref3;\n      return Object.assign(acc, {\n        [key]: unwrapTrackedPromise(value)\n      });\n    }, {});\n  }\n  get pendingKeys() {\n    return Array.from(this.pendingKeysSet);\n  }\n}\nfunction isTrackedPromise(value) {\n  return value instanceof Promise && value._tracked === true;\n}\nfunction unwrapTrackedPromise(value) {\n  if (!isTrackedPromise(value)) {\n    return value;\n  }\n  if (value._error) {\n    throw value._error;\n  }\n  return value._data;\n}\n/**\n * @deprecated The `defer` method is deprecated in favor of returning raw\n * objects. This method will be removed in v7.\n */\nconst defer = function defer(data, init) {\n  if (init === void 0) {\n    init = {};\n  }\n  let responseInit = typeof init === \"number\" ? {\n    status: init\n  } : init;\n  return new DeferredData(data, responseInit);\n};\n/**\n * A redirect response. Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nconst redirect = function redirect(url, init) {\n  if (init === void 0) {\n    init = 302;\n  }\n  let responseInit = init;\n  if (typeof responseInit === \"number\") {\n    responseInit = {\n      status: responseInit\n    };\n  } else if (typeof responseInit.status === \"undefined\") {\n    responseInit.status = 302;\n  }\n  let headers = new Headers(responseInit.headers);\n  headers.set(\"Location\", url);\n  return new Response(null, _extends({}, responseInit, {\n    headers\n  }));\n};\n/**\n * A redirect response that will force a document reload to the new location.\n * Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nconst redirectDocument = (url, init) => {\n  let response = redirect(url, init);\n  response.headers.set(\"X-Remix-Reload-Document\", \"true\");\n  return response;\n};\n/**\n * A redirect response that will perform a `history.replaceState` instead of a\n * `history.pushState` for client-side navigation redirects.\n * Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nconst replace = (url, init) => {\n  let response = redirect(url, init);\n  response.headers.set(\"X-Remix-Replace\", \"true\");\n  return response;\n};\n/**\n * @private\n * Utility class we use to hold auto-unwrapped 4xx/5xx Response bodies\n *\n * We don't export the class for public use since it's an implementation\n * detail, but we export the interface above so folks can build their own\n * abstractions around instances via isRouteErrorResponse()\n */\nclass ErrorResponseImpl {\n  constructor(status, statusText, data, internal) {\n    if (internal === void 0) {\n      internal = false;\n    }\n    this.status = status;\n    this.statusText = statusText || \"\";\n    this.internal = internal;\n    if (data instanceof Error) {\n      this.data = data.toString();\n      this.error = data;\n    } else {\n      this.data = data;\n    }\n  }\n}\n/**\n * Check if the given error is an ErrorResponse generated from a 4xx/5xx\n * Response thrown from an action/loader\n */\nfunction isRouteErrorResponse(error) {\n  return error != null && typeof error.status === \"number\" && typeof error.statusText === \"string\" && typeof error.internal === \"boolean\" && \"data\" in error;\n}\n\nconst validMutationMethodsArr = [\"post\", \"put\", \"patch\", \"delete\"];\nconst validMutationMethods = new Set(validMutationMethodsArr);\nconst validRequestMethodsArr = [\"get\", ...validMutationMethodsArr];\nconst validRequestMethods = new Set(validRequestMethodsArr);\nconst redirectStatusCodes = new Set([301, 302, 303, 307, 308]);\nconst redirectPreserveMethodStatusCodes = new Set([307, 308]);\nconst IDLE_NAVIGATION = {\n  state: \"idle\",\n  location: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined\n};\nconst IDLE_FETCHER = {\n  state: \"idle\",\n  data: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined\n};\nconst IDLE_BLOCKER = {\n  state: \"unblocked\",\n  proceed: undefined,\n  reset: undefined,\n  location: undefined\n};\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\nconst defaultMapRouteProperties = route => ({\n  hasErrorBoundary: Boolean(route.hasErrorBoundary)\n});\nconst TRANSITIONS_STORAGE_KEY = \"remix-router-transitions\";\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region createRouter\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Create a router and listen to history POP navigations\n */\nfunction createRouter(init) {\n  const routerWindow = init.window ? init.window : typeof window !== \"undefined\" ? window : undefined;\n  const isBrowser = typeof routerWindow !== \"undefined\" && typeof routerWindow.document !== \"undefined\" && typeof routerWindow.document.createElement !== \"undefined\";\n  const isServer = !isBrowser;\n  invariant(init.routes.length > 0, \"You must provide a non-empty routes array to createRouter\");\n  let mapRouteProperties;\n  if (init.mapRouteProperties) {\n    mapRouteProperties = init.mapRouteProperties;\n  } else if (init.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = init.detectErrorBoundary;\n    mapRouteProperties = route => ({\n      hasErrorBoundary: detectErrorBoundary(route)\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n  // Routes keyed by ID\n  let manifest = {};\n  // Routes in tree format for matching\n  let dataRoutes = convertRoutesToDataRoutes(init.routes, mapRouteProperties, undefined, manifest);\n  let inFlightDataRoutes;\n  let basename = init.basename || \"/\";\n  let dataStrategyImpl = init.dataStrategy || defaultDataStrategy;\n  let patchRoutesOnNavigationImpl = init.patchRoutesOnNavigation;\n  // Config driven behavior flags\n  let future = _extends({\n    v7_fetcherPersist: false,\n    v7_normalizeFormMethod: false,\n    v7_partialHydration: false,\n    v7_prependBasename: false,\n    v7_relativeSplatPath: false,\n    v7_skipActionErrorRevalidation: false\n  }, init.future);\n  // Cleanup function for history\n  let unlistenHistory = null;\n  // Externally-provided functions to call on all state changes\n  let subscribers = new Set();\n  // Externally-provided object to hold scroll restoration locations during routing\n  let savedScrollPositions = null;\n  // Externally-provided function to get scroll restoration keys\n  let getScrollRestorationKey = null;\n  // Externally-provided function to get current scroll position\n  let getScrollPosition = null;\n  // One-time flag to control the initial hydration scroll restoration.  Because\n  // we don't get the saved positions from <ScrollRestoration /> until _after_\n  // the initial render, we need to manually trigger a separate updateState to\n  // send along the restoreScrollPosition\n  // Set to true if we have `hydrationData` since we assume we were SSR'd and that\n  // SSR did the initial scroll restoration.\n  let initialScrollRestored = init.hydrationData != null;\n  let initialMatches = matchRoutes(dataRoutes, init.history.location, basename);\n  let initialMatchesIsFOW = false;\n  let initialErrors = null;\n  if (initialMatches == null && !patchRoutesOnNavigationImpl) {\n    // If we do not match a user-provided-route, fall back to the root\n    // to allow the error boundary to take over\n    let error = getInternalRouterError(404, {\n      pathname: init.history.location.pathname\n    });\n    let {\n      matches,\n      route\n    } = getShortCircuitMatches(dataRoutes);\n    initialMatches = matches;\n    initialErrors = {\n      [route.id]: error\n    };\n  }\n  // In SPA apps, if the user provided a patchRoutesOnNavigation implementation and\n  // our initial match is a splat route, clear them out so we run through lazy\n  // discovery on hydration in case there's a more accurate lazy route match.\n  // In SSR apps (with `hydrationData`), we expect that the server will send\n  // up the proper matched routes so we don't want to run lazy discovery on\n  // initial hydration and want to hydrate into the splat route.\n  if (initialMatches && !init.hydrationData) {\n    let fogOfWar = checkFogOfWar(initialMatches, dataRoutes, init.history.location.pathname);\n    if (fogOfWar.active) {\n      initialMatches = null;\n    }\n  }\n  let initialized;\n  if (!initialMatches) {\n    initialized = false;\n    initialMatches = [];\n    // If partial hydration and fog of war is enabled, we will be running\n    // `patchRoutesOnNavigation` during hydration so include any partial matches as\n    // the initial matches so we can properly render `HydrateFallback`'s\n    if (future.v7_partialHydration) {\n      let fogOfWar = checkFogOfWar(null, dataRoutes, init.history.location.pathname);\n      if (fogOfWar.active && fogOfWar.matches) {\n        initialMatchesIsFOW = true;\n        initialMatches = fogOfWar.matches;\n      }\n    }\n  } else if (initialMatches.some(m => m.route.lazy)) {\n    // All initialMatches need to be loaded before we're ready.  If we have lazy\n    // functions around still then we'll need to run them in initialize()\n    initialized = false;\n  } else if (!initialMatches.some(m => m.route.loader)) {\n    // If we've got no loaders to run, then we're good to go\n    initialized = true;\n  } else if (future.v7_partialHydration) {\n    // If partial hydration is enabled, we're initialized so long as we were\n    // provided with hydrationData for every route with a loader, and no loaders\n    // were marked for explicit hydration\n    let loaderData = init.hydrationData ? init.hydrationData.loaderData : null;\n    let errors = init.hydrationData ? init.hydrationData.errors : null;\n    // If errors exist, don't consider routes below the boundary\n    if (errors) {\n      let idx = initialMatches.findIndex(m => errors[m.route.id] !== undefined);\n      initialized = initialMatches.slice(0, idx + 1).every(m => !shouldLoadRouteOnHydration(m.route, loaderData, errors));\n    } else {\n      initialized = initialMatches.every(m => !shouldLoadRouteOnHydration(m.route, loaderData, errors));\n    }\n  } else {\n    // Without partial hydration - we're initialized if we were provided any\n    // hydrationData - which is expected to be complete\n    initialized = init.hydrationData != null;\n  }\n  let router;\n  let state = {\n    historyAction: init.history.action,\n    location: init.history.location,\n    matches: initialMatches,\n    initialized,\n    navigation: IDLE_NAVIGATION,\n    // Don't restore on initial updateState() if we were SSR'd\n    restoreScrollPosition: init.hydrationData != null ? false : null,\n    preventScrollReset: false,\n    revalidation: \"idle\",\n    loaderData: init.hydrationData && init.hydrationData.loaderData || {},\n    actionData: init.hydrationData && init.hydrationData.actionData || null,\n    errors: init.hydrationData && init.hydrationData.errors || initialErrors,\n    fetchers: new Map(),\n    blockers: new Map()\n  };\n  // -- Stateful internal variables to manage navigations --\n  // Current navigation in progress (to be committed in completeNavigation)\n  let pendingAction = Action.Pop;\n  // Should the current navigation prevent the scroll reset if scroll cannot\n  // be restored?\n  let pendingPreventScrollReset = false;\n  // AbortController for the active navigation\n  let pendingNavigationController;\n  // Should the current navigation enable document.startViewTransition?\n  let pendingViewTransitionEnabled = false;\n  // Store applied view transitions so we can apply them on POP\n  let appliedViewTransitions = new Map();\n  // Cleanup function for persisting applied transitions to sessionStorage\n  let removePageHideEventListener = null;\n  // We use this to avoid touching history in completeNavigation if a\n  // revalidation is entirely uninterrupted\n  let isUninterruptedRevalidation = false;\n  // Use this internal flag to force revalidation of all loaders:\n  //  - submissions (completed or interrupted)\n  //  - useRevalidator()\n  //  - X-Remix-Revalidate (from redirect)\n  let isRevalidationRequired = false;\n  // Use this internal array to capture routes that require revalidation due\n  // to a cancelled deferred on action submission\n  let cancelledDeferredRoutes = [];\n  // Use this internal array to capture fetcher loads that were cancelled by an\n  // action navigation and require revalidation\n  let cancelledFetcherLoads = new Set();\n  // AbortControllers for any in-flight fetchers\n  let fetchControllers = new Map();\n  // Track loads based on the order in which they started\n  let incrementingLoadId = 0;\n  // Track the outstanding pending navigation data load to be compared against\n  // the globally incrementing load when a fetcher load lands after a completed\n  // navigation\n  let pendingNavigationLoadId = -1;\n  // Fetchers that triggered data reloads as a result of their actions\n  let fetchReloadIds = new Map();\n  // Fetchers that triggered redirect navigations\n  let fetchRedirectIds = new Set();\n  // Most recent href/match for fetcher.load calls for fetchers\n  let fetchLoadMatches = new Map();\n  // Ref-count mounted fetchers so we know when it's ok to clean them up\n  let activeFetchers = new Map();\n  // Fetchers that have requested a delete when using v7_fetcherPersist,\n  // they'll be officially removed after they return to idle\n  let deletedFetchers = new Set();\n  // Store DeferredData instances for active route matches.  When a\n  // route loader returns defer() we stick one in here.  Then, when a nested\n  // promise resolves we update loaderData.  If a new navigation starts we\n  // cancel active deferreds for eliminated routes.\n  let activeDeferreds = new Map();\n  // Store blocker functions in a separate Map outside of router state since\n  // we don't need to update UI state if they change\n  let blockerFunctions = new Map();\n  // Flag to ignore the next history update, so we can revert the URL change on\n  // a POP navigation that was blocked by the user without touching router state\n  let unblockBlockerHistoryUpdate = undefined;\n  // Initialize the router, all side effects should be kicked off from here.\n  // Implemented as a Fluent API for ease of:\n  //   let router = createRouter(init).initialize();\n  function initialize() {\n    // If history informs us of a POP navigation, start the navigation but do not update\n    // state.  We'll update our own state once the navigation completes\n    unlistenHistory = init.history.listen(_ref => {\n      let {\n        action: historyAction,\n        location,\n        delta\n      } = _ref;\n      // Ignore this event if it was just us resetting the URL from a\n      // blocked POP navigation\n      if (unblockBlockerHistoryUpdate) {\n        unblockBlockerHistoryUpdate();\n        unblockBlockerHistoryUpdate = undefined;\n        return;\n      }\n      warning(blockerFunctions.size === 0 || delta != null, \"You are trying to use a blocker on a POP navigation to a location \" + \"that was not created by @remix-run/router. This will fail silently in \" + \"production. This can happen if you are navigating outside the router \" + \"via `window.history.pushState`/`window.location.hash` instead of using \" + \"router navigation APIs.  This can also happen if you are using \" + \"createHashRouter and the user manually changes the URL.\");\n      let blockerKey = shouldBlockNavigation({\n        currentLocation: state.location,\n        nextLocation: location,\n        historyAction\n      });\n      if (blockerKey && delta != null) {\n        // Restore the URL to match the current UI, but don't update router state\n        let nextHistoryUpdatePromise = new Promise(resolve => {\n          unblockBlockerHistoryUpdate = resolve;\n        });\n        init.history.go(delta * -1);\n        // Put the blocker into a blocked state\n        updateBlocker(blockerKey, {\n          state: \"blocked\",\n          location,\n          proceed() {\n            updateBlocker(blockerKey, {\n              state: \"proceeding\",\n              proceed: undefined,\n              reset: undefined,\n              location\n            });\n            // Re-do the same POP navigation we just blocked, after the url\n            // restoration is also complete.  See:\n            // https://github.com/remix-run/react-router/issues/11613\n            nextHistoryUpdatePromise.then(() => init.history.go(delta));\n          },\n          reset() {\n            let blockers = new Map(state.blockers);\n            blockers.set(blockerKey, IDLE_BLOCKER);\n            updateState({\n              blockers\n            });\n          }\n        });\n        return;\n      }\n      return startNavigation(historyAction, location);\n    });\n    if (isBrowser) {\n      // FIXME: This feels gross.  How can we cleanup the lines between\n      // scrollRestoration/appliedTransitions persistance?\n      restoreAppliedTransitions(routerWindow, appliedViewTransitions);\n      let _saveAppliedTransitions = () => persistAppliedTransitions(routerWindow, appliedViewTransitions);\n      routerWindow.addEventListener(\"pagehide\", _saveAppliedTransitions);\n      removePageHideEventListener = () => routerWindow.removeEventListener(\"pagehide\", _saveAppliedTransitions);\n    }\n    // Kick off initial data load if needed.  Use Pop to avoid modifying history\n    // Note we don't do any handling of lazy here.  For SPA's it'll get handled\n    // in the normal navigation flow.  For SSR it's expected that lazy modules are\n    // resolved prior to router creation since we can't go into a fallbackElement\n    // UI for SSR'd apps\n    if (!state.initialized) {\n      startNavigation(Action.Pop, state.location, {\n        initialHydration: true\n      });\n    }\n    return router;\n  }\n  // Clean up a router and it's side effects\n  function dispose() {\n    if (unlistenHistory) {\n      unlistenHistory();\n    }\n    if (removePageHideEventListener) {\n      removePageHideEventListener();\n    }\n    subscribers.clear();\n    pendingNavigationController && pendingNavigationController.abort();\n    state.fetchers.forEach((_, key) => deleteFetcher(key));\n    state.blockers.forEach((_, key) => deleteBlocker(key));\n  }\n  // Subscribe to state updates for the router\n  function subscribe(fn) {\n    subscribers.add(fn);\n    return () => subscribers.delete(fn);\n  }\n  // Update our state and notify the calling context of the change\n  function updateState(newState, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    state = _extends({}, state, newState);\n    // Prep fetcher cleanup so we can tell the UI which fetcher data entries\n    // can be removed\n    let completedFetchers = [];\n    let deletedFetchersKeys = [];\n    if (future.v7_fetcherPersist) {\n      state.fetchers.forEach((fetcher, key) => {\n        if (fetcher.state === \"idle\") {\n          if (deletedFetchers.has(key)) {\n            // Unmounted from the UI and can be totally removed\n            deletedFetchersKeys.push(key);\n          } else {\n            // Returned to idle but still mounted in the UI, so semi-remains for\n            // revalidations and such\n            completedFetchers.push(key);\n          }\n        }\n      });\n    }\n    // Remove any lingering deleted fetchers that have already been removed\n    // from state.fetchers\n    deletedFetchers.forEach(key => {\n      if (!state.fetchers.has(key) && !fetchControllers.has(key)) {\n        deletedFetchersKeys.push(key);\n      }\n    });\n    // Iterate over a local copy so that if flushSync is used and we end up\n    // removing and adding a new subscriber due to the useCallback dependencies,\n    // we don't get ourselves into a loop calling the new subscriber immediately\n    [...subscribers].forEach(subscriber => subscriber(state, {\n      deletedFetchers: deletedFetchersKeys,\n      viewTransitionOpts: opts.viewTransitionOpts,\n      flushSync: opts.flushSync === true\n    }));\n    // Remove idle fetchers from state since we only care about in-flight fetchers.\n    if (future.v7_fetcherPersist) {\n      completedFetchers.forEach(key => state.fetchers.delete(key));\n      deletedFetchersKeys.forEach(key => deleteFetcher(key));\n    } else {\n      // We already called deleteFetcher() on these, can remove them from this\n      // Set now that we've handed the keys off to the data layer\n      deletedFetchersKeys.forEach(key => deletedFetchers.delete(key));\n    }\n  }\n  // Complete a navigation returning the state.navigation back to the IDLE_NAVIGATION\n  // and setting state.[historyAction/location/matches] to the new route.\n  // - Location is a required param\n  // - Navigation will always be set to IDLE_NAVIGATION\n  // - Can pass any other state in newState\n  function completeNavigation(location, newState, _temp) {\n    var _location$state, _location$state2;\n    let {\n      flushSync\n    } = _temp === void 0 ? {} : _temp;\n    // Deduce if we're in a loading/actionReload state:\n    // - We have committed actionData in the store\n    // - The current navigation was a mutation submission\n    // - We're past the submitting state and into the loading state\n    // - The location being loaded is not the result of a redirect\n    let isActionReload = state.actionData != null && state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && state.navigation.state === \"loading\" && ((_location$state = location.state) == null ? void 0 : _location$state._isRedirect) !== true;\n    let actionData;\n    if (newState.actionData) {\n      if (Object.keys(newState.actionData).length > 0) {\n        actionData = newState.actionData;\n      } else {\n        // Empty actionData -> clear prior actionData due to an action error\n        actionData = null;\n      }\n    } else if (isActionReload) {\n      // Keep the current data if we're wrapping up the action reload\n      actionData = state.actionData;\n    } else {\n      // Clear actionData on any other completed navigations\n      actionData = null;\n    }\n    // Always preserve any existing loaderData from re-used routes\n    let loaderData = newState.loaderData ? mergeLoaderData(state.loaderData, newState.loaderData, newState.matches || [], newState.errors) : state.loaderData;\n    // On a successful navigation we can assume we got through all blockers\n    // so we can start fresh\n    let blockers = state.blockers;\n    if (blockers.size > 0) {\n      blockers = new Map(blockers);\n      blockers.forEach((_, k) => blockers.set(k, IDLE_BLOCKER));\n    }\n    // Always respect the user flag.  Otherwise don't reset on mutation\n    // submission navigations unless they redirect\n    let preventScrollReset = pendingPreventScrollReset === true || state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && ((_location$state2 = location.state) == null ? void 0 : _location$state2._isRedirect) !== true;\n    // Commit any in-flight routes at the end of the HMR revalidation \"navigation\"\n    if (inFlightDataRoutes) {\n      dataRoutes = inFlightDataRoutes;\n      inFlightDataRoutes = undefined;\n    }\n    if (isUninterruptedRevalidation) ; else if (pendingAction === Action.Pop) ; else if (pendingAction === Action.Push) {\n      init.history.push(location, location.state);\n    } else if (pendingAction === Action.Replace) {\n      init.history.replace(location, location.state);\n    }\n    let viewTransitionOpts;\n    // On POP, enable transitions if they were enabled on the original navigation\n    if (pendingAction === Action.Pop) {\n      // Forward takes precedence so they behave like the original navigation\n      let priorPaths = appliedViewTransitions.get(state.location.pathname);\n      if (priorPaths && priorPaths.has(location.pathname)) {\n        viewTransitionOpts = {\n          currentLocation: state.location,\n          nextLocation: location\n        };\n      } else if (appliedViewTransitions.has(location.pathname)) {\n        // If we don't have a previous forward nav, assume we're popping back to\n        // the new location and enable if that location previously enabled\n        viewTransitionOpts = {\n          currentLocation: location,\n          nextLocation: state.location\n        };\n      }\n    } else if (pendingViewTransitionEnabled) {\n      // Store the applied transition on PUSH/REPLACE\n      let toPaths = appliedViewTransitions.get(state.location.pathname);\n      if (toPaths) {\n        toPaths.add(location.pathname);\n      } else {\n        toPaths = new Set([location.pathname]);\n        appliedViewTransitions.set(state.location.pathname, toPaths);\n      }\n      viewTransitionOpts = {\n        currentLocation: state.location,\n        nextLocation: location\n      };\n    }\n    updateState(_extends({}, newState, {\n      actionData,\n      loaderData,\n      historyAction: pendingAction,\n      location,\n      initialized: true,\n      navigation: IDLE_NAVIGATION,\n      revalidation: \"idle\",\n      restoreScrollPosition: getSavedScrollPosition(location, newState.matches || state.matches),\n      preventScrollReset,\n      blockers\n    }), {\n      viewTransitionOpts,\n      flushSync: flushSync === true\n    });\n    // Reset stateful navigation vars\n    pendingAction = Action.Pop;\n    pendingPreventScrollReset = false;\n    pendingViewTransitionEnabled = false;\n    isUninterruptedRevalidation = false;\n    isRevalidationRequired = false;\n    cancelledDeferredRoutes = [];\n  }\n  // Trigger a navigation event, which can either be a numerical POP or a PUSH\n  // replace with an optional submission\n  async function navigate(to, opts) {\n    if (typeof to === \"number\") {\n      init.history.go(to);\n      return;\n    }\n    let normalizedPath = normalizeTo(state.location, state.matches, basename, future.v7_prependBasename, to, future.v7_relativeSplatPath, opts == null ? void 0 : opts.fromRouteId, opts == null ? void 0 : opts.relative);\n    let {\n      path,\n      submission,\n      error\n    } = normalizeNavigateOptions(future.v7_normalizeFormMethod, false, normalizedPath, opts);\n    let currentLocation = state.location;\n    let nextLocation = createLocation(state.location, path, opts && opts.state);\n    // When using navigate as a PUSH/REPLACE we aren't reading an already-encoded\n    // URL from window.location, so we need to encode it here so the behavior\n    // remains the same as POP and non-data-router usages.  new URL() does all\n    // the same encoding we'd get from a history.pushState/window.location read\n    // without having to touch history\n    nextLocation = _extends({}, nextLocation, init.history.encodeLocation(nextLocation));\n    let userReplace = opts && opts.replace != null ? opts.replace : undefined;\n    let historyAction = Action.Push;\n    if (userReplace === true) {\n      historyAction = Action.Replace;\n    } else if (userReplace === false) ; else if (submission != null && isMutationMethod(submission.formMethod) && submission.formAction === state.location.pathname + state.location.search) {\n      // By default on submissions to the current location we REPLACE so that\n      // users don't have to double-click the back button to get to the prior\n      // location.  If the user redirects to a different location from the\n      // action/loader this will be ignored and the redirect will be a PUSH\n      historyAction = Action.Replace;\n    }\n    let preventScrollReset = opts && \"preventScrollReset\" in opts ? opts.preventScrollReset === true : undefined;\n    let flushSync = (opts && opts.flushSync) === true;\n    let blockerKey = shouldBlockNavigation({\n      currentLocation,\n      nextLocation,\n      historyAction\n    });\n    if (blockerKey) {\n      // Put the blocker into a blocked state\n      updateBlocker(blockerKey, {\n        state: \"blocked\",\n        location: nextLocation,\n        proceed() {\n          updateBlocker(blockerKey, {\n            state: \"proceeding\",\n            proceed: undefined,\n            reset: undefined,\n            location: nextLocation\n          });\n          // Send the same navigation through\n          navigate(to, opts);\n        },\n        reset() {\n          let blockers = new Map(state.blockers);\n          blockers.set(blockerKey, IDLE_BLOCKER);\n          updateState({\n            blockers\n          });\n        }\n      });\n      return;\n    }\n    return await startNavigation(historyAction, nextLocation, {\n      submission,\n      // Send through the formData serialization error if we have one so we can\n      // render at the right error boundary after we match routes\n      pendingError: error,\n      preventScrollReset,\n      replace: opts && opts.replace,\n      enableViewTransition: opts && opts.viewTransition,\n      flushSync\n    });\n  }\n  // Revalidate all current loaders.  If a navigation is in progress or if this\n  // is interrupted by a navigation, allow this to \"succeed\" by calling all\n  // loaders during the next loader round\n  function revalidate() {\n    interruptActiveLoads();\n    updateState({\n      revalidation: \"loading\"\n    });\n    // If we're currently submitting an action, we don't need to start a new\n    // navigation, we'll just let the follow up loader execution call all loaders\n    if (state.navigation.state === \"submitting\") {\n      return;\n    }\n    // If we're currently in an idle state, start a new navigation for the current\n    // action/location and mark it as uninterrupted, which will skip the history\n    // update in completeNavigation\n    if (state.navigation.state === \"idle\") {\n      startNavigation(state.historyAction, state.location, {\n        startUninterruptedRevalidation: true\n      });\n      return;\n    }\n    // Otherwise, if we're currently in a loading state, just start a new\n    // navigation to the navigation.location but do not trigger an uninterrupted\n    // revalidation so that history correctly updates once the navigation completes\n    startNavigation(pendingAction || state.historyAction, state.navigation.location, {\n      overrideNavigation: state.navigation,\n      // Proxy through any rending view transition\n      enableViewTransition: pendingViewTransitionEnabled === true\n    });\n  }\n  // Start a navigation to the given action/location.  Can optionally provide a\n  // overrideNavigation which will override the normalLoad in the case of a redirect\n  // navigation\n  async function startNavigation(historyAction, location, opts) {\n    // Abort any in-progress navigations and start a new one. Unset any ongoing\n    // uninterrupted revalidations unless told otherwise, since we want this\n    // new navigation to update history normally\n    pendingNavigationController && pendingNavigationController.abort();\n    pendingNavigationController = null;\n    pendingAction = historyAction;\n    isUninterruptedRevalidation = (opts && opts.startUninterruptedRevalidation) === true;\n    // Save the current scroll position every time we start a new navigation,\n    // and track whether we should reset scroll on completion\n    saveScrollPosition(state.location, state.matches);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n    pendingViewTransitionEnabled = (opts && opts.enableViewTransition) === true;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let loadingNavigation = opts && opts.overrideNavigation;\n    let matches = opts != null && opts.initialHydration && state.matches && state.matches.length > 0 && !initialMatchesIsFOW ?\n    // `matchRoutes()` has already been called if we're in here via `router.initialize()`\n    state.matches : matchRoutes(routesToUse, location, basename);\n    let flushSync = (opts && opts.flushSync) === true;\n    let fogOfWar = checkFogOfWar(matches, routesToUse, location.pathname);\n    if (fogOfWar.active && fogOfWar.matches) {\n      matches = fogOfWar.matches;\n    }\n    // Short circuit with a 404 on the root error boundary if we match nothing\n    if (!matches) {\n      let {\n        error,\n        notFoundMatches,\n        route\n      } = handleNavigational404(location.pathname);\n      completeNavigation(location, {\n        matches: notFoundMatches,\n        loaderData: {},\n        errors: {\n          [route.id]: error\n        }\n      }, {\n        flushSync\n      });\n      return;\n    }\n    // Short circuit if it's only a hash change and not a revalidation or\n    // mutation submission.\n    //\n    // Ignore on initial page loads because since the initial hydration will always\n    // be \"same hash\".  For example, on /page#hash and submit a <Form method=\"post\">\n    // which will default to a navigation to /page\n    if (state.initialized && !isRevalidationRequired && isHashChangeOnly(state.location, location) && !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))) {\n      completeNavigation(location, {\n        matches\n      }, {\n        flushSync\n      });\n      return;\n    }\n    // Create a controller/Request for this navigation\n    pendingNavigationController = new AbortController();\n    let request = createClientSideRequest(init.history, location, pendingNavigationController.signal, opts && opts.submission);\n    let pendingActionResult;\n    if (opts && opts.pendingError) {\n      // If we have a pendingError, it means the user attempted a GET submission\n      // with binary FormData so assign here and skip to handleLoaders.  That\n      // way we handle calling loaders above the boundary etc.  It's not really\n      // different from an actionError in that sense.\n      pendingActionResult = [findNearestBoundary(matches).route.id, {\n        type: ResultType.error,\n        error: opts.pendingError\n      }];\n    } else if (opts && opts.submission && isMutationMethod(opts.submission.formMethod)) {\n      // Call action if we received an action submission\n      let actionResult = await handleAction(request, location, opts.submission, matches, fogOfWar.active, {\n        replace: opts.replace,\n        flushSync\n      });\n      if (actionResult.shortCircuited) {\n        return;\n      }\n      // If we received a 404 from handleAction, it's because we couldn't lazily\n      // discover the destination route so we don't want to call loaders\n      if (actionResult.pendingActionResult) {\n        let [routeId, result] = actionResult.pendingActionResult;\n        if (isErrorResult(result) && isRouteErrorResponse(result.error) && result.error.status === 404) {\n          pendingNavigationController = null;\n          completeNavigation(location, {\n            matches: actionResult.matches,\n            loaderData: {},\n            errors: {\n              [routeId]: result.error\n            }\n          });\n          return;\n        }\n      }\n      matches = actionResult.matches || matches;\n      pendingActionResult = actionResult.pendingActionResult;\n      loadingNavigation = getLoadingNavigation(location, opts.submission);\n      flushSync = false;\n      // No need to do fog of war matching again on loader execution\n      fogOfWar.active = false;\n      // Create a GET request for the loaders\n      request = createClientSideRequest(init.history, request.url, request.signal);\n    }\n    // Call loaders\n    let {\n      shortCircuited,\n      matches: updatedMatches,\n      loaderData,\n      errors\n    } = await handleLoaders(request, location, matches, fogOfWar.active, loadingNavigation, opts && opts.submission, opts && opts.fetcherSubmission, opts && opts.replace, opts && opts.initialHydration === true, flushSync, pendingActionResult);\n    if (shortCircuited) {\n      return;\n    }\n    // Clean up now that the action/loaders have completed.  Don't clean up if\n    // we short circuited because pendingNavigationController will have already\n    // been assigned to a new controller for the next navigation\n    pendingNavigationController = null;\n    completeNavigation(location, _extends({\n      matches: updatedMatches || matches\n    }, getActionDataForCommit(pendingActionResult), {\n      loaderData,\n      errors\n    }));\n  }\n  // Call the action matched by the leaf route for this navigation and handle\n  // redirects/errors\n  async function handleAction(request, location, submission, matches, isFogOfWar, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    interruptActiveLoads();\n    // Put us in a submitting state\n    let navigation = getSubmittingNavigation(location, submission);\n    updateState({\n      navigation\n    }, {\n      flushSync: opts.flushSync === true\n    });\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(matches, location.pathname, request.signal);\n      if (discoverResult.type === \"aborted\") {\n        return {\n          shortCircuited: true\n        };\n      } else if (discoverResult.type === \"error\") {\n        let boundaryId = findNearestBoundary(discoverResult.partialMatches).route.id;\n        return {\n          matches: discoverResult.partialMatches,\n          pendingActionResult: [boundaryId, {\n            type: ResultType.error,\n            error: discoverResult.error\n          }]\n        };\n      } else if (!discoverResult.matches) {\n        let {\n          notFoundMatches,\n          error,\n          route\n        } = handleNavigational404(location.pathname);\n        return {\n          matches: notFoundMatches,\n          pendingActionResult: [route.id, {\n            type: ResultType.error,\n            error\n          }]\n        };\n      } else {\n        matches = discoverResult.matches;\n      }\n    }\n    // Call our action and get the result\n    let result;\n    let actionMatch = getTargetMatch(matches, location);\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      result = {\n        type: ResultType.error,\n        error: getInternalRouterError(405, {\n          method: request.method,\n          pathname: location.pathname,\n          routeId: actionMatch.route.id\n        })\n      };\n    } else {\n      let results = await callDataStrategy(\"action\", state, request, [actionMatch], matches, null);\n      result = results[actionMatch.route.id];\n      if (request.signal.aborted) {\n        return {\n          shortCircuited: true\n        };\n      }\n    }\n    if (isRedirectResult(result)) {\n      let replace;\n      if (opts && opts.replace != null) {\n        replace = opts.replace;\n      } else {\n        // If the user didn't explicity indicate replace behavior, replace if\n        // we redirected to the exact same location we're currently at to avoid\n        // double back-buttons\n        let location = normalizeRedirectLocation(result.response.headers.get(\"Location\"), new URL(request.url), basename);\n        replace = location === state.location.pathname + state.location.search;\n      }\n      await startRedirectNavigation(request, result, true, {\n        submission,\n        replace\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    if (isDeferredResult(result)) {\n      throw getInternalRouterError(400, {\n        type: \"defer-action\"\n      });\n    }\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n      // By default, all submissions to the current location are REPLACE\n      // navigations, but if the action threw an error that'll be rendered in\n      // an errorElement, we fall back to PUSH so that the user can use the\n      // back button to get back to the pre-submission form location to try\n      // again\n      if ((opts && opts.replace) !== true) {\n        pendingAction = Action.Push;\n      }\n      return {\n        matches,\n        pendingActionResult: [boundaryMatch.route.id, result]\n      };\n    }\n    return {\n      matches,\n      pendingActionResult: [actionMatch.route.id, result]\n    };\n  }\n  // Call all applicable loaders for the given matches, handling redirects,\n  // errors, etc.\n  async function handleLoaders(request, location, matches, isFogOfWar, overrideNavigation, submission, fetcherSubmission, replace, initialHydration, flushSync, pendingActionResult) {\n    // Figure out the right navigation we want to use for data loading\n    let loadingNavigation = overrideNavigation || getLoadingNavigation(location, submission);\n    // If this was a redirect from an action we don't have a \"submission\" but\n    // we have it on the loading navigation so use that if available\n    let activeSubmission = submission || fetcherSubmission || getSubmissionFromNavigation(loadingNavigation);\n    // If this is an uninterrupted revalidation, we remain in our current idle\n    // state.  If not, we need to switch to our loading state and load data,\n    // preserving any new action data or existing action data (in the case of\n    // a revalidation interrupting an actionReload)\n    // If we have partialHydration enabled, then don't update the state for the\n    // initial data load since it's not a \"navigation\"\n    let shouldUpdateNavigationState = !isUninterruptedRevalidation && (!future.v7_partialHydration || !initialHydration);\n    // When fog of war is enabled, we enter our `loading` state earlier so we\n    // can discover new routes during the `loading` state.  We skip this if\n    // we've already run actions since we would have done our matching already.\n    // If the children() function threw then, we want to proceed with the\n    // partial matches it discovered.\n    if (isFogOfWar) {\n      if (shouldUpdateNavigationState) {\n        let actionData = getUpdatedActionData(pendingActionResult);\n        updateState(_extends({\n          navigation: loadingNavigation\n        }, actionData !== undefined ? {\n          actionData\n        } : {}), {\n          flushSync\n        });\n      }\n      let discoverResult = await discoverRoutes(matches, location.pathname, request.signal);\n      if (discoverResult.type === \"aborted\") {\n        return {\n          shortCircuited: true\n        };\n      } else if (discoverResult.type === \"error\") {\n        let boundaryId = findNearestBoundary(discoverResult.partialMatches).route.id;\n        return {\n          matches: discoverResult.partialMatches,\n          loaderData: {},\n          errors: {\n            [boundaryId]: discoverResult.error\n          }\n        };\n      } else if (!discoverResult.matches) {\n        let {\n          error,\n          notFoundMatches,\n          route\n        } = handleNavigational404(location.pathname);\n        return {\n          matches: notFoundMatches,\n          loaderData: {},\n          errors: {\n            [route.id]: error\n          }\n        };\n      } else {\n        matches = discoverResult.matches;\n      }\n    }\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(init.history, state, matches, activeSubmission, location, future.v7_partialHydration && initialHydration === true, future.v7_skipActionErrorRevalidation, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, deletedFetchers, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, pendingActionResult);\n    // Cancel pending deferreds for no-longer-matched routes or routes we're\n    // about to reload.  Note that if this is an action reload we would have\n    // already cancelled all pending deferreds so this would be a no-op\n    cancelActiveDeferreds(routeId => !(matches && matches.some(m => m.route.id === routeId)) || matchesToLoad && matchesToLoad.some(m => m.route.id === routeId));\n    pendingNavigationLoadId = ++incrementingLoadId;\n    // Short circuit if we have no loaders to run\n    if (matchesToLoad.length === 0 && revalidatingFetchers.length === 0) {\n      let updatedFetchers = markFetchRedirectsDone();\n      completeNavigation(location, _extends({\n        matches,\n        loaderData: {},\n        // Commit pending error if we're short circuiting\n        errors: pendingActionResult && isErrorResult(pendingActionResult[1]) ? {\n          [pendingActionResult[0]]: pendingActionResult[1].error\n        } : null\n      }, getActionDataForCommit(pendingActionResult), updatedFetchers ? {\n        fetchers: new Map(state.fetchers)\n      } : {}), {\n        flushSync\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    if (shouldUpdateNavigationState) {\n      let updates = {};\n      if (!isFogOfWar) {\n        // Only update navigation/actionNData if we didn't already do it above\n        updates.navigation = loadingNavigation;\n        let actionData = getUpdatedActionData(pendingActionResult);\n        if (actionData !== undefined) {\n          updates.actionData = actionData;\n        }\n      }\n      if (revalidatingFetchers.length > 0) {\n        updates.fetchers = getUpdatedRevalidatingFetchers(revalidatingFetchers);\n      }\n      updateState(updates, {\n        flushSync\n      });\n    }\n    revalidatingFetchers.forEach(rf => {\n      abortFetcher(rf.key);\n      if (rf.controller) {\n        // Fetchers use an independent AbortController so that aborting a fetcher\n        // (via deleteFetcher) does not abort the triggering navigation that\n        // triggered the revalidation\n        fetchControllers.set(rf.key, rf.controller);\n      }\n    });\n    // Proxy navigation abort through to revalidation fetchers\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach(f => abortFetcher(f.key));\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.addEventListener(\"abort\", abortPendingFetchRevalidations);\n    }\n    let {\n      loaderResults,\n      fetcherResults\n    } = await callLoadersAndMaybeResolveData(state, matches, matchesToLoad, revalidatingFetchers, request);\n    if (request.signal.aborted) {\n      return {\n        shortCircuited: true\n      };\n    }\n    // Clean up _after_ loaders have completed.  Don't clean up if we short\n    // circuited because fetchControllers would have been aborted and\n    // reassigned to new controllers for the next navigation\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.removeEventListener(\"abort\", abortPendingFetchRevalidations);\n    }\n    revalidatingFetchers.forEach(rf => fetchControllers.delete(rf.key));\n    // If any loaders returned a redirect Response, start a new REPLACE navigation\n    let redirect = findRedirect(loaderResults);\n    if (redirect) {\n      await startRedirectNavigation(request, redirect.result, true, {\n        replace\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    redirect = findRedirect(fetcherResults);\n    if (redirect) {\n      // If this redirect came from a fetcher make sure we mark it in\n      // fetchRedirectIds so it doesn't get revalidated on the next set of\n      // loader executions\n      fetchRedirectIds.add(redirect.key);\n      await startRedirectNavigation(request, redirect.result, true, {\n        replace\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    // Process and commit output from loaders\n    let {\n      loaderData,\n      errors\n    } = processLoaderData(state, matches, loaderResults, pendingActionResult, revalidatingFetchers, fetcherResults, activeDeferreds);\n    // Wire up subscribers to update loaderData as promises settle\n    activeDeferreds.forEach((deferredData, routeId) => {\n      deferredData.subscribe(aborted => {\n        // Note: No need to updateState here since the TrackedPromise on\n        // loaderData is stable across resolve/reject\n        // Remove this instance if we were aborted or if promises have settled\n        if (aborted || deferredData.done) {\n          activeDeferreds.delete(routeId);\n        }\n      });\n    });\n    // Preserve SSR errors during partial hydration\n    if (future.v7_partialHydration && initialHydration && state.errors) {\n      errors = _extends({}, state.errors, errors);\n    }\n    let updatedFetchers = markFetchRedirectsDone();\n    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);\n    let shouldUpdateFetchers = updatedFetchers || didAbortFetchLoads || revalidatingFetchers.length > 0;\n    return _extends({\n      matches,\n      loaderData,\n      errors\n    }, shouldUpdateFetchers ? {\n      fetchers: new Map(state.fetchers)\n    } : {});\n  }\n  function getUpdatedActionData(pendingActionResult) {\n    if (pendingActionResult && !isErrorResult(pendingActionResult[1])) {\n      // This is cast to `any` currently because `RouteData`uses any and it\n      // would be a breaking change to use any.\n      // TODO: v7 - change `RouteData` to use `unknown` instead of `any`\n      return {\n        [pendingActionResult[0]]: pendingActionResult[1].data\n      };\n    } else if (state.actionData) {\n      if (Object.keys(state.actionData).length === 0) {\n        return null;\n      } else {\n        return state.actionData;\n      }\n    }\n  }\n  function getUpdatedRevalidatingFetchers(revalidatingFetchers) {\n    revalidatingFetchers.forEach(rf => {\n      let fetcher = state.fetchers.get(rf.key);\n      let revalidatingFetcher = getLoadingFetcher(undefined, fetcher ? fetcher.data : undefined);\n      state.fetchers.set(rf.key, revalidatingFetcher);\n    });\n    return new Map(state.fetchers);\n  }\n  // Trigger a fetcher load/submit for the given fetcher key\n  function fetch(key, routeId, href, opts) {\n    if (isServer) {\n      throw new Error(\"router.fetch() was called during the server render, but it shouldn't be. \" + \"You are likely calling a useFetcher() method in the body of your component. \" + \"Try moving it to a useEffect or a callback.\");\n    }\n    abortFetcher(key);\n    let flushSync = (opts && opts.flushSync) === true;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let normalizedPath = normalizeTo(state.location, state.matches, basename, future.v7_prependBasename, href, future.v7_relativeSplatPath, routeId, opts == null ? void 0 : opts.relative);\n    let matches = matchRoutes(routesToUse, normalizedPath, basename);\n    let fogOfWar = checkFogOfWar(matches, routesToUse, normalizedPath);\n    if (fogOfWar.active && fogOfWar.matches) {\n      matches = fogOfWar.matches;\n    }\n    if (!matches) {\n      setFetcherError(key, routeId, getInternalRouterError(404, {\n        pathname: normalizedPath\n      }), {\n        flushSync\n      });\n      return;\n    }\n    let {\n      path,\n      submission,\n      error\n    } = normalizeNavigateOptions(future.v7_normalizeFormMethod, true, normalizedPath, opts);\n    if (error) {\n      setFetcherError(key, routeId, error, {\n        flushSync\n      });\n      return;\n    }\n    let match = getTargetMatch(matches, path);\n    let preventScrollReset = (opts && opts.preventScrollReset) === true;\n    if (submission && isMutationMethod(submission.formMethod)) {\n      handleFetcherAction(key, routeId, path, match, matches, fogOfWar.active, flushSync, preventScrollReset, submission);\n      return;\n    }\n    // Store off the match so we can call it's shouldRevalidate on subsequent\n    // revalidations\n    fetchLoadMatches.set(key, {\n      routeId,\n      path\n    });\n    handleFetcherLoader(key, routeId, path, match, matches, fogOfWar.active, flushSync, preventScrollReset, submission);\n  }\n  // Call the action for the matched fetcher.submit(), and then handle redirects,\n  // errors, and revalidation\n  async function handleFetcherAction(key, routeId, path, match, requestMatches, isFogOfWar, flushSync, preventScrollReset, submission) {\n    interruptActiveLoads();\n    fetchLoadMatches.delete(key);\n    function detectAndHandle405Error(m) {\n      if (!m.route.action && !m.route.lazy) {\n        let error = getInternalRouterError(405, {\n          method: submission.formMethod,\n          pathname: path,\n          routeId: routeId\n        });\n        setFetcherError(key, routeId, error, {\n          flushSync\n        });\n        return true;\n      }\n      return false;\n    }\n    if (!isFogOfWar && detectAndHandle405Error(match)) {\n      return;\n    }\n    // Put this fetcher into it's submitting state\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(key, getSubmittingFetcher(submission, existingFetcher), {\n      flushSync\n    });\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(init.history, path, abortController.signal, submission);\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(requestMatches, new URL(fetchRequest.url).pathname, fetchRequest.signal);\n      if (discoverResult.type === \"aborted\") {\n        return;\n      } else if (discoverResult.type === \"error\") {\n        setFetcherError(key, routeId, discoverResult.error, {\n          flushSync\n        });\n        return;\n      } else if (!discoverResult.matches) {\n        setFetcherError(key, routeId, getInternalRouterError(404, {\n          pathname: path\n        }), {\n          flushSync\n        });\n        return;\n      } else {\n        requestMatches = discoverResult.matches;\n        match = getTargetMatch(requestMatches, path);\n        if (detectAndHandle405Error(match)) {\n          return;\n        }\n      }\n    }\n    // Call the action for the fetcher\n    fetchControllers.set(key, abortController);\n    let originatingLoadId = incrementingLoadId;\n    let actionResults = await callDataStrategy(\"action\", state, fetchRequest, [match], requestMatches, key);\n    let actionResult = actionResults[match.route.id];\n    if (fetchRequest.signal.aborted) {\n      // We can delete this so long as we weren't aborted by our own fetcher\n      // re-submit which would have put _new_ controller is in fetchControllers\n      if (fetchControllers.get(key) === abortController) {\n        fetchControllers.delete(key);\n      }\n      return;\n    }\n    // When using v7_fetcherPersist, we don't want errors bubbling up to the UI\n    // or redirects processed for unmounted fetchers so we just revert them to\n    // idle\n    if (future.v7_fetcherPersist && deletedFetchers.has(key)) {\n      if (isRedirectResult(actionResult) || isErrorResult(actionResult)) {\n        updateFetcherState(key, getDoneFetcher(undefined));\n        return;\n      }\n      // Let SuccessResult's fall through for revalidation\n    } else {\n      if (isRedirectResult(actionResult)) {\n        fetchControllers.delete(key);\n        if (pendingNavigationLoadId > originatingLoadId) {\n          // A new navigation was kicked off after our action started, so that\n          // should take precedence over this redirect navigation.  We already\n          // set isRevalidationRequired so all loaders for the new route should\n          // fire unless opted out via shouldRevalidate\n          updateFetcherState(key, getDoneFetcher(undefined));\n          return;\n        } else {\n          fetchRedirectIds.add(key);\n          updateFetcherState(key, getLoadingFetcher(submission));\n          return startRedirectNavigation(fetchRequest, actionResult, false, {\n            fetcherSubmission: submission,\n            preventScrollReset\n          });\n        }\n      }\n      // Process any non-redirect errors thrown\n      if (isErrorResult(actionResult)) {\n        setFetcherError(key, routeId, actionResult.error);\n        return;\n      }\n    }\n    if (isDeferredResult(actionResult)) {\n      throw getInternalRouterError(400, {\n        type: \"defer-action\"\n      });\n    }\n    // Start the data load for current matches, or the next location if we're\n    // in the middle of a navigation\n    let nextLocation = state.navigation.location || state.location;\n    let revalidationRequest = createClientSideRequest(init.history, nextLocation, abortController.signal);\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let matches = state.navigation.state !== \"idle\" ? matchRoutes(routesToUse, state.navigation.location, basename) : state.matches;\n    invariant(matches, \"Didn't find any matches after fetcher action\");\n    let loadId = ++incrementingLoadId;\n    fetchReloadIds.set(key, loadId);\n    let loadFetcher = getLoadingFetcher(submission, actionResult.data);\n    state.fetchers.set(key, loadFetcher);\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(init.history, state, matches, submission, nextLocation, false, future.v7_skipActionErrorRevalidation, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, deletedFetchers, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, [match.route.id, actionResult]);\n    // Put all revalidating fetchers into the loading state, except for the\n    // current fetcher which we want to keep in it's current loading state which\n    // contains it's action submission info + action data\n    revalidatingFetchers.filter(rf => rf.key !== key).forEach(rf => {\n      let staleKey = rf.key;\n      let existingFetcher = state.fetchers.get(staleKey);\n      let revalidatingFetcher = getLoadingFetcher(undefined, existingFetcher ? existingFetcher.data : undefined);\n      state.fetchers.set(staleKey, revalidatingFetcher);\n      abortFetcher(staleKey);\n      if (rf.controller) {\n        fetchControllers.set(staleKey, rf.controller);\n      }\n    });\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach(rf => abortFetcher(rf.key));\n    abortController.signal.addEventListener(\"abort\", abortPendingFetchRevalidations);\n    let {\n      loaderResults,\n      fetcherResults\n    } = await callLoadersAndMaybeResolveData(state, matches, matchesToLoad, revalidatingFetchers, revalidationRequest);\n    if (abortController.signal.aborted) {\n      return;\n    }\n    abortController.signal.removeEventListener(\"abort\", abortPendingFetchRevalidations);\n    fetchReloadIds.delete(key);\n    fetchControllers.delete(key);\n    revalidatingFetchers.forEach(r => fetchControllers.delete(r.key));\n    let redirect = findRedirect(loaderResults);\n    if (redirect) {\n      return startRedirectNavigation(revalidationRequest, redirect.result, false, {\n        preventScrollReset\n      });\n    }\n    redirect = findRedirect(fetcherResults);\n    if (redirect) {\n      // If this redirect came from a fetcher make sure we mark it in\n      // fetchRedirectIds so it doesn't get revalidated on the next set of\n      // loader executions\n      fetchRedirectIds.add(redirect.key);\n      return startRedirectNavigation(revalidationRequest, redirect.result, false, {\n        preventScrollReset\n      });\n    }\n    // Process and commit output from loaders\n    let {\n      loaderData,\n      errors\n    } = processLoaderData(state, matches, loaderResults, undefined, revalidatingFetchers, fetcherResults, activeDeferreds);\n    // Since we let revalidations complete even if the submitting fetcher was\n    // deleted, only put it back to idle if it hasn't been deleted\n    if (state.fetchers.has(key)) {\n      let doneFetcher = getDoneFetcher(actionResult.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n    abortStaleFetchLoads(loadId);\n    // If we are currently in a navigation loading state and this fetcher is\n    // more recent than the navigation, we want the newer data so abort the\n    // navigation and complete it with the fetcher data\n    if (state.navigation.state === \"loading\" && loadId > pendingNavigationLoadId) {\n      invariant(pendingAction, \"Expected pending action\");\n      pendingNavigationController && pendingNavigationController.abort();\n      completeNavigation(state.navigation.location, {\n        matches,\n        loaderData,\n        errors,\n        fetchers: new Map(state.fetchers)\n      });\n    } else {\n      // otherwise just update with the fetcher data, preserving any existing\n      // loaderData for loaders that did not need to reload.  We have to\n      // manually merge here since we aren't going through completeNavigation\n      updateState({\n        errors,\n        loaderData: mergeLoaderData(state.loaderData, loaderData, matches, errors),\n        fetchers: new Map(state.fetchers)\n      });\n      isRevalidationRequired = false;\n    }\n  }\n  // Call the matched loader for fetcher.load(), handling redirects, errors, etc.\n  async function handleFetcherLoader(key, routeId, path, match, matches, isFogOfWar, flushSync, preventScrollReset, submission) {\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(key, getLoadingFetcher(submission, existingFetcher ? existingFetcher.data : undefined), {\n      flushSync\n    });\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(init.history, path, abortController.signal);\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(matches, new URL(fetchRequest.url).pathname, fetchRequest.signal);\n      if (discoverResult.type === \"aborted\") {\n        return;\n      } else if (discoverResult.type === \"error\") {\n        setFetcherError(key, routeId, discoverResult.error, {\n          flushSync\n        });\n        return;\n      } else if (!discoverResult.matches) {\n        setFetcherError(key, routeId, getInternalRouterError(404, {\n          pathname: path\n        }), {\n          flushSync\n        });\n        return;\n      } else {\n        matches = discoverResult.matches;\n        match = getTargetMatch(matches, path);\n      }\n    }\n    // Call the loader for this fetcher route match\n    fetchControllers.set(key, abortController);\n    let originatingLoadId = incrementingLoadId;\n    let results = await callDataStrategy(\"loader\", state, fetchRequest, [match], matches, key);\n    let result = results[match.route.id];\n    // Deferred isn't supported for fetcher loads, await everything and treat it\n    // as a normal load.  resolveDeferredData will return undefined if this\n    // fetcher gets aborted, so we just leave result untouched and short circuit\n    // below if that happens\n    if (isDeferredResult(result)) {\n      result = (await resolveDeferredData(result, fetchRequest.signal, true)) || result;\n    }\n    // We can delete this so long as we weren't aborted by our our own fetcher\n    // re-load which would have put _new_ controller is in fetchControllers\n    if (fetchControllers.get(key) === abortController) {\n      fetchControllers.delete(key);\n    }\n    if (fetchRequest.signal.aborted) {\n      return;\n    }\n    // We don't want errors bubbling up or redirects followed for unmounted\n    // fetchers, so short circuit here if it was removed from the UI\n    if (deletedFetchers.has(key)) {\n      updateFetcherState(key, getDoneFetcher(undefined));\n      return;\n    }\n    // If the loader threw a redirect Response, start a new REPLACE navigation\n    if (isRedirectResult(result)) {\n      if (pendingNavigationLoadId > originatingLoadId) {\n        // A new navigation was kicked off after our loader started, so that\n        // should take precedence over this redirect navigation\n        updateFetcherState(key, getDoneFetcher(undefined));\n        return;\n      } else {\n        fetchRedirectIds.add(key);\n        await startRedirectNavigation(fetchRequest, result, false, {\n          preventScrollReset\n        });\n        return;\n      }\n    }\n    // Process any non-redirect errors thrown\n    if (isErrorResult(result)) {\n      setFetcherError(key, routeId, result.error);\n      return;\n    }\n    invariant(!isDeferredResult(result), \"Unhandled fetcher deferred data\");\n    // Put the fetcher back into an idle state\n    updateFetcherState(key, getDoneFetcher(result.data));\n  }\n  /**\n   * Utility function to handle redirects returned from an action or loader.\n   * Normally, a redirect \"replaces\" the navigation that triggered it.  So, for\n   * example:\n   *\n   *  - user is on /a\n   *  - user clicks a link to /b\n   *  - loader for /b redirects to /c\n   *\n   * In a non-JS app the browser would track the in-flight navigation to /b and\n   * then replace it with /c when it encountered the redirect response.  In\n   * the end it would only ever update the URL bar with /c.\n   *\n   * In client-side routing using pushState/replaceState, we aim to emulate\n   * this behavior and we also do not update history until the end of the\n   * navigation (including processed redirects).  This means that we never\n   * actually touch history until we've processed redirects, so we just use\n   * the history action from the original navigation (PUSH or REPLACE).\n   */\n  async function startRedirectNavigation(request, redirect, isNavigation, _temp2) {\n    let {\n      submission,\n      fetcherSubmission,\n      preventScrollReset,\n      replace\n    } = _temp2 === void 0 ? {} : _temp2;\n    if (redirect.response.headers.has(\"X-Remix-Revalidate\")) {\n      isRevalidationRequired = true;\n    }\n    let location = redirect.response.headers.get(\"Location\");\n    invariant(location, \"Expected a Location header on the redirect Response\");\n    location = normalizeRedirectLocation(location, new URL(request.url), basename);\n    let redirectLocation = createLocation(state.location, location, {\n      _isRedirect: true\n    });\n    if (isBrowser) {\n      let isDocumentReload = false;\n      if (redirect.response.headers.has(\"X-Remix-Reload-Document\")) {\n        // Hard reload if the response contained X-Remix-Reload-Document\n        isDocumentReload = true;\n      } else if (ABSOLUTE_URL_REGEX.test(location)) {\n        const url = init.history.createURL(location);\n        isDocumentReload =\n        // Hard reload if it's an absolute URL to a new origin\n        url.origin !== routerWindow.location.origin ||\n        // Hard reload if it's an absolute URL that does not match our basename\n        stripBasename(url.pathname, basename) == null;\n      }\n      if (isDocumentReload) {\n        if (replace) {\n          routerWindow.location.replace(location);\n        } else {\n          routerWindow.location.assign(location);\n        }\n        return;\n      }\n    }\n    // There's no need to abort on redirects, since we don't detect the\n    // redirect until the action/loaders have settled\n    pendingNavigationController = null;\n    let redirectHistoryAction = replace === true || redirect.response.headers.has(\"X-Remix-Replace\") ? Action.Replace : Action.Push;\n    // Use the incoming submission if provided, fallback on the active one in\n    // state.navigation\n    let {\n      formMethod,\n      formAction,\n      formEncType\n    } = state.navigation;\n    if (!submission && !fetcherSubmission && formMethod && formAction && formEncType) {\n      submission = getSubmissionFromNavigation(state.navigation);\n    }\n    // If this was a 307/308 submission we want to preserve the HTTP method and\n    // re-submit the GET/POST/PUT/PATCH/DELETE as a submission navigation to the\n    // redirected location\n    let activeSubmission = submission || fetcherSubmission;\n    if (redirectPreserveMethodStatusCodes.has(redirect.response.status) && activeSubmission && isMutationMethod(activeSubmission.formMethod)) {\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        submission: _extends({}, activeSubmission, {\n          formAction: location\n        }),\n        // Preserve these flags across redirects\n        preventScrollReset: preventScrollReset || pendingPreventScrollReset,\n        enableViewTransition: isNavigation ? pendingViewTransitionEnabled : undefined\n      });\n    } else {\n      // If we have a navigation submission, we will preserve it through the\n      // redirect navigation\n      let overrideNavigation = getLoadingNavigation(redirectLocation, submission);\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        overrideNavigation,\n        // Send fetcher submissions through for shouldRevalidate\n        fetcherSubmission,\n        // Preserve these flags across redirects\n        preventScrollReset: preventScrollReset || pendingPreventScrollReset,\n        enableViewTransition: isNavigation ? pendingViewTransitionEnabled : undefined\n      });\n    }\n  }\n  // Utility wrapper for calling dataStrategy client-side without having to\n  // pass around the manifest, mapRouteProperties, etc.\n  async function callDataStrategy(type, state, request, matchesToLoad, matches, fetcherKey) {\n    let results;\n    let dataResults = {};\n    try {\n      results = await callDataStrategyImpl(dataStrategyImpl, type, state, request, matchesToLoad, matches, fetcherKey, manifest, mapRouteProperties);\n    } catch (e) {\n      // If the outer dataStrategy method throws, just return the error for all\n      // matches - and it'll naturally bubble to the root\n      matchesToLoad.forEach(m => {\n        dataResults[m.route.id] = {\n          type: ResultType.error,\n          error: e\n        };\n      });\n      return dataResults;\n    }\n    for (let [routeId, result] of Object.entries(results)) {\n      if (isRedirectDataStrategyResultResult(result)) {\n        let response = result.result;\n        dataResults[routeId] = {\n          type: ResultType.redirect,\n          response: normalizeRelativeRoutingRedirectResponse(response, request, routeId, matches, basename, future.v7_relativeSplatPath)\n        };\n      } else {\n        dataResults[routeId] = await convertDataStrategyResultToDataResult(result);\n      }\n    }\n    return dataResults;\n  }\n  async function callLoadersAndMaybeResolveData(state, matches, matchesToLoad, fetchersToLoad, request) {\n    let currentMatches = state.matches;\n    // Kick off loaders and fetchers in parallel\n    let loaderResultsPromise = callDataStrategy(\"loader\", state, request, matchesToLoad, matches, null);\n    let fetcherResultsPromise = Promise.all(fetchersToLoad.map(async f => {\n      if (f.matches && f.match && f.controller) {\n        let results = await callDataStrategy(\"loader\", state, createClientSideRequest(init.history, f.path, f.controller.signal), [f.match], f.matches, f.key);\n        let result = results[f.match.route.id];\n        // Fetcher results are keyed by fetcher key from here on out, not routeId\n        return {\n          [f.key]: result\n        };\n      } else {\n        return Promise.resolve({\n          [f.key]: {\n            type: ResultType.error,\n            error: getInternalRouterError(404, {\n              pathname: f.path\n            })\n          }\n        });\n      }\n    }));\n    let loaderResults = await loaderResultsPromise;\n    let fetcherResults = (await fetcherResultsPromise).reduce((acc, r) => Object.assign(acc, r), {});\n    await Promise.all([resolveNavigationDeferredResults(matches, loaderResults, request.signal, currentMatches, state.loaderData), resolveFetcherDeferredResults(matches, fetcherResults, fetchersToLoad)]);\n    return {\n      loaderResults,\n      fetcherResults\n    };\n  }\n  function interruptActiveLoads() {\n    // Every interruption triggers a revalidation\n    isRevalidationRequired = true;\n    // Cancel pending route-level deferreds and mark cancelled routes for\n    // revalidation\n    cancelledDeferredRoutes.push(...cancelActiveDeferreds());\n    // Abort in-flight fetcher loads\n    fetchLoadMatches.forEach((_, key) => {\n      if (fetchControllers.has(key)) {\n        cancelledFetcherLoads.add(key);\n      }\n      abortFetcher(key);\n    });\n  }\n  function updateFetcherState(key, fetcher, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    state.fetchers.set(key, fetcher);\n    updateState({\n      fetchers: new Map(state.fetchers)\n    }, {\n      flushSync: (opts && opts.flushSync) === true\n    });\n  }\n  function setFetcherError(key, routeId, error, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    let boundaryMatch = findNearestBoundary(state.matches, routeId);\n    deleteFetcher(key);\n    updateState({\n      errors: {\n        [boundaryMatch.route.id]: error\n      },\n      fetchers: new Map(state.fetchers)\n    }, {\n      flushSync: (opts && opts.flushSync) === true\n    });\n  }\n  function getFetcher(key) {\n    activeFetchers.set(key, (activeFetchers.get(key) || 0) + 1);\n    // If this fetcher was previously marked for deletion, unmark it since we\n    // have a new instance\n    if (deletedFetchers.has(key)) {\n      deletedFetchers.delete(key);\n    }\n    return state.fetchers.get(key) || IDLE_FETCHER;\n  }\n  function deleteFetcher(key) {\n    let fetcher = state.fetchers.get(key);\n    // Don't abort the controller if this is a deletion of a fetcher.submit()\n    // in it's loading phase since - we don't want to abort the corresponding\n    // revalidation and want them to complete and land\n    if (fetchControllers.has(key) && !(fetcher && fetcher.state === \"loading\" && fetchReloadIds.has(key))) {\n      abortFetcher(key);\n    }\n    fetchLoadMatches.delete(key);\n    fetchReloadIds.delete(key);\n    fetchRedirectIds.delete(key);\n    // If we opted into the flag we can clear this now since we're calling\n    // deleteFetcher() at the end of updateState() and we've already handed the\n    // deleted fetcher keys off to the data layer.\n    // If not, we're eagerly calling deleteFetcher() and we need to keep this\n    // Set populated until the next updateState call, and we'll clear\n    // `deletedFetchers` then\n    if (future.v7_fetcherPersist) {\n      deletedFetchers.delete(key);\n    }\n    cancelledFetcherLoads.delete(key);\n    state.fetchers.delete(key);\n  }\n  function deleteFetcherAndUpdateState(key) {\n    let count = (activeFetchers.get(key) || 0) - 1;\n    if (count <= 0) {\n      activeFetchers.delete(key);\n      deletedFetchers.add(key);\n      if (!future.v7_fetcherPersist) {\n        deleteFetcher(key);\n      }\n    } else {\n      activeFetchers.set(key, count);\n    }\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n  }\n  function abortFetcher(key) {\n    let controller = fetchControllers.get(key);\n    if (controller) {\n      controller.abort();\n      fetchControllers.delete(key);\n    }\n  }\n  function markFetchersDone(keys) {\n    for (let key of keys) {\n      let fetcher = getFetcher(key);\n      let doneFetcher = getDoneFetcher(fetcher.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n  function markFetchRedirectsDone() {\n    let doneKeys = [];\n    let updatedFetchers = false;\n    for (let key of fetchRedirectIds) {\n      let fetcher = state.fetchers.get(key);\n      invariant(fetcher, \"Expected fetcher: \" + key);\n      if (fetcher.state === \"loading\") {\n        fetchRedirectIds.delete(key);\n        doneKeys.push(key);\n        updatedFetchers = true;\n      }\n    }\n    markFetchersDone(doneKeys);\n    return updatedFetchers;\n  }\n  function abortStaleFetchLoads(landedId) {\n    let yeetedKeys = [];\n    for (let [key, id] of fetchReloadIds) {\n      if (id < landedId) {\n        let fetcher = state.fetchers.get(key);\n        invariant(fetcher, \"Expected fetcher: \" + key);\n        if (fetcher.state === \"loading\") {\n          abortFetcher(key);\n          fetchReloadIds.delete(key);\n          yeetedKeys.push(key);\n        }\n      }\n    }\n    markFetchersDone(yeetedKeys);\n    return yeetedKeys.length > 0;\n  }\n  function getBlocker(key, fn) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n    if (blockerFunctions.get(key) !== fn) {\n      blockerFunctions.set(key, fn);\n    }\n    return blocker;\n  }\n  function deleteBlocker(key) {\n    state.blockers.delete(key);\n    blockerFunctions.delete(key);\n  }\n  // Utility function to update blockers, ensuring valid state transitions\n  function updateBlocker(key, newBlocker) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n    // Poor mans state machine :)\n    // https://mermaid.live/edit#pako:eNqVkc9OwzAMxl8l8nnjAYrEtDIOHEBIgwvKJTReGy3_lDpIqO27k6awMG0XcrLlnz87nwdonESogKXXBuE79rq75XZO3-yHds0RJVuv70YrPlUrCEe2HfrORS3rubqZfuhtpg5C9wk5tZ4VKcRUq88q9Z8RS0-48cE1iHJkL0ugbHuFLus9L6spZy8nX9MP2CNdomVaposqu3fGayT8T8-jJQwhepo_UtpgBQaDEUom04dZhAN1aJBDlUKJBxE1ceB2Smj0Mln-IBW5AFU2dwUiktt_2Qaq2dBfaKdEup85UV7Yd-dKjlnkabl2Pvr0DTkTreM\n    invariant(blocker.state === \"unblocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"proceeding\" || blocker.state === \"blocked\" && newBlocker.state === \"unblocked\" || blocker.state === \"proceeding\" && newBlocker.state === \"unblocked\", \"Invalid blocker state transition: \" + blocker.state + \" -> \" + newBlocker.state);\n    let blockers = new Map(state.blockers);\n    blockers.set(key, newBlocker);\n    updateState({\n      blockers\n    });\n  }\n  function shouldBlockNavigation(_ref2) {\n    let {\n      currentLocation,\n      nextLocation,\n      historyAction\n    } = _ref2;\n    if (blockerFunctions.size === 0) {\n      return;\n    }\n    // We ony support a single active blocker at the moment since we don't have\n    // any compelling use cases for multi-blocker yet\n    if (blockerFunctions.size > 1) {\n      warning(false, \"A router only supports one blocker at a time\");\n    }\n    let entries = Array.from(blockerFunctions.entries());\n    let [blockerKey, blockerFunction] = entries[entries.length - 1];\n    let blocker = state.blockers.get(blockerKey);\n    if (blocker && blocker.state === \"proceeding\") {\n      // If the blocker is currently proceeding, we don't need to re-check\n      // it and can let this navigation continue\n      return;\n    }\n    // At this point, we know we're unblocked/blocked so we need to check the\n    // user-provided blocker function\n    if (blockerFunction({\n      currentLocation,\n      nextLocation,\n      historyAction\n    })) {\n      return blockerKey;\n    }\n  }\n  function handleNavigational404(pathname) {\n    let error = getInternalRouterError(404, {\n      pathname\n    });\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let {\n      matches,\n      route\n    } = getShortCircuitMatches(routesToUse);\n    // Cancel all pending deferred on 404s since we don't keep any routes\n    cancelActiveDeferreds();\n    return {\n      notFoundMatches: matches,\n      route,\n      error\n    };\n  }\n  function cancelActiveDeferreds(predicate) {\n    let cancelledRouteIds = [];\n    activeDeferreds.forEach((dfd, routeId) => {\n      if (!predicate || predicate(routeId)) {\n        // Cancel the deferred - but do not remove from activeDeferreds here -\n        // we rely on the subscribers to do that so our tests can assert proper\n        // cleanup via _internalActiveDeferreds\n        dfd.cancel();\n        cancelledRouteIds.push(routeId);\n        activeDeferreds.delete(routeId);\n      }\n    });\n    return cancelledRouteIds;\n  }\n  // Opt in to capturing and reporting scroll positions during navigations,\n  // used by the <ScrollRestoration> component\n  function enableScrollRestoration(positions, getPosition, getKey) {\n    savedScrollPositions = positions;\n    getScrollPosition = getPosition;\n    getScrollRestorationKey = getKey || null;\n    // Perform initial hydration scroll restoration, since we miss the boat on\n    // the initial updateState() because we've not yet rendered <ScrollRestoration/>\n    // and therefore have no savedScrollPositions available\n    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {\n      initialScrollRestored = true;\n      let y = getSavedScrollPosition(state.location, state.matches);\n      if (y != null) {\n        updateState({\n          restoreScrollPosition: y\n        });\n      }\n    }\n    return () => {\n      savedScrollPositions = null;\n      getScrollPosition = null;\n      getScrollRestorationKey = null;\n    };\n  }\n  function getScrollKey(location, matches) {\n    if (getScrollRestorationKey) {\n      let key = getScrollRestorationKey(location, matches.map(m => convertRouteMatchToUiMatch(m, state.loaderData)));\n      return key || location.key;\n    }\n    return location.key;\n  }\n  function saveScrollPosition(location, matches) {\n    if (savedScrollPositions && getScrollPosition) {\n      let key = getScrollKey(location, matches);\n      savedScrollPositions[key] = getScrollPosition();\n    }\n  }\n  function getSavedScrollPosition(location, matches) {\n    if (savedScrollPositions) {\n      let key = getScrollKey(location, matches);\n      let y = savedScrollPositions[key];\n      if (typeof y === \"number\") {\n        return y;\n      }\n    }\n    return null;\n  }\n  function checkFogOfWar(matches, routesToUse, pathname) {\n    if (patchRoutesOnNavigationImpl) {\n      if (!matches) {\n        let fogMatches = matchRoutesImpl(routesToUse, pathname, basename, true);\n        return {\n          active: true,\n          matches: fogMatches || []\n        };\n      } else {\n        if (Object.keys(matches[0].params).length > 0) {\n          // If we matched a dynamic param or a splat, it might only be because\n          // we haven't yet discovered other routes that would match with a\n          // higher score.  Call patchRoutesOnNavigation just to be sure\n          let partialMatches = matchRoutesImpl(routesToUse, pathname, basename, true);\n          return {\n            active: true,\n            matches: partialMatches\n          };\n        }\n      }\n    }\n    return {\n      active: false,\n      matches: null\n    };\n  }\n  async function discoverRoutes(matches, pathname, signal) {\n    if (!patchRoutesOnNavigationImpl) {\n      return {\n        type: \"success\",\n        matches\n      };\n    }\n    let partialMatches = matches;\n    while (true) {\n      let isNonHMR = inFlightDataRoutes == null;\n      let routesToUse = inFlightDataRoutes || dataRoutes;\n      let localManifest = manifest;\n      try {\n        await patchRoutesOnNavigationImpl({\n          signal,\n          path: pathname,\n          matches: partialMatches,\n          patch: (routeId, children) => {\n            if (signal.aborted) return;\n            patchRoutesImpl(routeId, children, routesToUse, localManifest, mapRouteProperties);\n          }\n        });\n      } catch (e) {\n        return {\n          type: \"error\",\n          error: e,\n          partialMatches\n        };\n      } finally {\n        // If we are not in the middle of an HMR revalidation and we changed the\n        // routes, provide a new identity so when we `updateState` at the end of\n        // this navigation/fetch `router.routes` will be a new identity and\n        // trigger a re-run of memoized `router.routes` dependencies.\n        // HMR will already update the identity and reflow when it lands\n        // `inFlightDataRoutes` in `completeNavigation`\n        if (isNonHMR && !signal.aborted) {\n          dataRoutes = [...dataRoutes];\n        }\n      }\n      if (signal.aborted) {\n        return {\n          type: \"aborted\"\n        };\n      }\n      let newMatches = matchRoutes(routesToUse, pathname, basename);\n      if (newMatches) {\n        return {\n          type: \"success\",\n          matches: newMatches\n        };\n      }\n      let newPartialMatches = matchRoutesImpl(routesToUse, pathname, basename, true);\n      // Avoid loops if the second pass results in the same partial matches\n      if (!newPartialMatches || partialMatches.length === newPartialMatches.length && partialMatches.every((m, i) => m.route.id === newPartialMatches[i].route.id)) {\n        return {\n          type: \"success\",\n          matches: null\n        };\n      }\n      partialMatches = newPartialMatches;\n    }\n  }\n  function _internalSetRoutes(newRoutes) {\n    manifest = {};\n    inFlightDataRoutes = convertRoutesToDataRoutes(newRoutes, mapRouteProperties, undefined, manifest);\n  }\n  function patchRoutes(routeId, children) {\n    let isNonHMR = inFlightDataRoutes == null;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    patchRoutesImpl(routeId, children, routesToUse, manifest, mapRouteProperties);\n    // If we are not in the middle of an HMR revalidation and we changed the\n    // routes, provide a new identity and trigger a reflow via `updateState`\n    // to re-run memoized `router.routes` dependencies.\n    // HMR will already update the identity and reflow when it lands\n    // `inFlightDataRoutes` in `completeNavigation`\n    if (isNonHMR) {\n      dataRoutes = [...dataRoutes];\n      updateState({});\n    }\n  }\n  router = {\n    get basename() {\n      return basename;\n    },\n    get future() {\n      return future;\n    },\n    get state() {\n      return state;\n    },\n    get routes() {\n      return dataRoutes;\n    },\n    get window() {\n      return routerWindow;\n    },\n    initialize,\n    subscribe,\n    enableScrollRestoration,\n    navigate,\n    fetch,\n    revalidate,\n    // Passthrough to history-aware createHref used by useHref so we get proper\n    // hash-aware URLs in DOM paths\n    createHref: to => init.history.createHref(to),\n    encodeLocation: to => init.history.encodeLocation(to),\n    getFetcher,\n    deleteFetcher: deleteFetcherAndUpdateState,\n    dispose,\n    getBlocker,\n    deleteBlocker,\n    patchRoutes,\n    _internalFetchControllers: fetchControllers,\n    _internalActiveDeferreds: activeDeferreds,\n    // TODO: Remove setRoutes, it's temporary to avoid dealing with\n    // updating the tree while validating the update algorithm.\n    _internalSetRoutes\n  };\n  return router;\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region createStaticHandler\n////////////////////////////////////////////////////////////////////////////////\nconst UNSAFE_DEFERRED_SYMBOL = Symbol(\"deferred\");\nfunction createStaticHandler(routes, opts) {\n  invariant(routes.length > 0, \"You must provide a non-empty routes array to createStaticHandler\");\n  let manifest = {};\n  let basename = (opts ? opts.basename : null) || \"/\";\n  let mapRouteProperties;\n  if (opts != null && opts.mapRouteProperties) {\n    mapRouteProperties = opts.mapRouteProperties;\n  } else if (opts != null && opts.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = opts.detectErrorBoundary;\n    mapRouteProperties = route => ({\n      hasErrorBoundary: detectErrorBoundary(route)\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n  // Config driven behavior flags\n  let future = _extends({\n    v7_relativeSplatPath: false,\n    v7_throwAbortReason: false\n  }, opts ? opts.future : null);\n  let dataRoutes = convertRoutesToDataRoutes(routes, mapRouteProperties, undefined, manifest);\n  /**\n   * The query() method is intended for document requests, in which we want to\n   * call an optional action and potentially multiple loaders for all nested\n   * routes.  It returns a StaticHandlerContext object, which is very similar\n   * to the router state (location, loaderData, actionData, errors, etc.) and\n   * also adds SSR-specific information such as the statusCode and headers\n   * from action/loaders Responses.\n   *\n   * It _should_ never throw and should report all errors through the\n   * returned context.errors object, properly associating errors to their error\n   * boundary.  Additionally, it tracks _deepestRenderedBoundaryId which can be\n   * used to emulate React error boundaries during SSr by performing a second\n   * pass only down to the boundaryId.\n   *\n   * The one exception where we do not return a StaticHandlerContext is when a\n   * redirect response is returned or thrown from any action/loader.  We\n   * propagate that out and return the raw Response so the HTTP server can\n   * return it directly.\n   *\n   * - `opts.requestContext` is an optional server context that will be passed\n   *   to actions/loaders in the `context` parameter\n   * - `opts.skipLoaderErrorBubbling` is an optional parameter that will prevent\n   *   the bubbling of errors which allows single-fetch-type implementations\n   *   where the client will handle the bubbling and we may need to return data\n   *   for the handling route\n   */\n  async function query(request, _temp3) {\n    let {\n      requestContext,\n      skipLoaderErrorBubbling,\n      dataStrategy\n    } = _temp3 === void 0 ? {} : _temp3;\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\") {\n      let error = getInternalRouterError(405, {\n        method\n      });\n      let {\n        matches: methodNotAllowedMatches,\n        route\n      } = getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: methodNotAllowedMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    } else if (!matches) {\n      let error = getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n      let {\n        matches: notFoundMatches,\n        route\n      } = getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: notFoundMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    }\n    let result = await queryImpl(request, location, matches, requestContext, dataStrategy || null, skipLoaderErrorBubbling === true, null);\n    if (isResponse(result)) {\n      return result;\n    }\n    // When returning StaticHandlerContext, we patch back in the location here\n    // since we need it for React Context.  But this helps keep our submit and\n    // loadRouteData operating on a Request instead of a Location\n    return _extends({\n      location,\n      basename\n    }, result);\n  }\n  /**\n   * The queryRoute() method is intended for targeted route requests, either\n   * for fetch ?_data requests or resource route requests.  In this case, we\n   * are only ever calling a single action or loader, and we are returning the\n   * returned value directly.  In most cases, this will be a Response returned\n   * from the action/loader, but it may be a primitive or other value as well -\n   * and in such cases the calling context should handle that accordingly.\n   *\n   * We do respect the throw/return differentiation, so if an action/loader\n   * throws, then this method will throw the value.  This is important so we\n   * can do proper boundary identification in Remix where a thrown Response\n   * must go to the Catch Boundary but a returned Response is happy-path.\n   *\n   * One thing to note is that any Router-initiated Errors that make sense\n   * to associate with a status code will be thrown as an ErrorResponse\n   * instance which include the raw Error, such that the calling context can\n   * serialize the error as they see fit while including the proper response\n   * code.  Examples here are 404 and 405 errors that occur prior to reaching\n   * any user-defined loaders.\n   *\n   * - `opts.routeId` allows you to specify the specific route handler to call.\n   *   If not provided the handler will determine the proper route by matching\n   *   against `request.url`\n   * - `opts.requestContext` is an optional server context that will be passed\n   *    to actions/loaders in the `context` parameter\n   */\n  async function queryRoute(request, _temp4) {\n    let {\n      routeId,\n      requestContext,\n      dataStrategy\n    } = _temp4 === void 0 ? {} : _temp4;\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\" && method !== \"OPTIONS\") {\n      throw getInternalRouterError(405, {\n        method\n      });\n    } else if (!matches) {\n      throw getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n    }\n    let match = routeId ? matches.find(m => m.route.id === routeId) : getTargetMatch(matches, location);\n    if (routeId && !match) {\n      throw getInternalRouterError(403, {\n        pathname: location.pathname,\n        routeId\n      });\n    } else if (!match) {\n      // This should never hit I don't think?\n      throw getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n    }\n    let result = await queryImpl(request, location, matches, requestContext, dataStrategy || null, false, match);\n    if (isResponse(result)) {\n      return result;\n    }\n    let error = result.errors ? Object.values(result.errors)[0] : undefined;\n    if (error !== undefined) {\n      // If we got back result.errors, that means the loader/action threw\n      // _something_ that wasn't a Response, but it's not guaranteed/required\n      // to be an `instanceof Error` either, so we have to use throw here to\n      // preserve the \"error\" state outside of queryImpl.\n      throw error;\n    }\n    // Pick off the right state value to return\n    if (result.actionData) {\n      return Object.values(result.actionData)[0];\n    }\n    if (result.loaderData) {\n      var _result$activeDeferre;\n      let data = Object.values(result.loaderData)[0];\n      if ((_result$activeDeferre = result.activeDeferreds) != null && _result$activeDeferre[match.route.id]) {\n        data[UNSAFE_DEFERRED_SYMBOL] = result.activeDeferreds[match.route.id];\n      }\n      return data;\n    }\n    return undefined;\n  }\n  async function queryImpl(request, location, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch) {\n    invariant(request.signal, \"query()/queryRoute() requests must contain an AbortController signal\");\n    try {\n      if (isMutationMethod(request.method.toLowerCase())) {\n        let result = await submit(request, matches, routeMatch || getTargetMatch(matches, location), requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch != null);\n        return result;\n      }\n      let result = await loadRouteData(request, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch);\n      return isResponse(result) ? result : _extends({}, result, {\n        actionData: null,\n        actionHeaders: {}\n      });\n    } catch (e) {\n      // If the user threw/returned a Response in callLoaderOrAction for a\n      // `queryRoute` call, we throw the `DataStrategyResult` to bail out early\n      // and then return or throw the raw Response here accordingly\n      if (isDataStrategyResult(e) && isResponse(e.result)) {\n        if (e.type === ResultType.error) {\n          throw e.result;\n        }\n        return e.result;\n      }\n      // Redirects are always returned since they don't propagate to catch\n      // boundaries\n      if (isRedirectResponse(e)) {\n        return e;\n      }\n      throw e;\n    }\n  }\n  async function submit(request, matches, actionMatch, requestContext, dataStrategy, skipLoaderErrorBubbling, isRouteRequest) {\n    let result;\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: actionMatch.route.id\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error\n      };\n    } else {\n      let results = await callDataStrategy(\"action\", request, [actionMatch], matches, isRouteRequest, requestContext, dataStrategy);\n      result = results[actionMatch.route.id];\n      if (request.signal.aborted) {\n        throwStaticHandlerAbortedError(request, isRouteRequest, future);\n      }\n    }\n    if (isRedirectResult(result)) {\n      // Uhhhh - this should never happen, we should always throw these from\n      // callLoaderOrAction, but the type narrowing here keeps TS happy and we\n      // can get back on the \"throw all redirect responses\" train here should\n      // this ever happen :/\n      throw new Response(null, {\n        status: result.response.status,\n        headers: {\n          Location: result.response.headers.get(\"Location\")\n        }\n      });\n    }\n    if (isDeferredResult(result)) {\n      let error = getInternalRouterError(400, {\n        type: \"defer-action\"\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error\n      };\n    }\n    if (isRouteRequest) {\n      // Note: This should only be non-Response values if we get here, since\n      // isRouteRequest should throw any Response received in callLoaderOrAction\n      if (isErrorResult(result)) {\n        throw result.error;\n      }\n      return {\n        matches: [actionMatch],\n        loaderData: {},\n        actionData: {\n          [actionMatch.route.id]: result.data\n        },\n        errors: null,\n        // Note: statusCode + headers are unused here since queryRoute will\n        // return the raw Response or value\n        statusCode: 200,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    }\n    // Create a GET request for the loaders\n    let loaderRequest = new Request(request.url, {\n      headers: request.headers,\n      redirect: request.redirect,\n      signal: request.signal\n    });\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = skipLoaderErrorBubbling ? actionMatch : findNearestBoundary(matches, actionMatch.route.id);\n      let context = await loadRouteData(loaderRequest, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, null, [boundaryMatch.route.id, result]);\n      // action status codes take precedence over loader status codes\n      return _extends({}, context, {\n        statusCode: isRouteErrorResponse(result.error) ? result.error.status : result.statusCode != null ? result.statusCode : 500,\n        actionData: null,\n        actionHeaders: _extends({}, result.headers ? {\n          [actionMatch.route.id]: result.headers\n        } : {})\n      });\n    }\n    let context = await loadRouteData(loaderRequest, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, null);\n    return _extends({}, context, {\n      actionData: {\n        [actionMatch.route.id]: result.data\n      }\n    }, result.statusCode ? {\n      statusCode: result.statusCode\n    } : {}, {\n      actionHeaders: result.headers ? {\n        [actionMatch.route.id]: result.headers\n      } : {}\n    });\n  }\n  async function loadRouteData(request, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch, pendingActionResult) {\n    let isRouteRequest = routeMatch != null;\n    // Short circuit if we have no loaders to run (queryRoute())\n    if (isRouteRequest && !(routeMatch != null && routeMatch.route.loader) && !(routeMatch != null && routeMatch.route.lazy)) {\n      throw getInternalRouterError(400, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: routeMatch == null ? void 0 : routeMatch.route.id\n      });\n    }\n    let requestMatches = routeMatch ? [routeMatch] : pendingActionResult && isErrorResult(pendingActionResult[1]) ? getLoaderMatchesUntilBoundary(matches, pendingActionResult[0]) : matches;\n    let matchesToLoad = requestMatches.filter(m => m.route.loader || m.route.lazy);\n    // Short circuit if we have no loaders to run (query())\n    if (matchesToLoad.length === 0) {\n      return {\n        matches,\n        // Add a null for all matched routes for proper revalidation on the client\n        loaderData: matches.reduce((acc, m) => Object.assign(acc, {\n          [m.route.id]: null\n        }), {}),\n        errors: pendingActionResult && isErrorResult(pendingActionResult[1]) ? {\n          [pendingActionResult[0]]: pendingActionResult[1].error\n        } : null,\n        statusCode: 200,\n        loaderHeaders: {},\n        activeDeferreds: null\n      };\n    }\n    let results = await callDataStrategy(\"loader\", request, matchesToLoad, matches, isRouteRequest, requestContext, dataStrategy);\n    if (request.signal.aborted) {\n      throwStaticHandlerAbortedError(request, isRouteRequest, future);\n    }\n    // Process and commit output from loaders\n    let activeDeferreds = new Map();\n    let context = processRouteLoaderData(matches, results, pendingActionResult, activeDeferreds, skipLoaderErrorBubbling);\n    // Add a null for any non-loader matches for proper revalidation on the client\n    let executedLoaders = new Set(matchesToLoad.map(match => match.route.id));\n    matches.forEach(match => {\n      if (!executedLoaders.has(match.route.id)) {\n        context.loaderData[match.route.id] = null;\n      }\n    });\n    return _extends({}, context, {\n      matches,\n      activeDeferreds: activeDeferreds.size > 0 ? Object.fromEntries(activeDeferreds.entries()) : null\n    });\n  }\n  // Utility wrapper for calling dataStrategy server-side without having to\n  // pass around the manifest, mapRouteProperties, etc.\n  async function callDataStrategy(type, request, matchesToLoad, matches, isRouteRequest, requestContext, dataStrategy) {\n    let results = await callDataStrategyImpl(dataStrategy || defaultDataStrategy, type, null, request, matchesToLoad, matches, null, manifest, mapRouteProperties, requestContext);\n    let dataResults = {};\n    await Promise.all(matches.map(async match => {\n      if (!(match.route.id in results)) {\n        return;\n      }\n      let result = results[match.route.id];\n      if (isRedirectDataStrategyResultResult(result)) {\n        let response = result.result;\n        // Throw redirects and let the server handle them with an HTTP redirect\n        throw normalizeRelativeRoutingRedirectResponse(response, request, match.route.id, matches, basename, future.v7_relativeSplatPath);\n      }\n      if (isResponse(result.result) && isRouteRequest) {\n        // For SSR single-route requests, we want to hand Responses back\n        // directly without unwrapping\n        throw result;\n      }\n      dataResults[match.route.id] = await convertDataStrategyResultToDataResult(result);\n    }));\n    return dataResults;\n  }\n  return {\n    dataRoutes,\n    query,\n    queryRoute\n  };\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Helpers\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Given an existing StaticHandlerContext and an error thrown at render time,\n * provide an updated StaticHandlerContext suitable for a second SSR render\n */\nfunction getStaticContextFromError(routes, context, error) {\n  let newContext = _extends({}, context, {\n    statusCode: isRouteErrorResponse(error) ? error.status : 500,\n    errors: {\n      [context._deepestRenderedBoundaryId || routes[0].id]: error\n    }\n  });\n  return newContext;\n}\nfunction throwStaticHandlerAbortedError(request, isRouteRequest, future) {\n  if (future.v7_throwAbortReason && request.signal.reason !== undefined) {\n    throw request.signal.reason;\n  }\n  let method = isRouteRequest ? \"queryRoute\" : \"query\";\n  throw new Error(method + \"() call aborted: \" + request.method + \" \" + request.url);\n}\nfunction isSubmissionNavigation(opts) {\n  return opts != null && (\"formData\" in opts && opts.formData != null || \"body\" in opts && opts.body !== undefined);\n}\nfunction normalizeTo(location, matches, basename, prependBasename, to, v7_relativeSplatPath, fromRouteId, relative) {\n  let contextualMatches;\n  let activeRouteMatch;\n  if (fromRouteId) {\n    // Grab matches up to the calling route so our route-relative logic is\n    // relative to the correct source route\n    contextualMatches = [];\n    for (let match of matches) {\n      contextualMatches.push(match);\n      if (match.route.id === fromRouteId) {\n        activeRouteMatch = match;\n        break;\n      }\n    }\n  } else {\n    contextualMatches = matches;\n    activeRouteMatch = matches[matches.length - 1];\n  }\n  // Resolve the relative path\n  let path = resolveTo(to ? to : \".\", getResolveToMatches(contextualMatches, v7_relativeSplatPath), stripBasename(location.pathname, basename) || location.pathname, relative === \"path\");\n  // When `to` is not specified we inherit search/hash from the current\n  // location, unlike when to=\".\" and we just inherit the path.\n  // See https://github.com/remix-run/remix/issues/927\n  if (to == null) {\n    path.search = location.search;\n    path.hash = location.hash;\n  }\n  // Account for `?index` params when routing to the current location\n  if ((to == null || to === \"\" || to === \".\") && activeRouteMatch) {\n    let nakedIndex = hasNakedIndexQuery(path.search);\n    if (activeRouteMatch.route.index && !nakedIndex) {\n      // Add one when we're targeting an index route\n      path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n    } else if (!activeRouteMatch.route.index && nakedIndex) {\n      // Remove existing ones when we're not\n      let params = new URLSearchParams(path.search);\n      let indexValues = params.getAll(\"index\");\n      params.delete(\"index\");\n      indexValues.filter(v => v).forEach(v => params.append(\"index\", v));\n      let qs = params.toString();\n      path.search = qs ? \"?\" + qs : \"\";\n    }\n  }\n  // If we're operating within a basename, prepend it to the pathname.  If\n  // this is a root navigation, then just use the raw basename which allows\n  // the basename to have full control over the presence of a trailing slash\n  // on root actions\n  if (prependBasename && basename !== \"/\") {\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n  return createPath(path);\n}\n// Normalize navigation options by converting formMethod=GET formData objects to\n// URLSearchParams so they behave identically to links with query params\nfunction normalizeNavigateOptions(normalizeFormMethod, isFetcher, path, opts) {\n  // Return location verbatim on non-submission navigations\n  if (!opts || !isSubmissionNavigation(opts)) {\n    return {\n      path\n    };\n  }\n  if (opts.formMethod && !isValidMethod(opts.formMethod)) {\n    return {\n      path,\n      error: getInternalRouterError(405, {\n        method: opts.formMethod\n      })\n    };\n  }\n  let getInvalidBodyError = () => ({\n    path,\n    error: getInternalRouterError(400, {\n      type: \"invalid-body\"\n    })\n  });\n  // Create a Submission on non-GET navigations\n  let rawFormMethod = opts.formMethod || \"get\";\n  let formMethod = normalizeFormMethod ? rawFormMethod.toUpperCase() : rawFormMethod.toLowerCase();\n  let formAction = stripHashFromPath(path);\n  if (opts.body !== undefined) {\n    if (opts.formEncType === \"text/plain\") {\n      // text only support POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n      let text = typeof opts.body === \"string\" ? opts.body : opts.body instanceof FormData || opts.body instanceof URLSearchParams ?\n      // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#plain-text-form-data\n      Array.from(opts.body.entries()).reduce((acc, _ref3) => {\n        let [name, value] = _ref3;\n        return \"\" + acc + name + \"=\" + value + \"\\n\";\n      }, \"\") : String(opts.body);\n      return {\n        path,\n        submission: {\n          formMethod,\n          formAction,\n          formEncType: opts.formEncType,\n          formData: undefined,\n          json: undefined,\n          text\n        }\n      };\n    } else if (opts.formEncType === \"application/json\") {\n      // json only supports POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n      try {\n        let json = typeof opts.body === \"string\" ? JSON.parse(opts.body) : opts.body;\n        return {\n          path,\n          submission: {\n            formMethod,\n            formAction,\n            formEncType: opts.formEncType,\n            formData: undefined,\n            json,\n            text: undefined\n          }\n        };\n      } catch (e) {\n        return getInvalidBodyError();\n      }\n    }\n  }\n  invariant(typeof FormData === \"function\", \"FormData is not available in this environment\");\n  let searchParams;\n  let formData;\n  if (opts.formData) {\n    searchParams = convertFormDataToSearchParams(opts.formData);\n    formData = opts.formData;\n  } else if (opts.body instanceof FormData) {\n    searchParams = convertFormDataToSearchParams(opts.body);\n    formData = opts.body;\n  } else if (opts.body instanceof URLSearchParams) {\n    searchParams = opts.body;\n    formData = convertSearchParamsToFormData(searchParams);\n  } else if (opts.body == null) {\n    searchParams = new URLSearchParams();\n    formData = new FormData();\n  } else {\n    try {\n      searchParams = new URLSearchParams(opts.body);\n      formData = convertSearchParamsToFormData(searchParams);\n    } catch (e) {\n      return getInvalidBodyError();\n    }\n  }\n  let submission = {\n    formMethod,\n    formAction,\n    formEncType: opts && opts.formEncType || \"application/x-www-form-urlencoded\",\n    formData,\n    json: undefined,\n    text: undefined\n  };\n  if (isMutationMethod(submission.formMethod)) {\n    return {\n      path,\n      submission\n    };\n  }\n  // Flatten submission onto URLSearchParams for GET submissions\n  let parsedPath = parsePath(path);\n  // On GET navigation submissions we can drop the ?index param from the\n  // resulting location since all loaders will run.  But fetcher GET submissions\n  // only run a single loader so we need to preserve any incoming ?index params\n  if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) {\n    searchParams.append(\"index\", \"\");\n  }\n  parsedPath.search = \"?\" + searchParams;\n  return {\n    path: createPath(parsedPath),\n    submission\n  };\n}\n// Filter out all routes at/below any caught error as they aren't going to\n// render so we don't need to load them\nfunction getLoaderMatchesUntilBoundary(matches, boundaryId, includeBoundary) {\n  if (includeBoundary === void 0) {\n    includeBoundary = false;\n  }\n  let index = matches.findIndex(m => m.route.id === boundaryId);\n  if (index >= 0) {\n    return matches.slice(0, includeBoundary ? index + 1 : index);\n  }\n  return matches;\n}\nfunction getMatchesToLoad(history, state, matches, submission, location, initialHydration, skipActionErrorRevalidation, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, deletedFetchers, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, pendingActionResult) {\n  let actionResult = pendingActionResult ? isErrorResult(pendingActionResult[1]) ? pendingActionResult[1].error : pendingActionResult[1].data : undefined;\n  let currentUrl = history.createURL(state.location);\n  let nextUrl = history.createURL(location);\n  // Pick navigation matches that are net-new or qualify for revalidation\n  let boundaryMatches = matches;\n  if (initialHydration && state.errors) {\n    // On initial hydration, only consider matches up to _and including_ the boundary.\n    // This is inclusive to handle cases where a server loader ran successfully,\n    // a child server loader bubbled up to this route, but this route has\n    // `clientLoader.hydrate` so we want to still run the `clientLoader` so that\n    // we have a complete version of `loaderData`\n    boundaryMatches = getLoaderMatchesUntilBoundary(matches, Object.keys(state.errors)[0], true);\n  } else if (pendingActionResult && isErrorResult(pendingActionResult[1])) {\n    // If an action threw an error, we call loaders up to, but not including the\n    // boundary\n    boundaryMatches = getLoaderMatchesUntilBoundary(matches, pendingActionResult[0]);\n  }\n  // Don't revalidate loaders by default after action 4xx/5xx responses\n  // when the flag is enabled.  They can still opt-into revalidation via\n  // `shouldRevalidate` via `actionResult`\n  let actionStatus = pendingActionResult ? pendingActionResult[1].statusCode : undefined;\n  let shouldSkipRevalidation = skipActionErrorRevalidation && actionStatus && actionStatus >= 400;\n  let navigationMatches = boundaryMatches.filter((match, index) => {\n    let {\n      route\n    } = match;\n    if (route.lazy) {\n      // We haven't loaded this route yet so we don't know if it's got a loader!\n      return true;\n    }\n    if (route.loader == null) {\n      return false;\n    }\n    if (initialHydration) {\n      return shouldLoadRouteOnHydration(route, state.loaderData, state.errors);\n    }\n    // Always call the loader on new route instances and pending defer cancellations\n    if (isNewLoader(state.loaderData, state.matches[index], match) || cancelledDeferredRoutes.some(id => id === match.route.id)) {\n      return true;\n    }\n    // This is the default implementation for when we revalidate.  If the route\n    // provides it's own implementation, then we give them full control but\n    // provide this value so they can leverage it if needed after they check\n    // their own specific use cases\n    let currentRouteMatch = state.matches[index];\n    let nextRouteMatch = match;\n    return shouldRevalidateLoader(match, _extends({\n      currentUrl,\n      currentParams: currentRouteMatch.params,\n      nextUrl,\n      nextParams: nextRouteMatch.params\n    }, submission, {\n      actionResult,\n      actionStatus,\n      defaultShouldRevalidate: shouldSkipRevalidation ? false :\n      // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate\n      isRevalidationRequired || currentUrl.pathname + currentUrl.search === nextUrl.pathname + nextUrl.search ||\n      // Search params affect all loaders\n      currentUrl.search !== nextUrl.search || isNewRouteInstance(currentRouteMatch, nextRouteMatch)\n    }));\n  });\n  // Pick fetcher.loads that need to be revalidated\n  let revalidatingFetchers = [];\n  fetchLoadMatches.forEach((f, key) => {\n    // Don't revalidate:\n    //  - on initial hydration (shouldn't be any fetchers then anyway)\n    //  - if fetcher won't be present in the subsequent render\n    //    - no longer matches the URL (v7_fetcherPersist=false)\n    //    - was unmounted but persisted due to v7_fetcherPersist=true\n    if (initialHydration || !matches.some(m => m.route.id === f.routeId) || deletedFetchers.has(key)) {\n      return;\n    }\n    let fetcherMatches = matchRoutes(routesToUse, f.path, basename);\n    // If the fetcher path no longer matches, push it in with null matches so\n    // we can trigger a 404 in callLoadersAndMaybeResolveData.  Note this is\n    // currently only a use-case for Remix HMR where the route tree can change\n    // at runtime and remove a route previously loaded via a fetcher\n    if (!fetcherMatches) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: null,\n        match: null,\n        controller: null\n      });\n      return;\n    }\n    // Revalidating fetchers are decoupled from the route matches since they\n    // load from a static href.  They revalidate based on explicit revalidation\n    // (submission, useRevalidator, or X-Remix-Revalidate)\n    let fetcher = state.fetchers.get(key);\n    let fetcherMatch = getTargetMatch(fetcherMatches, f.path);\n    let shouldRevalidate = false;\n    if (fetchRedirectIds.has(key)) {\n      // Never trigger a revalidation of an actively redirecting fetcher\n      shouldRevalidate = false;\n    } else if (cancelledFetcherLoads.has(key)) {\n      // Always mark for revalidation if the fetcher was cancelled\n      cancelledFetcherLoads.delete(key);\n      shouldRevalidate = true;\n    } else if (fetcher && fetcher.state !== \"idle\" && fetcher.data === undefined) {\n      // If the fetcher hasn't ever completed loading yet, then this isn't a\n      // revalidation, it would just be a brand new load if an explicit\n      // revalidation is required\n      shouldRevalidate = isRevalidationRequired;\n    } else {\n      // Otherwise fall back on any user-defined shouldRevalidate, defaulting\n      // to explicit revalidations only\n      shouldRevalidate = shouldRevalidateLoader(fetcherMatch, _extends({\n        currentUrl,\n        currentParams: state.matches[state.matches.length - 1].params,\n        nextUrl,\n        nextParams: matches[matches.length - 1].params\n      }, submission, {\n        actionResult,\n        actionStatus,\n        defaultShouldRevalidate: shouldSkipRevalidation ? false : isRevalidationRequired\n      }));\n    }\n    if (shouldRevalidate) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: fetcherMatches,\n        match: fetcherMatch,\n        controller: new AbortController()\n      });\n    }\n  });\n  return [navigationMatches, revalidatingFetchers];\n}\nfunction shouldLoadRouteOnHydration(route, loaderData, errors) {\n  // We dunno if we have a loader - gotta find out!\n  if (route.lazy) {\n    return true;\n  }\n  // No loader, nothing to initialize\n  if (!route.loader) {\n    return false;\n  }\n  let hasData = loaderData != null && loaderData[route.id] !== undefined;\n  let hasError = errors != null && errors[route.id] !== undefined;\n  // Don't run if we error'd during SSR\n  if (!hasData && hasError) {\n    return false;\n  }\n  // Explicitly opting-in to running on hydration\n  if (typeof route.loader === \"function\" && route.loader.hydrate === true) {\n    return true;\n  }\n  // Otherwise, run if we're not yet initialized with anything\n  return !hasData && !hasError;\n}\nfunction isNewLoader(currentLoaderData, currentMatch, match) {\n  let isNew =\n  // [a] -> [a, b]\n  !currentMatch ||\n  // [a, b] -> [a, c]\n  match.route.id !== currentMatch.route.id;\n  // Handle the case that we don't have data for a re-used route, potentially\n  // from a prior error or from a cancelled pending deferred\n  let isMissingData = currentLoaderData[match.route.id] === undefined;\n  // Always load if this is a net-new route or we don't yet have data\n  return isNew || isMissingData;\n}\nfunction isNewRouteInstance(currentMatch, match) {\n  let currentPath = currentMatch.route.path;\n  return (\n    // param change for this match, /users/123 -> /users/456\n    currentMatch.pathname !== match.pathname ||\n    // splat param changed, which is not present in match.path\n    // e.g. /files/images/avatar.jpg -> files/finances.xls\n    currentPath != null && currentPath.endsWith(\"*\") && currentMatch.params[\"*\"] !== match.params[\"*\"]\n  );\n}\nfunction shouldRevalidateLoader(loaderMatch, arg) {\n  if (loaderMatch.route.shouldRevalidate) {\n    let routeChoice = loaderMatch.route.shouldRevalidate(arg);\n    if (typeof routeChoice === \"boolean\") {\n      return routeChoice;\n    }\n  }\n  return arg.defaultShouldRevalidate;\n}\nfunction patchRoutesImpl(routeId, children, routesToUse, manifest, mapRouteProperties) {\n  var _childrenToPatch;\n  let childrenToPatch;\n  if (routeId) {\n    let route = manifest[routeId];\n    invariant(route, \"No route found to patch children into: routeId = \" + routeId);\n    if (!route.children) {\n      route.children = [];\n    }\n    childrenToPatch = route.children;\n  } else {\n    childrenToPatch = routesToUse;\n  }\n  // Don't patch in routes we already know about so that `patch` is idempotent\n  // to simplify user-land code. This is useful because we re-call the\n  // `patchRoutesOnNavigation` function for matched routes with params.\n  let uniqueChildren = children.filter(newRoute => !childrenToPatch.some(existingRoute => isSameRoute(newRoute, existingRoute)));\n  let newRoutes = convertRoutesToDataRoutes(uniqueChildren, mapRouteProperties, [routeId || \"_\", \"patch\", String(((_childrenToPatch = childrenToPatch) == null ? void 0 : _childrenToPatch.length) || \"0\")], manifest);\n  childrenToPatch.push(...newRoutes);\n}\nfunction isSameRoute(newRoute, existingRoute) {\n  // Most optimal check is by id\n  if (\"id\" in newRoute && \"id\" in existingRoute && newRoute.id === existingRoute.id) {\n    return true;\n  }\n  // Second is by pathing differences\n  if (!(newRoute.index === existingRoute.index && newRoute.path === existingRoute.path && newRoute.caseSensitive === existingRoute.caseSensitive)) {\n    return false;\n  }\n  // Pathless layout routes are trickier since we need to check children.\n  // If they have no children then they're the same as far as we can tell\n  if ((!newRoute.children || newRoute.children.length === 0) && (!existingRoute.children || existingRoute.children.length === 0)) {\n    return true;\n  }\n  // Otherwise, we look to see if every child in the new route is already\n  // represented in the existing route's children\n  return newRoute.children.every((aChild, i) => {\n    var _existingRoute$childr;\n    return (_existingRoute$childr = existingRoute.children) == null ? void 0 : _existingRoute$childr.some(bChild => isSameRoute(aChild, bChild));\n  });\n}\n/**\n * Execute route.lazy() methods to lazily load route modules (loader, action,\n * shouldRevalidate) and update the routeManifest in place which shares objects\n * with dataRoutes so those get updated as well.\n */\nasync function loadLazyRouteModule(route, mapRouteProperties, manifest) {\n  if (!route.lazy) {\n    return;\n  }\n  let lazyRoute = await route.lazy();\n  // If the lazy route function was executed and removed by another parallel\n  // call then we can return - first lazy() to finish wins because the return\n  // value of lazy is expected to be static\n  if (!route.lazy) {\n    return;\n  }\n  let routeToUpdate = manifest[route.id];\n  invariant(routeToUpdate, \"No route found in manifest\");\n  // Update the route in place.  This should be safe because there's no way\n  // we could yet be sitting on this route as we can't get there without\n  // resolving lazy() first.\n  //\n  // This is different than the HMR \"update\" use-case where we may actively be\n  // on the route being updated.  The main concern boils down to \"does this\n  // mutation affect any ongoing navigations or any current state.matches\n  // values?\".  If not, it should be safe to update in place.\n  let routeUpdates = {};\n  for (let lazyRouteProperty in lazyRoute) {\n    let staticRouteValue = routeToUpdate[lazyRouteProperty];\n    let isPropertyStaticallyDefined = staticRouteValue !== undefined &&\n    // This property isn't static since it should always be updated based\n    // on the route updates\n    lazyRouteProperty !== \"hasErrorBoundary\";\n    warning(!isPropertyStaticallyDefined, \"Route \\\"\" + routeToUpdate.id + \"\\\" has a static property \\\"\" + lazyRouteProperty + \"\\\" \" + \"defined but its lazy function is also returning a value for this property. \" + (\"The lazy route property \\\"\" + lazyRouteProperty + \"\\\" will be ignored.\"));\n    if (!isPropertyStaticallyDefined && !immutableRouteKeys.has(lazyRouteProperty)) {\n      routeUpdates[lazyRouteProperty] = lazyRoute[lazyRouteProperty];\n    }\n  }\n  // Mutate the route with the provided updates.  Do this first so we pass\n  // the updated version to mapRouteProperties\n  Object.assign(routeToUpdate, routeUpdates);\n  // Mutate the `hasErrorBoundary` property on the route based on the route\n  // updates and remove the `lazy` function so we don't resolve the lazy\n  // route again.\n  Object.assign(routeToUpdate, _extends({}, mapRouteProperties(routeToUpdate), {\n    lazy: undefined\n  }));\n}\n// Default implementation of `dataStrategy` which fetches all loaders in parallel\nasync function defaultDataStrategy(_ref4) {\n  let {\n    matches\n  } = _ref4;\n  let matchesToLoad = matches.filter(m => m.shouldLoad);\n  let results = await Promise.all(matchesToLoad.map(m => m.resolve()));\n  return results.reduce((acc, result, i) => Object.assign(acc, {\n    [matchesToLoad[i].route.id]: result\n  }), {});\n}\nasync function callDataStrategyImpl(dataStrategyImpl, type, state, request, matchesToLoad, matches, fetcherKey, manifest, mapRouteProperties, requestContext) {\n  let loadRouteDefinitionsPromises = matches.map(m => m.route.lazy ? loadLazyRouteModule(m.route, mapRouteProperties, manifest) : undefined);\n  let dsMatches = matches.map((match, i) => {\n    let loadRoutePromise = loadRouteDefinitionsPromises[i];\n    let shouldLoad = matchesToLoad.some(m => m.route.id === match.route.id);\n    // `resolve` encapsulates route.lazy(), executing the loader/action,\n    // and mapping return values/thrown errors to a `DataStrategyResult`.  Users\n    // can pass a callback to take fine-grained control over the execution\n    // of the loader/action\n    let resolve = async handlerOverride => {\n      if (handlerOverride && request.method === \"GET\" && (match.route.lazy || match.route.loader)) {\n        shouldLoad = true;\n      }\n      return shouldLoad ? callLoaderOrAction(type, request, match, loadRoutePromise, handlerOverride, requestContext) : Promise.resolve({\n        type: ResultType.data,\n        result: undefined\n      });\n    };\n    return _extends({}, match, {\n      shouldLoad,\n      resolve\n    });\n  });\n  // Send all matches here to allow for a middleware-type implementation.\n  // handler will be a no-op for unneeded routes and we filter those results\n  // back out below.\n  let results = await dataStrategyImpl({\n    matches: dsMatches,\n    request,\n    params: matches[0].params,\n    fetcherKey,\n    context: requestContext\n  });\n  // Wait for all routes to load here but 'swallow the error since we want\n  // it to bubble up from the `await loadRoutePromise` in `callLoaderOrAction` -\n  // called from `match.resolve()`\n  try {\n    await Promise.all(loadRouteDefinitionsPromises);\n  } catch (e) {\n    // No-op\n  }\n  return results;\n}\n// Default logic for calling a loader/action is the user has no specified a dataStrategy\nasync function callLoaderOrAction(type, request, match, loadRoutePromise, handlerOverride, staticContext) {\n  let result;\n  let onReject;\n  let runHandler = handler => {\n    // Setup a promise we can race against so that abort signals short circuit\n    let reject;\n    // This will never resolve so safe to type it as Promise<DataStrategyResult> to\n    // satisfy the function return value\n    let abortPromise = new Promise((_, r) => reject = r);\n    onReject = () => reject();\n    request.signal.addEventListener(\"abort\", onReject);\n    let actualHandler = ctx => {\n      if (typeof handler !== \"function\") {\n        return Promise.reject(new Error(\"You cannot call the handler for a route which defines a boolean \" + (\"\\\"\" + type + \"\\\" [routeId: \" + match.route.id + \"]\")));\n      }\n      return handler({\n        request,\n        params: match.params,\n        context: staticContext\n      }, ...(ctx !== undefined ? [ctx] : []));\n    };\n    let handlerPromise = (async () => {\n      try {\n        let val = await (handlerOverride ? handlerOverride(ctx => actualHandler(ctx)) : actualHandler());\n        return {\n          type: \"data\",\n          result: val\n        };\n      } catch (e) {\n        return {\n          type: \"error\",\n          result: e\n        };\n      }\n    })();\n    return Promise.race([handlerPromise, abortPromise]);\n  };\n  try {\n    let handler = match.route[type];\n    // If we have a route.lazy promise, await that first\n    if (loadRoutePromise) {\n      if (handler) {\n        // Run statically defined handler in parallel with lazy()\n        let handlerError;\n        let [value] = await Promise.all([\n        // If the handler throws, don't let it immediately bubble out,\n        // since we need to let the lazy() execution finish so we know if this\n        // route has a boundary that can handle the error\n        runHandler(handler).catch(e => {\n          handlerError = e;\n        }), loadRoutePromise]);\n        if (handlerError !== undefined) {\n          throw handlerError;\n        }\n        result = value;\n      } else {\n        // Load lazy route module, then run any returned handler\n        await loadRoutePromise;\n        handler = match.route[type];\n        if (handler) {\n          // Handler still runs even if we got interrupted to maintain consistency\n          // with un-abortable behavior of handler execution on non-lazy or\n          // previously-lazy-loaded routes\n          result = await runHandler(handler);\n        } else if (type === \"action\") {\n          let url = new URL(request.url);\n          let pathname = url.pathname + url.search;\n          throw getInternalRouterError(405, {\n            method: request.method,\n            pathname,\n            routeId: match.route.id\n          });\n        } else {\n          // lazy() route has no loader to run.  Short circuit here so we don't\n          // hit the invariant below that errors on returning undefined.\n          return {\n            type: ResultType.data,\n            result: undefined\n          };\n        }\n      }\n    } else if (!handler) {\n      let url = new URL(request.url);\n      let pathname = url.pathname + url.search;\n      throw getInternalRouterError(404, {\n        pathname\n      });\n    } else {\n      result = await runHandler(handler);\n    }\n    invariant(result.result !== undefined, \"You defined \" + (type === \"action\" ? \"an action\" : \"a loader\") + \" for route \" + (\"\\\"\" + match.route.id + \"\\\" but didn't return anything from your `\" + type + \"` \") + \"function. Please return a value or `null`.\");\n  } catch (e) {\n    // We should already be catching and converting normal handler executions to\n    // DataStrategyResults and returning them, so anything that throws here is an\n    // unexpected error we still need to wrap\n    return {\n      type: ResultType.error,\n      result: e\n    };\n  } finally {\n    if (onReject) {\n      request.signal.removeEventListener(\"abort\", onReject);\n    }\n  }\n  return result;\n}\nasync function convertDataStrategyResultToDataResult(dataStrategyResult) {\n  let {\n    result,\n    type\n  } = dataStrategyResult;\n  if (isResponse(result)) {\n    let data;\n    try {\n      let contentType = result.headers.get(\"Content-Type\");\n      // Check between word boundaries instead of startsWith() due to the last\n      // paragraph of https://httpwg.org/specs/rfc9110.html#field.content-type\n      if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n        if (result.body == null) {\n          data = null;\n        } else {\n          data = await result.json();\n        }\n      } else {\n        data = await result.text();\n      }\n    } catch (e) {\n      return {\n        type: ResultType.error,\n        error: e\n      };\n    }\n    if (type === ResultType.error) {\n      return {\n        type: ResultType.error,\n        error: new ErrorResponseImpl(result.status, result.statusText, data),\n        statusCode: result.status,\n        headers: result.headers\n      };\n    }\n    return {\n      type: ResultType.data,\n      data,\n      statusCode: result.status,\n      headers: result.headers\n    };\n  }\n  if (type === ResultType.error) {\n    if (isDataWithResponseInit(result)) {\n      var _result$init3, _result$init4;\n      if (result.data instanceof Error) {\n        var _result$init, _result$init2;\n        return {\n          type: ResultType.error,\n          error: result.data,\n          statusCode: (_result$init = result.init) == null ? void 0 : _result$init.status,\n          headers: (_result$init2 = result.init) != null && _result$init2.headers ? new Headers(result.init.headers) : undefined\n        };\n      }\n      // Convert thrown data() to ErrorResponse instances\n      return {\n        type: ResultType.error,\n        error: new ErrorResponseImpl(((_result$init3 = result.init) == null ? void 0 : _result$init3.status) || 500, undefined, result.data),\n        statusCode: isRouteErrorResponse(result) ? result.status : undefined,\n        headers: (_result$init4 = result.init) != null && _result$init4.headers ? new Headers(result.init.headers) : undefined\n      };\n    }\n    return {\n      type: ResultType.error,\n      error: result,\n      statusCode: isRouteErrorResponse(result) ? result.status : undefined\n    };\n  }\n  if (isDeferredData(result)) {\n    var _result$init5, _result$init6;\n    return {\n      type: ResultType.deferred,\n      deferredData: result,\n      statusCode: (_result$init5 = result.init) == null ? void 0 : _result$init5.status,\n      headers: ((_result$init6 = result.init) == null ? void 0 : _result$init6.headers) && new Headers(result.init.headers)\n    };\n  }\n  if (isDataWithResponseInit(result)) {\n    var _result$init7, _result$init8;\n    return {\n      type: ResultType.data,\n      data: result.data,\n      statusCode: (_result$init7 = result.init) == null ? void 0 : _result$init7.status,\n      headers: (_result$init8 = result.init) != null && _result$init8.headers ? new Headers(result.init.headers) : undefined\n    };\n  }\n  return {\n    type: ResultType.data,\n    data: result\n  };\n}\n// Support relative routing in internal redirects\nfunction normalizeRelativeRoutingRedirectResponse(response, request, routeId, matches, basename, v7_relativeSplatPath) {\n  let location = response.headers.get(\"Location\");\n  invariant(location, \"Redirects returned/thrown from loaders/actions must have a Location header\");\n  if (!ABSOLUTE_URL_REGEX.test(location)) {\n    let trimmedMatches = matches.slice(0, matches.findIndex(m => m.route.id === routeId) + 1);\n    location = normalizeTo(new URL(request.url), trimmedMatches, basename, true, location, v7_relativeSplatPath);\n    response.headers.set(\"Location\", location);\n  }\n  return response;\n}\nfunction normalizeRedirectLocation(location, currentUrl, basename) {\n  if (ABSOLUTE_URL_REGEX.test(location)) {\n    // Strip off the protocol+origin for same-origin + same-basename absolute redirects\n    let normalizedLocation = location;\n    let url = normalizedLocation.startsWith(\"//\") ? new URL(currentUrl.protocol + normalizedLocation) : new URL(normalizedLocation);\n    let isSameBasename = stripBasename(url.pathname, basename) != null;\n    if (url.origin === currentUrl.origin && isSameBasename) {\n      return url.pathname + url.search + url.hash;\n    }\n  }\n  return location;\n}\n// Utility method for creating the Request instances for loaders/actions during\n// client-side navigations and fetches.  During SSR we will always have a\n// Request instance from the static handler (query/queryRoute)\nfunction createClientSideRequest(history, location, signal, submission) {\n  let url = history.createURL(stripHashFromPath(location)).toString();\n  let init = {\n    signal\n  };\n  if (submission && isMutationMethod(submission.formMethod)) {\n    let {\n      formMethod,\n      formEncType\n    } = submission;\n    // Didn't think we needed this but it turns out unlike other methods, patch\n    // won't be properly normalized to uppercase and results in a 405 error.\n    // See: https://fetch.spec.whatwg.org/#concept-method\n    init.method = formMethod.toUpperCase();\n    if (formEncType === \"application/json\") {\n      init.headers = new Headers({\n        \"Content-Type\": formEncType\n      });\n      init.body = JSON.stringify(submission.json);\n    } else if (formEncType === \"text/plain\") {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.text;\n    } else if (formEncType === \"application/x-www-form-urlencoded\" && submission.formData) {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = convertFormDataToSearchParams(submission.formData);\n    } else {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.formData;\n    }\n  }\n  return new Request(url, init);\n}\nfunction convertFormDataToSearchParams(formData) {\n  let searchParams = new URLSearchParams();\n  for (let [key, value] of formData.entries()) {\n    // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#converting-an-entry-list-to-a-list-of-name-value-pairs\n    searchParams.append(key, typeof value === \"string\" ? value : value.name);\n  }\n  return searchParams;\n}\nfunction convertSearchParamsToFormData(searchParams) {\n  let formData = new FormData();\n  for (let [key, value] of searchParams.entries()) {\n    formData.append(key, value);\n  }\n  return formData;\n}\nfunction processRouteLoaderData(matches, results, pendingActionResult, activeDeferreds, skipLoaderErrorBubbling) {\n  // Fill in loaderData/errors from our loaders\n  let loaderData = {};\n  let errors = null;\n  let statusCode;\n  let foundError = false;\n  let loaderHeaders = {};\n  let pendingError = pendingActionResult && isErrorResult(pendingActionResult[1]) ? pendingActionResult[1].error : undefined;\n  // Process loader results into state.loaderData/state.errors\n  matches.forEach(match => {\n    if (!(match.route.id in results)) {\n      return;\n    }\n    let id = match.route.id;\n    let result = results[id];\n    invariant(!isRedirectResult(result), \"Cannot handle redirect results in processLoaderData\");\n    if (isErrorResult(result)) {\n      let error = result.error;\n      // If we have a pending action error, we report it at the highest-route\n      // that throws a loader error, and then clear it out to indicate that\n      // it was consumed\n      if (pendingError !== undefined) {\n        error = pendingError;\n        pendingError = undefined;\n      }\n      errors = errors || {};\n      if (skipLoaderErrorBubbling) {\n        errors[id] = error;\n      } else {\n        // Look upwards from the matched route for the closest ancestor error\n        // boundary, defaulting to the root match.  Prefer higher error values\n        // if lower errors bubble to the same boundary\n        let boundaryMatch = findNearestBoundary(matches, id);\n        if (errors[boundaryMatch.route.id] == null) {\n          errors[boundaryMatch.route.id] = error;\n        }\n      }\n      // Clear our any prior loaderData for the throwing route\n      loaderData[id] = undefined;\n      // Once we find our first (highest) error, we set the status code and\n      // prevent deeper status codes from overriding\n      if (!foundError) {\n        foundError = true;\n        statusCode = isRouteErrorResponse(result.error) ? result.error.status : 500;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    } else {\n      if (isDeferredResult(result)) {\n        activeDeferreds.set(id, result.deferredData);\n        loaderData[id] = result.deferredData.data;\n        // Error status codes always override success status codes, but if all\n        // loaders are successful we take the deepest status code.\n        if (result.statusCode != null && result.statusCode !== 200 && !foundError) {\n          statusCode = result.statusCode;\n        }\n        if (result.headers) {\n          loaderHeaders[id] = result.headers;\n        }\n      } else {\n        loaderData[id] = result.data;\n        // Error status codes always override success status codes, but if all\n        // loaders are successful we take the deepest status code.\n        if (result.statusCode && result.statusCode !== 200 && !foundError) {\n          statusCode = result.statusCode;\n        }\n        if (result.headers) {\n          loaderHeaders[id] = result.headers;\n        }\n      }\n    }\n  });\n  // If we didn't consume the pending action error (i.e., all loaders\n  // resolved), then consume it here.  Also clear out any loaderData for the\n  // throwing route\n  if (pendingError !== undefined && pendingActionResult) {\n    errors = {\n      [pendingActionResult[0]]: pendingError\n    };\n    loaderData[pendingActionResult[0]] = undefined;\n  }\n  return {\n    loaderData,\n    errors,\n    statusCode: statusCode || 200,\n    loaderHeaders\n  };\n}\nfunction processLoaderData(state, matches, results, pendingActionResult, revalidatingFetchers, fetcherResults, activeDeferreds) {\n  let {\n    loaderData,\n    errors\n  } = processRouteLoaderData(matches, results, pendingActionResult, activeDeferreds, false // This method is only called client side so we always want to bubble\n  );\n  // Process results from our revalidating fetchers\n  revalidatingFetchers.forEach(rf => {\n    let {\n      key,\n      match,\n      controller\n    } = rf;\n    let result = fetcherResults[key];\n    invariant(result, \"Did not find corresponding fetcher result\");\n    // Process fetcher non-redirect errors\n    if (controller && controller.signal.aborted) {\n      // Nothing to do for aborted fetchers\n      return;\n    } else if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, match == null ? void 0 : match.route.id);\n      if (!(errors && errors[boundaryMatch.route.id])) {\n        errors = _extends({}, errors, {\n          [boundaryMatch.route.id]: result.error\n        });\n      }\n      state.fetchers.delete(key);\n    } else if (isRedirectResult(result)) {\n      // Should never get here, redirects should get processed above, but we\n      // keep this to type narrow to a success result in the else\n      invariant(false, \"Unhandled fetcher revalidation redirect\");\n    } else if (isDeferredResult(result)) {\n      // Should never get here, deferred data should be awaited for fetchers\n      // in resolveDeferredResults\n      invariant(false, \"Unhandled fetcher deferred data\");\n    } else {\n      let doneFetcher = getDoneFetcher(result.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  });\n  return {\n    loaderData,\n    errors\n  };\n}\nfunction mergeLoaderData(loaderData, newLoaderData, matches, errors) {\n  let mergedLoaderData = _extends({}, newLoaderData);\n  for (let match of matches) {\n    let id = match.route.id;\n    if (newLoaderData.hasOwnProperty(id)) {\n      if (newLoaderData[id] !== undefined) {\n        mergedLoaderData[id] = newLoaderData[id];\n      }\n    } else if (loaderData[id] !== undefined && match.route.loader) {\n      // Preserve existing keys not included in newLoaderData and where a loader\n      // wasn't removed by HMR\n      mergedLoaderData[id] = loaderData[id];\n    }\n    if (errors && errors.hasOwnProperty(id)) {\n      // Don't keep any loader data below the boundary\n      break;\n    }\n  }\n  return mergedLoaderData;\n}\nfunction getActionDataForCommit(pendingActionResult) {\n  if (!pendingActionResult) {\n    return {};\n  }\n  return isErrorResult(pendingActionResult[1]) ? {\n    // Clear out prior actionData on errors\n    actionData: {}\n  } : {\n    actionData: {\n      [pendingActionResult[0]]: pendingActionResult[1].data\n    }\n  };\n}\n// Find the nearest error boundary, looking upwards from the leaf route (or the\n// route specified by routeId) for the closest ancestor error boundary,\n// defaulting to the root match\nfunction findNearestBoundary(matches, routeId) {\n  let eligibleMatches = routeId ? matches.slice(0, matches.findIndex(m => m.route.id === routeId) + 1) : [...matches];\n  return eligibleMatches.reverse().find(m => m.route.hasErrorBoundary === true) || matches[0];\n}\nfunction getShortCircuitMatches(routes) {\n  // Prefer a root layout route if present, otherwise shim in a route object\n  let route = routes.length === 1 ? routes[0] : routes.find(r => r.index || !r.path || r.path === \"/\") || {\n    id: \"__shim-error-route__\"\n  };\n  return {\n    matches: [{\n      params: {},\n      pathname: \"\",\n      pathnameBase: \"\",\n      route\n    }],\n    route\n  };\n}\nfunction getInternalRouterError(status, _temp5) {\n  let {\n    pathname,\n    routeId,\n    method,\n    type,\n    message\n  } = _temp5 === void 0 ? {} : _temp5;\n  let statusText = \"Unknown Server Error\";\n  let errorMessage = \"Unknown @remix-run/router error\";\n  if (status === 400) {\n    statusText = \"Bad Request\";\n    if (method && pathname && routeId) {\n      errorMessage = \"You made a \" + method + \" request to \\\"\" + pathname + \"\\\" but \" + (\"did not provide a `loader` for route \\\"\" + routeId + \"\\\", \") + \"so there is no way to handle the request.\";\n    } else if (type === \"defer-action\") {\n      errorMessage = \"defer() is not supported in actions\";\n    } else if (type === \"invalid-body\") {\n      errorMessage = \"Unable to encode submission body\";\n    }\n  } else if (status === 403) {\n    statusText = \"Forbidden\";\n    errorMessage = \"Route \\\"\" + routeId + \"\\\" does not match URL \\\"\" + pathname + \"\\\"\";\n  } else if (status === 404) {\n    statusText = \"Not Found\";\n    errorMessage = \"No route matches URL \\\"\" + pathname + \"\\\"\";\n  } else if (status === 405) {\n    statusText = \"Method Not Allowed\";\n    if (method && pathname && routeId) {\n      errorMessage = \"You made a \" + method.toUpperCase() + \" request to \\\"\" + pathname + \"\\\" but \" + (\"did not provide an `action` for route \\\"\" + routeId + \"\\\", \") + \"so there is no way to handle the request.\";\n    } else if (method) {\n      errorMessage = \"Invalid request method \\\"\" + method.toUpperCase() + \"\\\"\";\n    }\n  }\n  return new ErrorResponseImpl(status || 500, statusText, new Error(errorMessage), true);\n}\n// Find any returned redirect errors, starting from the lowest match\nfunction findRedirect(results) {\n  let entries = Object.entries(results);\n  for (let i = entries.length - 1; i >= 0; i--) {\n    let [key, result] = entries[i];\n    if (isRedirectResult(result)) {\n      return {\n        key,\n        result\n      };\n    }\n  }\n}\nfunction stripHashFromPath(path) {\n  let parsedPath = typeof path === \"string\" ? parsePath(path) : path;\n  return createPath(_extends({}, parsedPath, {\n    hash: \"\"\n  }));\n}\nfunction isHashChangeOnly(a, b) {\n  if (a.pathname !== b.pathname || a.search !== b.search) {\n    return false;\n  }\n  if (a.hash === \"\") {\n    // /page -> /page#hash\n    return b.hash !== \"\";\n  } else if (a.hash === b.hash) {\n    // /page#hash -> /page#hash\n    return true;\n  } else if (b.hash !== \"\") {\n    // /page#hash -> /page#other\n    return true;\n  }\n  // If the hash is removed the browser will re-perform a request to the server\n  // /page#hash -> /page\n  return false;\n}\nfunction isDataStrategyResult(result) {\n  return result != null && typeof result === \"object\" && \"type\" in result && \"result\" in result && (result.type === ResultType.data || result.type === ResultType.error);\n}\nfunction isRedirectDataStrategyResultResult(result) {\n  return isResponse(result.result) && redirectStatusCodes.has(result.result.status);\n}\nfunction isDeferredResult(result) {\n  return result.type === ResultType.deferred;\n}\nfunction isErrorResult(result) {\n  return result.type === ResultType.error;\n}\nfunction isRedirectResult(result) {\n  return (result && result.type) === ResultType.redirect;\n}\nfunction isDataWithResponseInit(value) {\n  return typeof value === \"object\" && value != null && \"type\" in value && \"data\" in value && \"init\" in value && value.type === \"DataWithResponseInit\";\n}\nfunction isDeferredData(value) {\n  let deferred = value;\n  return deferred && typeof deferred === \"object\" && typeof deferred.data === \"object\" && typeof deferred.subscribe === \"function\" && typeof deferred.cancel === \"function\" && typeof deferred.resolveData === \"function\";\n}\nfunction isResponse(value) {\n  return value != null && typeof value.status === \"number\" && typeof value.statusText === \"string\" && typeof value.headers === \"object\" && typeof value.body !== \"undefined\";\n}\nfunction isRedirectResponse(result) {\n  if (!isResponse(result)) {\n    return false;\n  }\n  let status = result.status;\n  let location = result.headers.get(\"Location\");\n  return status >= 300 && status <= 399 && location != null;\n}\nfunction isValidMethod(method) {\n  return validRequestMethods.has(method.toLowerCase());\n}\nfunction isMutationMethod(method) {\n  return validMutationMethods.has(method.toLowerCase());\n}\nasync function resolveNavigationDeferredResults(matches, results, signal, currentMatches, currentLoaderData) {\n  let entries = Object.entries(results);\n  for (let index = 0; index < entries.length; index++) {\n    let [routeId, result] = entries[index];\n    let match = matches.find(m => (m == null ? void 0 : m.route.id) === routeId);\n    // If we don't have a match, then we can have a deferred result to do\n    // anything with.  This is for revalidating fetchers where the route was\n    // removed during HMR\n    if (!match) {\n      continue;\n    }\n    let currentMatch = currentMatches.find(m => m.route.id === match.route.id);\n    let isRevalidatingLoader = currentMatch != null && !isNewRouteInstance(currentMatch, match) && (currentLoaderData && currentLoaderData[match.route.id]) !== undefined;\n    if (isDeferredResult(result) && isRevalidatingLoader) {\n      // Note: we do not have to touch activeDeferreds here since we race them\n      // against the signal in resolveDeferredData and they'll get aborted\n      // there if needed\n      await resolveDeferredData(result, signal, false).then(result => {\n        if (result) {\n          results[routeId] = result;\n        }\n      });\n    }\n  }\n}\nasync function resolveFetcherDeferredResults(matches, results, revalidatingFetchers) {\n  for (let index = 0; index < revalidatingFetchers.length; index++) {\n    let {\n      key,\n      routeId,\n      controller\n    } = revalidatingFetchers[index];\n    let result = results[key];\n    let match = matches.find(m => (m == null ? void 0 : m.route.id) === routeId);\n    // If we don't have a match, then we can have a deferred result to do\n    // anything with.  This is for revalidating fetchers where the route was\n    // removed during HMR\n    if (!match) {\n      continue;\n    }\n    if (isDeferredResult(result)) {\n      // Note: we do not have to touch activeDeferreds here since we race them\n      // against the signal in resolveDeferredData and they'll get aborted\n      // there if needed\n      invariant(controller, \"Expected an AbortController for revalidating fetcher deferred result\");\n      await resolveDeferredData(result, controller.signal, true).then(result => {\n        if (result) {\n          results[key] = result;\n        }\n      });\n    }\n  }\n}\nasync function resolveDeferredData(result, signal, unwrap) {\n  if (unwrap === void 0) {\n    unwrap = false;\n  }\n  let aborted = await result.deferredData.resolveData(signal);\n  if (aborted) {\n    return;\n  }\n  if (unwrap) {\n    try {\n      return {\n        type: ResultType.data,\n        data: result.deferredData.unwrappedData\n      };\n    } catch (e) {\n      // Handle any TrackedPromise._error values encountered while unwrapping\n      return {\n        type: ResultType.error,\n        error: e\n      };\n    }\n  }\n  return {\n    type: ResultType.data,\n    data: result.deferredData.data\n  };\n}\nfunction hasNakedIndexQuery(search) {\n  return new URLSearchParams(search).getAll(\"index\").some(v => v === \"\");\n}\nfunction getTargetMatch(matches, location) {\n  let search = typeof location === \"string\" ? parsePath(location).search : location.search;\n  if (matches[matches.length - 1].route.index && hasNakedIndexQuery(search || \"\")) {\n    // Return the leaf index route when index is present\n    return matches[matches.length - 1];\n  }\n  // Otherwise grab the deepest \"path contributing\" match (ignoring index and\n  // pathless layout routes)\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches[pathMatches.length - 1];\n}\nfunction getSubmissionFromNavigation(navigation) {\n  let {\n    formMethod,\n    formAction,\n    formEncType,\n    text,\n    formData,\n    json\n  } = navigation;\n  if (!formMethod || !formAction || !formEncType) {\n    return;\n  }\n  if (text != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json: undefined,\n      text\n    };\n  } else if (formData != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData,\n      json: undefined,\n      text: undefined\n    };\n  } else if (json !== undefined) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json,\n      text: undefined\n    };\n  }\n}\nfunction getLoadingNavigation(location, submission) {\n  if (submission) {\n    let navigation = {\n      state: \"loading\",\n      location,\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text\n    };\n    return navigation;\n  } else {\n    let navigation = {\n      state: \"loading\",\n      location,\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined\n    };\n    return navigation;\n  }\n}\nfunction getSubmittingNavigation(location, submission) {\n  let navigation = {\n    state: \"submitting\",\n    location,\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text\n  };\n  return navigation;\n}\nfunction getLoadingFetcher(submission, data) {\n  if (submission) {\n    let fetcher = {\n      state: \"loading\",\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text,\n      data\n    };\n    return fetcher;\n  } else {\n    let fetcher = {\n      state: \"loading\",\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined,\n      data\n    };\n    return fetcher;\n  }\n}\nfunction getSubmittingFetcher(submission, existingFetcher) {\n  let fetcher = {\n    state: \"submitting\",\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text,\n    data: existingFetcher ? existingFetcher.data : undefined\n  };\n  return fetcher;\n}\nfunction getDoneFetcher(data) {\n  let fetcher = {\n    state: \"idle\",\n    formMethod: undefined,\n    formAction: undefined,\n    formEncType: undefined,\n    formData: undefined,\n    json: undefined,\n    text: undefined,\n    data\n  };\n  return fetcher;\n}\nfunction restoreAppliedTransitions(_window, transitions) {\n  try {\n    let sessionPositions = _window.sessionStorage.getItem(TRANSITIONS_STORAGE_KEY);\n    if (sessionPositions) {\n      let json = JSON.parse(sessionPositions);\n      for (let [k, v] of Object.entries(json || {})) {\n        if (v && Array.isArray(v)) {\n          transitions.set(k, new Set(v || []));\n        }\n      }\n    }\n  } catch (e) {\n    // no-op, use default empty object\n  }\n}\nfunction persistAppliedTransitions(_window, transitions) {\n  if (transitions.size > 0) {\n    let json = {};\n    for (let [k, v] of transitions) {\n      json[k] = [...v];\n    }\n    try {\n      _window.sessionStorage.setItem(TRANSITIONS_STORAGE_KEY, JSON.stringify(json));\n    } catch (error) {\n      warning(false, \"Failed to save applied view transitions in sessionStorage (\" + error + \").\");\n    }\n  }\n}\n//#endregion\n\nexport { AbortedDeferredError, Action, IDLE_BLOCKER, IDLE_FETCHER, IDLE_NAVIGATION, UNSAFE_DEFERRED_SYMBOL, DeferredData as UNSAFE_DeferredData, ErrorResponseImpl as UNSAFE_ErrorResponseImpl, convertRouteMatchToUiMatch as UNSAFE_convertRouteMatchToUiMatch, convertRoutesToDataRoutes as UNSAFE_convertRoutesToDataRoutes, decodePath as UNSAFE_decodePath, getResolveToMatches as UNSAFE_getResolveToMatches, invariant as UNSAFE_invariant, warning as UNSAFE_warning, createBrowserHistory, createHashHistory, createMemoryHistory, createPath, createRouter, createStaticHandler, data, defer, generatePath, getStaticContextFromError, getToPathname, isDataWithResponseInit, isDeferredData, isRouteErrorResponse, joinPaths, json, matchPath, matchRoutes, normalizePathname, parsePath, redirect, redirectDocument, replace, resolvePath, resolveTo, stripBasename };\n//# sourceMappingURL=router.js.map\n","/**\n * React Router v6.29.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport * as React from 'react';\nimport { UNSAFE_invariant, joinPaths, matchPath, UNSAFE_decodePath, UNSAFE_getResolveToMatches, UNSAFE_warning, resolveTo, parsePath, matchRoutes, Action, UNSAFE_convertRouteMatchToUiMatch, stripBasename, IDLE_BLOCKER, isRouteErrorResponse, createMemoryHistory, AbortedDeferredError, createRouter } from '@remix-run/router';\nexport { AbortedDeferredError, Action as NavigationType, createPath, defer, generatePath, isRouteErrorResponse, json, matchPath, matchRoutes, parsePath, redirect, redirectDocument, replace, resolvePath } from '@remix-run/router';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\n// Create react-specific types from the agnostic types in @remix-run/router to\n// export from react-router\nconst DataRouterContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  DataRouterContext.displayName = \"DataRouter\";\n}\nconst DataRouterStateContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  DataRouterStateContext.displayName = \"DataRouterState\";\n}\nconst AwaitContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  AwaitContext.displayName = \"Await\";\n}\n\n/**\n * A Navigator is a \"location changer\"; it's how you get to different locations.\n *\n * Every history instance conforms to the Navigator interface, but the\n * distinction is useful primarily when it comes to the low-level `<Router>` API\n * where both the location and a navigator must be provided separately in order\n * to avoid \"tearing\" that may occur in a suspense-enabled app if the action\n * and/or location were to be read directly from the history instance.\n */\n\nconst NavigationContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  NavigationContext.displayName = \"Navigation\";\n}\nconst LocationContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  LocationContext.displayName = \"Location\";\n}\nconst RouteContext = /*#__PURE__*/React.createContext({\n  outlet: null,\n  matches: [],\n  isDataRoute: false\n});\nif (process.env.NODE_ENV !== \"production\") {\n  RouteContext.displayName = \"Route\";\n}\nconst RouteErrorContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  RouteErrorContext.displayName = \"RouteError\";\n}\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/v6/hooks/use-href\n */\nfunction useHref(to, _temp) {\n  let {\n    relative\n  } = _temp === void 0 ? {} : _temp;\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useHref() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    basename,\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    hash,\n    pathname,\n    search\n  } = useResolvedPath(to, {\n    relative\n  });\n  let joinedPathname = pathname;\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the href.  If this is a root navigation, then just use the raw\n  // basename which allows the basename to have full control over the presence\n  // of a trailing slash on root links\n  if (basename !== \"/\") {\n    joinedPathname = pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n  }\n  return navigator.createHref({\n    pathname: joinedPathname,\n    search,\n    hash\n  });\n}\n\n/**\n * Returns true if this component is a descendant of a `<Router>`.\n *\n * @see https://reactrouter.com/v6/hooks/use-in-router-context\n */\nfunction useInRouterContext() {\n  return React.useContext(LocationContext) != null;\n}\n\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/v6/hooks/use-location\n */\nfunction useLocation() {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useLocation() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  return React.useContext(LocationContext).location;\n}\n\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/v6/hooks/use-navigation-type\n */\nfunction useNavigationType() {\n  return React.useContext(LocationContext).navigationType;\n}\n\n/**\n * Returns a PathMatch object if the given pattern matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * `<NavLink>`.\n *\n * @see https://reactrouter.com/v6/hooks/use-match\n */\nfunction useMatch(pattern) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useMatch() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    pathname\n  } = useLocation();\n  return React.useMemo(() => matchPath(pattern, UNSAFE_decodePath(pathname)), [pathname, pattern]);\n}\n\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\n\nconst navigateEffectWarning = \"You should call navigate() in a React.useEffect(), not when \" + \"your component is first rendered.\";\n\n// Mute warnings for calls to useNavigate in SSR environments\nfunction useIsomorphicLayoutEffect(cb) {\n  let isStatic = React.useContext(NavigationContext).static;\n  if (!isStatic) {\n    // We should be able to get rid of this once react 18.3 is released\n    // See: https://github.com/facebook/react/pull/26395\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(cb);\n  }\n}\n\n/**\n * Returns an imperative method for changing the location. Used by `<Link>`s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/v6/hooks/use-navigate\n */\nfunction useNavigate() {\n  let {\n    isDataRoute\n  } = React.useContext(RouteContext);\n  // Conditional usage is OK here because the usage of a data router is static\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return isDataRoute ? useNavigateStable() : useNavigateUnstable();\n}\nfunction useNavigateUnstable() {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useNavigate() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let dataRouterContext = React.useContext(DataRouterContext);\n  let {\n    basename,\n    future,\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let routePathnamesJson = JSON.stringify(UNSAFE_getResolveToMatches(matches, future.v7_relativeSplatPath));\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = React.useCallback(function (to, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(activeRef.current, navigateEffectWarning) : void 0;\n\n    // Short circuit here since if this happens on first render the navigate\n    // is useless because we haven't wired up our history listener yet\n    if (!activeRef.current) return;\n    if (typeof to === \"number\") {\n      navigator.go(to);\n      return;\n    }\n    let path = resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, options.relative === \"path\");\n\n    // If we're operating within a basename, prepend it to the pathname prior\n    // to handing off to history (but only if we're not in a data router,\n    // otherwise it'll prepend the basename inside of the router).\n    // If this is a root navigation, then we navigate to the raw basename\n    // which allows the basename to have full control over the presence of a\n    // trailing slash on root links\n    if (dataRouterContext == null && basename !== \"/\") {\n      path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n    }\n    (!!options.replace ? navigator.replace : navigator.push)(path, options.state, options);\n  }, [basename, navigator, routePathnamesJson, locationPathname, dataRouterContext]);\n  return navigate;\n}\nconst OutletContext = /*#__PURE__*/React.createContext(null);\n\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/v6/hooks/use-outlet-context\n */\nfunction useOutletContext() {\n  return React.useContext(OutletContext);\n}\n\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by `<Outlet>` to render child routes.\n *\n * @see https://reactrouter.com/v6/hooks/use-outlet\n */\nfunction useOutlet(context) {\n  let outlet = React.useContext(RouteContext).outlet;\n  if (outlet) {\n    return /*#__PURE__*/React.createElement(OutletContext.Provider, {\n      value: context\n    }, outlet);\n  }\n  return outlet;\n}\n\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/v6/hooks/use-params\n */\nfunction useParams() {\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? routeMatch.params : {};\n}\n\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/v6/hooks/use-resolved-path\n */\nfunction useResolvedPath(to, _temp2) {\n  let {\n    relative\n  } = _temp2 === void 0 ? {} : _temp2;\n  let {\n    future\n  } = React.useContext(NavigationContext);\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let routePathnamesJson = JSON.stringify(UNSAFE_getResolveToMatches(matches, future.v7_relativeSplatPath));\n  return React.useMemo(() => resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, relative === \"path\"), [to, routePathnamesJson, locationPathname, relative]);\n}\n\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an `<Outlet>` to render their child route's\n * element.\n *\n * @see https://reactrouter.com/v6/hooks/use-routes\n */\nfunction useRoutes(routes, locationArg) {\n  return useRoutesImpl(routes, locationArg);\n}\n\n// Internal implementation with accept optional param for RouterProvider usage\nfunction useRoutesImpl(routes, locationArg, dataRouterState, future) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useRoutes() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    navigator,\n    static: isStatic\n  } = React.useContext(NavigationContext);\n  let {\n    matches: parentMatches\n  } = React.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n  if (process.env.NODE_ENV !== \"production\") {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = parentRoute && parentRoute.path || \"\";\n    warningOnce(parentPathname, !parentRoute || parentPath.endsWith(\"*\"), \"You rendered descendant <Routes> (or called `useRoutes()`) at \" + (\"\\\"\" + parentPathname + \"\\\" (under <Route path=\\\"\" + parentPath + \"\\\">) but the \") + \"parent route path has no trailing \\\"*\\\". This means if you navigate \" + \"deeper, the parent won't match anymore and therefore the child \" + \"routes will never render.\\n\\n\" + (\"Please change the parent <Route path=\\\"\" + parentPath + \"\\\"> to <Route \") + (\"path=\\\"\" + (parentPath === \"/\" ? \"*\" : parentPath + \"/*\") + \"\\\">.\"));\n  }\n  let locationFromContext = useLocation();\n  let location;\n  if (locationArg) {\n    var _parsedLocationArg$pa;\n    let parsedLocationArg = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n    !(parentPathnameBase === \"/\" || ((_parsedLocationArg$pa = parsedLocationArg.pathname) == null ? void 0 : _parsedLocationArg$pa.startsWith(parentPathnameBase))) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"When overriding the location using `<Routes location>` or `useRoutes(routes, location)`, \" + \"the location pathname must begin with the portion of the URL pathname that was \" + (\"matched by all parent routes. The current pathname base is \\\"\" + parentPathnameBase + \"\\\" \") + (\"but pathname \\\"\" + parsedLocationArg.pathname + \"\\\" was given in the `location` prop.\")) : UNSAFE_invariant(false) : void 0;\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n  let pathname = location.pathname || \"/\";\n  let remainingPathname = pathname;\n  if (parentPathnameBase !== \"/\") {\n    // Determine the remaining pathname by removing the # of URL segments the\n    // parentPathnameBase has, instead of removing based on character count.\n    // This is because we can't guarantee that incoming/outgoing encodings/\n    // decodings will match exactly.\n    // We decode paths before matching on a per-segment basis with\n    // decodeURIComponent(), but we re-encode pathnames via `new URL()` so they\n    // match what `window.location.pathname` would reflect.  Those don't 100%\n    // align when it comes to encoded URI characters such as % and &.\n    //\n    // So we may end up with:\n    //   pathname:           \"/descendant/a%25b/match\"\n    //   parentPathnameBase: \"/descendant/a%b\"\n    //\n    // And the direct substring removal approach won't work :/\n    let parentSegments = parentPathnameBase.replace(/^\\//, \"\").split(\"/\");\n    let segments = pathname.replace(/^\\//, \"\").split(\"/\");\n    remainingPathname = \"/\" + segments.slice(parentSegments.length).join(\"/\");\n  }\n  let matches = !isStatic && dataRouterState && dataRouterState.matches && dataRouterState.matches.length > 0 ? dataRouterState.matches : matchRoutes(routes, {\n    pathname: remainingPathname\n  });\n  if (process.env.NODE_ENV !== \"production\") {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(parentRoute || matches != null, \"No routes matched location \\\"\" + location.pathname + location.search + location.hash + \"\\\" \") : void 0;\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(matches == null || matches[matches.length - 1].route.element !== undefined || matches[matches.length - 1].route.Component !== undefined || matches[matches.length - 1].route.lazy !== undefined, \"Matched leaf route at location \\\"\" + location.pathname + location.search + location.hash + \"\\\" \" + \"does not have an element or Component. This means it will render an <Outlet /> with a \" + \"null value by default resulting in an \\\"empty\\\" page.\") : void 0;\n  }\n  let renderedMatches = _renderMatches(matches && matches.map(match => Object.assign({}, match, {\n    params: Object.assign({}, parentParams, match.params),\n    pathname: joinPaths([parentPathnameBase,\n    // Re-encode pathnames that were decoded inside matchRoutes\n    navigator.encodeLocation ? navigator.encodeLocation(match.pathname).pathname : match.pathname]),\n    pathnameBase: match.pathnameBase === \"/\" ? parentPathnameBase : joinPaths([parentPathnameBase,\n    // Re-encode pathnames that were decoded inside matchRoutes\n    navigator.encodeLocation ? navigator.encodeLocation(match.pathnameBase).pathname : match.pathnameBase])\n  })), parentMatches, dataRouterState, future);\n\n  // When a user passes in a `locationArg`, the associated routes need to\n  // be wrapped in a new `LocationContext.Provider` in order for `useLocation`\n  // to use the scoped location instead of the global location.\n  if (locationArg && renderedMatches) {\n    return /*#__PURE__*/React.createElement(LocationContext.Provider, {\n      value: {\n        location: _extends({\n          pathname: \"/\",\n          search: \"\",\n          hash: \"\",\n          state: null,\n          key: \"default\"\n        }, location),\n        navigationType: Action.Pop\n      }\n    }, renderedMatches);\n  }\n  return renderedMatches;\n}\nfunction DefaultErrorComponent() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error) ? error.status + \" \" + error.statusText : error instanceof Error ? error.message : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = {\n    padding: \"0.5rem\",\n    backgroundColor: lightgrey\n  };\n  let codeStyles = {\n    padding: \"2px 4px\",\n    backgroundColor: lightgrey\n  };\n  let devInfo = null;\n  if (process.env.NODE_ENV !== \"production\") {\n    console.error(\"Error handled by React Router default ErrorBoundary:\", error);\n    devInfo = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", null, \"\\uD83D\\uDCBF Hey developer \\uD83D\\uDC4B\"), /*#__PURE__*/React.createElement(\"p\", null, \"You can provide a way better UX than this when your app throws errors by providing your own \", /*#__PURE__*/React.createElement(\"code\", {\n      style: codeStyles\n    }, \"ErrorBoundary\"), \" or\", \" \", /*#__PURE__*/React.createElement(\"code\", {\n      style: codeStyles\n    }, \"errorElement\"), \" prop on your route.\"));\n  }\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", null, \"Unexpected Application Error!\"), /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      fontStyle: \"italic\"\n    }\n  }, message), stack ? /*#__PURE__*/React.createElement(\"pre\", {\n    style: preStyles\n  }, stack) : null, devInfo);\n}\nconst defaultErrorElement = /*#__PURE__*/React.createElement(DefaultErrorComponent, null);\nclass RenderErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      location: props.location,\n      revalidation: props.revalidation,\n      error: props.error\n    };\n  }\n  static getDerivedStateFromError(error) {\n    return {\n      error: error\n    };\n  }\n  static getDerivedStateFromProps(props, state) {\n    // When we get into an error state, the user will likely click \"back\" to the\n    // previous page that didn't have an error. Because this wraps the entire\n    // application, that will have no effect--the error page continues to display.\n    // This gives us a mechanism to recover from the error when the location changes.\n    //\n    // Whether we're in an error state or not, we update the location in state\n    // so that when we are in an error state, it gets reset when a new location\n    // comes in and the user recovers from the error.\n    if (state.location !== props.location || state.revalidation !== \"idle\" && props.revalidation === \"idle\") {\n      return {\n        error: props.error,\n        location: props.location,\n        revalidation: props.revalidation\n      };\n    }\n\n    // If we're not changing locations, preserve the location but still surface\n    // any new errors that may come through. We retain the existing error, we do\n    // this because the error provided from the app state may be cleared without\n    // the location changing.\n    return {\n      error: props.error !== undefined ? props.error : state.error,\n      location: state.location,\n      revalidation: props.revalidation || state.revalidation\n    };\n  }\n  componentDidCatch(error, errorInfo) {\n    console.error(\"React Router caught the following error during render\", error, errorInfo);\n  }\n  render() {\n    return this.state.error !== undefined ? /*#__PURE__*/React.createElement(RouteContext.Provider, {\n      value: this.props.routeContext\n    }, /*#__PURE__*/React.createElement(RouteErrorContext.Provider, {\n      value: this.state.error,\n      children: this.props.component\n    })) : this.props.children;\n  }\n}\nfunction RenderedRoute(_ref) {\n  let {\n    routeContext,\n    match,\n    children\n  } = _ref;\n  let dataRouterContext = React.useContext(DataRouterContext);\n\n  // Track how deep we got in our render pass to emulate SSR componentDidCatch\n  // in a DataStaticRouter\n  if (dataRouterContext && dataRouterContext.static && dataRouterContext.staticContext && (match.route.errorElement || match.route.ErrorBoundary)) {\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\n  }\n  return /*#__PURE__*/React.createElement(RouteContext.Provider, {\n    value: routeContext\n  }, children);\n}\nfunction _renderMatches(matches, parentMatches, dataRouterState, future) {\n  var _dataRouterState;\n  if (parentMatches === void 0) {\n    parentMatches = [];\n  }\n  if (dataRouterState === void 0) {\n    dataRouterState = null;\n  }\n  if (future === void 0) {\n    future = null;\n  }\n  if (matches == null) {\n    var _future;\n    if (!dataRouterState) {\n      return null;\n    }\n    if (dataRouterState.errors) {\n      // Don't bail if we have data router errors so we can render them in the\n      // boundary.  Use the pre-matched (or shimmed) matches\n      matches = dataRouterState.matches;\n    } else if ((_future = future) != null && _future.v7_partialHydration && parentMatches.length === 0 && !dataRouterState.initialized && dataRouterState.matches.length > 0) {\n      // Don't bail if we're initializing with partial hydration and we have\n      // router matches.  That means we're actively running `patchRoutesOnNavigation`\n      // so we should render down the partial matches to the appropriate\n      // `HydrateFallback`.  We only do this if `parentMatches` is empty so it\n      // only impacts the root matches for `RouterProvider` and no descendant\n      // `<Routes>`\n      matches = dataRouterState.matches;\n    } else {\n      return null;\n    }\n  }\n  let renderedMatches = matches;\n\n  // If we have data errors, trim matches to the highest error boundary\n  let errors = (_dataRouterState = dataRouterState) == null ? void 0 : _dataRouterState.errors;\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(m => m.route.id && (errors == null ? void 0 : errors[m.route.id]) !== undefined);\n    !(errorIndex >= 0) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"Could not find a matching route for errors on route IDs: \" + Object.keys(errors).join(\",\")) : UNSAFE_invariant(false) : void 0;\n    renderedMatches = renderedMatches.slice(0, Math.min(renderedMatches.length, errorIndex + 1));\n  }\n\n  // If we're in a partial hydration mode, detect if we need to render down to\n  // a given HydrateFallback while we load the rest of the hydration data\n  let renderFallback = false;\n  let fallbackIndex = -1;\n  if (dataRouterState && future && future.v7_partialHydration) {\n    for (let i = 0; i < renderedMatches.length; i++) {\n      let match = renderedMatches[i];\n      // Track the deepest fallback up until the first route without data\n      if (match.route.HydrateFallback || match.route.hydrateFallbackElement) {\n        fallbackIndex = i;\n      }\n      if (match.route.id) {\n        let {\n          loaderData,\n          errors\n        } = dataRouterState;\n        let needsToRunLoader = match.route.loader && loaderData[match.route.id] === undefined && (!errors || errors[match.route.id] === undefined);\n        if (match.route.lazy || needsToRunLoader) {\n          // We found the first route that's not ready to render (waiting on\n          // lazy, or has a loader that hasn't run yet).  Flag that we need to\n          // render a fallback and render up until the appropriate fallback\n          renderFallback = true;\n          if (fallbackIndex >= 0) {\n            renderedMatches = renderedMatches.slice(0, fallbackIndex + 1);\n          } else {\n            renderedMatches = [renderedMatches[0]];\n          }\n          break;\n        }\n      }\n    }\n  }\n  return renderedMatches.reduceRight((outlet, match, index) => {\n    // Only data routers handle errors/fallbacks\n    let error;\n    let shouldRenderHydrateFallback = false;\n    let errorElement = null;\n    let hydrateFallbackElement = null;\n    if (dataRouterState) {\n      error = errors && match.route.id ? errors[match.route.id] : undefined;\n      errorElement = match.route.errorElement || defaultErrorElement;\n      if (renderFallback) {\n        if (fallbackIndex < 0 && index === 0) {\n          warningOnce(\"route-fallback\", false, \"No `HydrateFallback` element provided to render during initial hydration\");\n          shouldRenderHydrateFallback = true;\n          hydrateFallbackElement = null;\n        } else if (fallbackIndex === index) {\n          shouldRenderHydrateFallback = true;\n          hydrateFallbackElement = match.route.hydrateFallbackElement || null;\n        }\n      }\n    }\n    let matches = parentMatches.concat(renderedMatches.slice(0, index + 1));\n    let getChildren = () => {\n      let children;\n      if (error) {\n        children = errorElement;\n      } else if (shouldRenderHydrateFallback) {\n        children = hydrateFallbackElement;\n      } else if (match.route.Component) {\n        // Note: This is a de-optimized path since React won't re-use the\n        // ReactElement since it's identity changes with each new\n        // React.createElement call.  We keep this so folks can use\n        // `<Route Component={...}>` in `<Routes>` but generally `Component`\n        // usage is only advised in `RouterProvider` when we can convert it to\n        // `element` ahead of time.\n        children = /*#__PURE__*/React.createElement(match.route.Component, null);\n      } else if (match.route.element) {\n        children = match.route.element;\n      } else {\n        children = outlet;\n      }\n      return /*#__PURE__*/React.createElement(RenderedRoute, {\n        match: match,\n        routeContext: {\n          outlet,\n          matches,\n          isDataRoute: dataRouterState != null\n        },\n        children: children\n      });\n    };\n    // Only wrap in an error boundary within data router usages when we have an\n    // ErrorBoundary/errorElement on this route.  Otherwise let it bubble up to\n    // an ancestor ErrorBoundary/errorElement\n    return dataRouterState && (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? /*#__PURE__*/React.createElement(RenderErrorBoundary, {\n      location: dataRouterState.location,\n      revalidation: dataRouterState.revalidation,\n      component: errorElement,\n      error: error,\n      children: getChildren(),\n      routeContext: {\n        outlet: null,\n        matches,\n        isDataRoute: true\n      }\n    }) : getChildren();\n  }, null);\n}\nvar DataRouterHook = /*#__PURE__*/function (DataRouterHook) {\n  DataRouterHook[\"UseBlocker\"] = \"useBlocker\";\n  DataRouterHook[\"UseRevalidator\"] = \"useRevalidator\";\n  DataRouterHook[\"UseNavigateStable\"] = \"useNavigate\";\n  return DataRouterHook;\n}(DataRouterHook || {});\nvar DataRouterStateHook = /*#__PURE__*/function (DataRouterStateHook) {\n  DataRouterStateHook[\"UseBlocker\"] = \"useBlocker\";\n  DataRouterStateHook[\"UseLoaderData\"] = \"useLoaderData\";\n  DataRouterStateHook[\"UseActionData\"] = \"useActionData\";\n  DataRouterStateHook[\"UseRouteError\"] = \"useRouteError\";\n  DataRouterStateHook[\"UseNavigation\"] = \"useNavigation\";\n  DataRouterStateHook[\"UseRouteLoaderData\"] = \"useRouteLoaderData\";\n  DataRouterStateHook[\"UseMatches\"] = \"useMatches\";\n  DataRouterStateHook[\"UseRevalidator\"] = \"useRevalidator\";\n  DataRouterStateHook[\"UseNavigateStable\"] = \"useNavigate\";\n  DataRouterStateHook[\"UseRouteId\"] = \"useRouteId\";\n  return DataRouterStateHook;\n}(DataRouterStateHook || {});\nfunction getDataRouterConsoleError(hookName) {\n  return hookName + \" must be used within a data router.  See https://reactrouter.com/v6/routers/picking-a-router.\";\n}\nfunction useDataRouterContext(hookName) {\n  let ctx = React.useContext(DataRouterContext);\n  !ctx ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return ctx;\n}\nfunction useDataRouterState(hookName) {\n  let state = React.useContext(DataRouterStateContext);\n  !state ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return state;\n}\nfunction useRouteContext(hookName) {\n  let route = React.useContext(RouteContext);\n  !route ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return route;\n}\n\n// Internal version with hookName-aware debugging\nfunction useCurrentRouteId(hookName) {\n  let route = useRouteContext(hookName);\n  let thisRoute = route.matches[route.matches.length - 1];\n  !thisRoute.route.id ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, hookName + \" can only be used on routes that contain a unique \\\"id\\\"\") : UNSAFE_invariant(false) : void 0;\n  return thisRoute.route.id;\n}\n\n/**\n * Returns the ID for the nearest contextual route\n */\nfunction useRouteId() {\n  return useCurrentRouteId(DataRouterStateHook.UseRouteId);\n}\n\n/**\n * Returns the current navigation, defaulting to an \"idle\" navigation when\n * no navigation is in progress\n */\nfunction useNavigation() {\n  let state = useDataRouterState(DataRouterStateHook.UseNavigation);\n  return state.navigation;\n}\n\n/**\n * Returns a revalidate function for manually triggering revalidation, as well\n * as the current state of any manual revalidations\n */\nfunction useRevalidator() {\n  let dataRouterContext = useDataRouterContext(DataRouterHook.UseRevalidator);\n  let state = useDataRouterState(DataRouterStateHook.UseRevalidator);\n  return React.useMemo(() => ({\n    revalidate: dataRouterContext.router.revalidate,\n    state: state.revalidation\n  }), [dataRouterContext.router.revalidate, state.revalidation]);\n}\n\n/**\n * Returns the active route matches, useful for accessing loaderData for\n * parent/child routes or the route \"handle\" property\n */\nfunction useMatches() {\n  let {\n    matches,\n    loaderData\n  } = useDataRouterState(DataRouterStateHook.UseMatches);\n  return React.useMemo(() => matches.map(m => UNSAFE_convertRouteMatchToUiMatch(m, loaderData)), [matches, loaderData]);\n}\n\n/**\n * Returns the loader data for the nearest ancestor Route loader\n */\nfunction useLoaderData() {\n  let state = useDataRouterState(DataRouterStateHook.UseLoaderData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n  if (state.errors && state.errors[routeId] != null) {\n    console.error(\"You cannot `useLoaderData` in an errorElement (routeId: \" + routeId + \")\");\n    return undefined;\n  }\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the loaderData for the given routeId\n */\nfunction useRouteLoaderData(routeId) {\n  let state = useDataRouterState(DataRouterStateHook.UseRouteLoaderData);\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the action data for the nearest ancestor Route action\n */\nfunction useActionData() {\n  let state = useDataRouterState(DataRouterStateHook.UseActionData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n  return state.actionData ? state.actionData[routeId] : undefined;\n}\n\n/**\n * Returns the nearest ancestor Route error, which could be a loader/action\n * error or a render error.  This is intended to be called from your\n * ErrorBoundary/errorElement to display a proper error message.\n */\nfunction useRouteError() {\n  var _state$errors;\n  let error = React.useContext(RouteErrorContext);\n  let state = useDataRouterState(DataRouterStateHook.UseRouteError);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseRouteError);\n\n  // If this was a render error, we put it in a RouteError context inside\n  // of RenderErrorBoundary\n  if (error !== undefined) {\n    return error;\n  }\n\n  // Otherwise look for errors from our data router state\n  return (_state$errors = state.errors) == null ? void 0 : _state$errors[routeId];\n}\n\n/**\n * Returns the happy-path data from the nearest ancestor `<Await />` value\n */\nfunction useAsyncValue() {\n  let value = React.useContext(AwaitContext);\n  return value == null ? void 0 : value._data;\n}\n\n/**\n * Returns the error from the nearest ancestor `<Await />` value\n */\nfunction useAsyncError() {\n  let value = React.useContext(AwaitContext);\n  return value == null ? void 0 : value._error;\n}\nlet blockerId = 0;\n\n/**\n * Allow the application to block navigations within the SPA and present the\n * user a confirmation dialog to confirm the navigation.  Mostly used to avoid\n * using half-filled form data.  This does not handle hard-reloads or\n * cross-origin navigations.\n */\nfunction useBlocker(shouldBlock) {\n  let {\n    router,\n    basename\n  } = useDataRouterContext(DataRouterHook.UseBlocker);\n  let state = useDataRouterState(DataRouterStateHook.UseBlocker);\n  let [blockerKey, setBlockerKey] = React.useState(\"\");\n  let blockerFunction = React.useCallback(arg => {\n    if (typeof shouldBlock !== \"function\") {\n      return !!shouldBlock;\n    }\n    if (basename === \"/\") {\n      return shouldBlock(arg);\n    }\n\n    // If they provided us a function and we've got an active basename, strip\n    // it from the locations we expose to the user to match the behavior of\n    // useLocation\n    let {\n      currentLocation,\n      nextLocation,\n      historyAction\n    } = arg;\n    return shouldBlock({\n      currentLocation: _extends({}, currentLocation, {\n        pathname: stripBasename(currentLocation.pathname, basename) || currentLocation.pathname\n      }),\n      nextLocation: _extends({}, nextLocation, {\n        pathname: stripBasename(nextLocation.pathname, basename) || nextLocation.pathname\n      }),\n      historyAction\n    });\n  }, [basename, shouldBlock]);\n\n  // This effect is in charge of blocker key assignment and deletion (which is\n  // tightly coupled to the key)\n  React.useEffect(() => {\n    let key = String(++blockerId);\n    setBlockerKey(key);\n    return () => router.deleteBlocker(key);\n  }, [router]);\n\n  // This effect handles assigning the blockerFunction.  This is to handle\n  // unstable blocker function identities, and happens only after the prior\n  // effect so we don't get an orphaned blockerFunction in the router with a\n  // key of \"\".  Until then we just have the IDLE_BLOCKER.\n  React.useEffect(() => {\n    if (blockerKey !== \"\") {\n      router.getBlocker(blockerKey, blockerFunction);\n    }\n  }, [router, blockerKey, blockerFunction]);\n\n  // Prefer the blocker from `state` not `router.state` since DataRouterContext\n  // is memoized so this ensures we update on blocker state updates\n  return blockerKey && state.blockers.has(blockerKey) ? state.blockers.get(blockerKey) : IDLE_BLOCKER;\n}\n\n/**\n * Stable version of useNavigate that is used when we are in the context of\n * a RouterProvider.\n */\nfunction useNavigateStable() {\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseNavigateStable);\n  let id = useCurrentRouteId(DataRouterStateHook.UseNavigateStable);\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = React.useCallback(function (to, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(activeRef.current, navigateEffectWarning) : void 0;\n\n    // Short circuit here since if this happens on first render the navigate\n    // is useless because we haven't wired up our router subscriber yet\n    if (!activeRef.current) return;\n    if (typeof to === \"number\") {\n      router.navigate(to);\n    } else {\n      router.navigate(to, _extends({\n        fromRouteId: id\n      }, options));\n    }\n  }, [router, id]);\n  return navigate;\n}\nconst alreadyWarned$1 = {};\nfunction warningOnce(key, cond, message) {\n  if (!cond && !alreadyWarned$1[key]) {\n    alreadyWarned$1[key] = true;\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, message) : void 0;\n  }\n}\n\nconst alreadyWarned = {};\nfunction warnOnce(key, message) {\n  if (process.env.NODE_ENV !== \"production\" && !alreadyWarned[message]) {\n    alreadyWarned[message] = true;\n    console.warn(message);\n  }\n}\nconst logDeprecation = (flag, msg, link) => warnOnce(flag, \"\\u26A0\\uFE0F React Router Future Flag Warning: \" + msg + \". \" + (\"You can use the `\" + flag + \"` future flag to opt-in early. \") + (\"For more information, see \" + link + \".\"));\nfunction logV6DeprecationWarnings(renderFuture, routerFuture) {\n  if ((renderFuture == null ? void 0 : renderFuture.v7_startTransition) === undefined) {\n    logDeprecation(\"v7_startTransition\", \"React Router will begin wrapping state updates in `React.startTransition` in v7\", \"https://reactrouter.com/v6/upgrading/future#v7_starttransition\");\n  }\n  if ((renderFuture == null ? void 0 : renderFuture.v7_relativeSplatPath) === undefined && (!routerFuture || !routerFuture.v7_relativeSplatPath)) {\n    logDeprecation(\"v7_relativeSplatPath\", \"Relative route resolution within Splat routes is changing in v7\", \"https://reactrouter.com/v6/upgrading/future#v7_relativesplatpath\");\n  }\n  if (routerFuture) {\n    if (routerFuture.v7_fetcherPersist === undefined) {\n      logDeprecation(\"v7_fetcherPersist\", \"The persistence behavior of fetchers is changing in v7\", \"https://reactrouter.com/v6/upgrading/future#v7_fetcherpersist\");\n    }\n    if (routerFuture.v7_normalizeFormMethod === undefined) {\n      logDeprecation(\"v7_normalizeFormMethod\", \"Casing of `formMethod` fields is being normalized to uppercase in v7\", \"https://reactrouter.com/v6/upgrading/future#v7_normalizeformmethod\");\n    }\n    if (routerFuture.v7_partialHydration === undefined) {\n      logDeprecation(\"v7_partialHydration\", \"`RouterProvider` hydration behavior is changing in v7\", \"https://reactrouter.com/v6/upgrading/future#v7_partialhydration\");\n    }\n    if (routerFuture.v7_skipActionErrorRevalidation === undefined) {\n      logDeprecation(\"v7_skipActionErrorRevalidation\", \"The revalidation behavior after 4xx/5xx `action` responses is changing in v7\", \"https://reactrouter.com/v6/upgrading/future#v7_skipactionerrorrevalidation\");\n    }\n  }\n}\n\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nfunction RouterProvider(_ref) {\n  let {\n    fallbackElement,\n    router,\n    future\n  } = _ref;\n  let [state, setStateImpl] = React.useState(router.state);\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    if (v7_startTransition && startTransitionImpl) {\n      startTransitionImpl(() => setStateImpl(newState));\n    } else {\n      setStateImpl(newState);\n    }\n  }, [setStateImpl, v7_startTransition]);\n\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n  React.useEffect(() => {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(fallbackElement == null || !router.future.v7_partialHydration, \"`<RouterProvider fallbackElement>` is deprecated when using \" + \"`v7_partialHydration`, use a `HydrateFallback` component instead\") : void 0;\n    // Only log this once on initial mount\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  let navigator = React.useMemo(() => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: n => router.navigate(n),\n      push: (to, state, opts) => router.navigate(to, {\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      }),\n      replace: (to, state, opts) => router.navigate(to, {\n        replace: true,\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      })\n    };\n  }, [router]);\n  let basename = router.basename || \"/\";\n  let dataRouterContext = React.useMemo(() => ({\n    router,\n    navigator,\n    static: false,\n    basename\n  }), [router, navigator, basename]);\n  React.useEffect(() => logV6DeprecationWarnings(future, router.future), [router, future]);\n\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DataRouterContext.Provider, {\n    value: dataRouterContext\n  }, /*#__PURE__*/React.createElement(DataRouterStateContext.Provider, {\n    value: state\n  }, /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    location: state.location,\n    navigationType: state.historyAction,\n    navigator: navigator,\n    future: {\n      v7_relativeSplatPath: router.future.v7_relativeSplatPath\n    }\n  }, state.initialized || router.future.v7_partialHydration ? /*#__PURE__*/React.createElement(DataRoutes, {\n    routes: router.routes,\n    future: router.future,\n    state: state\n  }) : fallbackElement))), null);\n}\nfunction DataRoutes(_ref2) {\n  let {\n    routes,\n    future,\n    state\n  } = _ref2;\n  return useRoutesImpl(routes, undefined, state, future);\n}\n/**\n * A `<Router>` that stores all entries in memory.\n *\n * @see https://reactrouter.com/v6/router-components/memory-router\n */\nfunction MemoryRouter(_ref3) {\n  let {\n    basename,\n    children,\n    initialEntries,\n    initialIndex,\n    future\n  } = _ref3;\n  let historyRef = React.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex,\n      v5Compat: true\n    });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  React.useEffect(() => logV6DeprecationWarnings(future), [future]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history,\n    future: future\n  });\n}\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/v6/components/navigate\n */\nfunction Navigate(_ref4) {\n  let {\n    to,\n    replace,\n    state,\n    relative\n  } = _ref4;\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of\n  // the router loaded. We can help them understand how to avoid that.\n  \"<Navigate> may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    future,\n    static: isStatic\n  } = React.useContext(NavigationContext);\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(!isStatic, \"<Navigate> must not be used on the initial render in a <StaticRouter>. \" + \"This is a no-op, but you should modify your code so the <Navigate> is \" + \"only ever rendered in response to some user interaction or state change.\") : void 0;\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let navigate = useNavigate();\n\n  // Resolve the path outside of the effect so that when effects run twice in\n  // StrictMode they navigate to the same place\n  let path = resolveTo(to, UNSAFE_getResolveToMatches(matches, future.v7_relativeSplatPath), locationPathname, relative === \"path\");\n  let jsonPath = JSON.stringify(path);\n  React.useEffect(() => navigate(JSON.parse(jsonPath), {\n    replace,\n    state,\n    relative\n  }), [navigate, jsonPath, relative, replace, state]);\n  return null;\n}\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/v6/components/outlet\n */\nfunction Outlet(props) {\n  return useOutlet(props.context);\n}\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/v6/components/route\n */\nfunction Route(_props) {\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"A <Route> is only ever to be used as the child of <Routes> element, \" + \"never rendered directly. Please wrap your <Route> in a <Routes>.\") : UNSAFE_invariant(false) ;\n}\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a `<Router>` directly. Instead, you'll render a\n * router that is more specific to your environment such as a `<BrowserRouter>`\n * in web browsers or a `<StaticRouter>` for server rendering.\n *\n * @see https://reactrouter.com/v6/router-components/router\n */\nfunction Router(_ref5) {\n  let {\n    basename: basenameProp = \"/\",\n    children = null,\n    location: locationProp,\n    navigationType = Action.Pop,\n    navigator,\n    static: staticProp = false,\n    future\n  } = _ref5;\n  !!useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"You cannot render a <Router> inside another <Router>.\" + \" You should never have more than one in your app.\") : UNSAFE_invariant(false) : void 0;\n\n  // Preserve trailing slashes on basename, so we can let the user control\n  // the enforcement of trailing slashes throughout the app\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = React.useMemo(() => ({\n    basename,\n    navigator,\n    static: staticProp,\n    future: _extends({\n      v7_relativeSplatPath: false\n    }, future)\n  }), [basename, future, navigator, staticProp]);\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\"\n  } = locationProp;\n  let locationContext = React.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n    if (trailingPathname == null) {\n      return null;\n    }\n    return {\n      location: {\n        pathname: trailingPathname,\n        search,\n        hash,\n        state,\n        key\n      },\n      navigationType\n    };\n  }, [basename, pathname, search, hash, state, key, navigationType]);\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(locationContext != null, \"<Router basename=\\\"\" + basename + \"\\\"> is not able to match the URL \" + (\"\\\"\" + pathname + search + hash + \"\\\" because it does not start with the \") + \"basename, so the <Router> won't render anything.\") : void 0;\n  if (locationContext == null) {\n    return null;\n  }\n  return /*#__PURE__*/React.createElement(NavigationContext.Provider, {\n    value: navigationContext\n  }, /*#__PURE__*/React.createElement(LocationContext.Provider, {\n    children: children,\n    value: locationContext\n  }));\n}\n/**\n * A container for a nested tree of `<Route>` elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/v6/components/routes\n */\nfunction Routes(_ref6) {\n  let {\n    children,\n    location\n  } = _ref6;\n  return useRoutes(createRoutesFromChildren(children), location);\n}\n/**\n * Component to use for rendering lazily loaded data from returning defer()\n * in a loader function\n */\nfunction Await(_ref7) {\n  let {\n    children,\n    errorElement,\n    resolve\n  } = _ref7;\n  return /*#__PURE__*/React.createElement(AwaitErrorBoundary, {\n    resolve: resolve,\n    errorElement: errorElement\n  }, /*#__PURE__*/React.createElement(ResolveAwait, null, children));\n}\nvar AwaitRenderStatus = /*#__PURE__*/function (AwaitRenderStatus) {\n  AwaitRenderStatus[AwaitRenderStatus[\"pending\"] = 0] = \"pending\";\n  AwaitRenderStatus[AwaitRenderStatus[\"success\"] = 1] = \"success\";\n  AwaitRenderStatus[AwaitRenderStatus[\"error\"] = 2] = \"error\";\n  return AwaitRenderStatus;\n}(AwaitRenderStatus || {});\nconst neverSettledPromise = new Promise(() => {});\nclass AwaitErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null\n    };\n  }\n  static getDerivedStateFromError(error) {\n    return {\n      error\n    };\n  }\n  componentDidCatch(error, errorInfo) {\n    console.error(\"<Await> caught the following error during render\", error, errorInfo);\n  }\n  render() {\n    let {\n      children,\n      errorElement,\n      resolve\n    } = this.props;\n    let promise = null;\n    let status = AwaitRenderStatus.pending;\n    if (!(resolve instanceof Promise)) {\n      // Didn't get a promise - provide as a resolved promise\n      status = AwaitRenderStatus.success;\n      promise = Promise.resolve();\n      Object.defineProperty(promise, \"_tracked\", {\n        get: () => true\n      });\n      Object.defineProperty(promise, \"_data\", {\n        get: () => resolve\n      });\n    } else if (this.state.error) {\n      // Caught a render error, provide it as a rejected promise\n      status = AwaitRenderStatus.error;\n      let renderError = this.state.error;\n      promise = Promise.reject().catch(() => {}); // Avoid unhandled rejection warnings\n      Object.defineProperty(promise, \"_tracked\", {\n        get: () => true\n      });\n      Object.defineProperty(promise, \"_error\", {\n        get: () => renderError\n      });\n    } else if (resolve._tracked) {\n      // Already tracked promise - check contents\n      promise = resolve;\n      status = \"_error\" in promise ? AwaitRenderStatus.error : \"_data\" in promise ? AwaitRenderStatus.success : AwaitRenderStatus.pending;\n    } else {\n      // Raw (untracked) promise - track it\n      status = AwaitRenderStatus.pending;\n      Object.defineProperty(resolve, \"_tracked\", {\n        get: () => true\n      });\n      promise = resolve.then(data => Object.defineProperty(resolve, \"_data\", {\n        get: () => data\n      }), error => Object.defineProperty(resolve, \"_error\", {\n        get: () => error\n      }));\n    }\n    if (status === AwaitRenderStatus.error && promise._error instanceof AbortedDeferredError) {\n      // Freeze the UI by throwing a never resolved promise\n      throw neverSettledPromise;\n    }\n    if (status === AwaitRenderStatus.error && !errorElement) {\n      // No errorElement, throw to the nearest route-level error boundary\n      throw promise._error;\n    }\n    if (status === AwaitRenderStatus.error) {\n      // Render via our errorElement\n      return /*#__PURE__*/React.createElement(AwaitContext.Provider, {\n        value: promise,\n        children: errorElement\n      });\n    }\n    if (status === AwaitRenderStatus.success) {\n      // Render children with resolved value\n      return /*#__PURE__*/React.createElement(AwaitContext.Provider, {\n        value: promise,\n        children: children\n      });\n    }\n\n    // Throw to the suspense boundary\n    throw promise;\n  }\n}\n\n/**\n * @private\n * Indirection to leverage useAsyncValue for a render-prop API on `<Await>`\n */\nfunction ResolveAwait(_ref8) {\n  let {\n    children\n  } = _ref8;\n  let data = useAsyncValue();\n  let toRender = typeof children === \"function\" ? children(data) : children;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, toRender);\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/v6/utils/create-routes-from-children\n */\nfunction createRoutesFromChildren(children, parentPath) {\n  if (parentPath === void 0) {\n    parentPath = [];\n  }\n  let routes = [];\n  React.Children.forEach(children, (element, index) => {\n    if (! /*#__PURE__*/React.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n    let treePath = [...parentPath, index];\n    if (element.type === React.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(routes, createRoutesFromChildren(element.props.children, treePath));\n      return;\n    }\n    !(element.type === Route) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"[\" + (typeof element.type === \"string\" ? element.type : element.type.name) + \"] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>\") : UNSAFE_invariant(false) : void 0;\n    !(!element.props.index || !element.props.children) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"An index route cannot have child routes.\") : UNSAFE_invariant(false) : void 0;\n    let route = {\n      id: element.props.id || treePath.join(\"-\"),\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      Component: element.props.Component,\n      index: element.props.index,\n      path: element.props.path,\n      loader: element.props.loader,\n      action: element.props.action,\n      errorElement: element.props.errorElement,\n      ErrorBoundary: element.props.ErrorBoundary,\n      hasErrorBoundary: element.props.ErrorBoundary != null || element.props.errorElement != null,\n      shouldRevalidate: element.props.shouldRevalidate,\n      handle: element.props.handle,\n      lazy: element.props.lazy\n    };\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(element.props.children, treePath);\n    }\n    routes.push(route);\n  });\n  return routes;\n}\n\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\nfunction renderMatches(matches) {\n  return _renderMatches(matches);\n}\n\nfunction mapRouteProperties(route) {\n  let updates = {\n    // Note: this check also occurs in createRoutesFromChildren so update\n    // there if you change this -- please and thank you!\n    hasErrorBoundary: route.ErrorBoundary != null || route.errorElement != null\n  };\n  if (route.Component) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (route.element) {\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"You should not include both `Component` and `element` on your route - \" + \"`Component` will be used.\") : void 0;\n      }\n    }\n    Object.assign(updates, {\n      element: /*#__PURE__*/React.createElement(route.Component),\n      Component: undefined\n    });\n  }\n  if (route.HydrateFallback) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (route.hydrateFallbackElement) {\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"You should not include both `HydrateFallback` and `hydrateFallbackElement` on your route - \" + \"`HydrateFallback` will be used.\") : void 0;\n      }\n    }\n    Object.assign(updates, {\n      hydrateFallbackElement: /*#__PURE__*/React.createElement(route.HydrateFallback),\n      HydrateFallback: undefined\n    });\n  }\n  if (route.ErrorBoundary) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (route.errorElement) {\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"You should not include both `ErrorBoundary` and `errorElement` on your route - \" + \"`ErrorBoundary` will be used.\") : void 0;\n      }\n    }\n    Object.assign(updates, {\n      errorElement: /*#__PURE__*/React.createElement(route.ErrorBoundary),\n      ErrorBoundary: undefined\n    });\n  }\n  return updates;\n}\nfunction createMemoryRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createMemoryHistory({\n      initialEntries: opts == null ? void 0 : opts.initialEntries,\n      initialIndex: opts == null ? void 0 : opts.initialIndex\n    }),\n    hydrationData: opts == null ? void 0 : opts.hydrationData,\n    routes,\n    mapRouteProperties,\n    dataStrategy: opts == null ? void 0 : opts.dataStrategy,\n    patchRoutesOnNavigation: opts == null ? void 0 : opts.patchRoutesOnNavigation\n  }).initialize();\n}\n\nexport { Await, MemoryRouter, Navigate, Outlet, Route, Router, RouterProvider, Routes, DataRouterContext as UNSAFE_DataRouterContext, DataRouterStateContext as UNSAFE_DataRouterStateContext, LocationContext as UNSAFE_LocationContext, NavigationContext as UNSAFE_NavigationContext, RouteContext as UNSAFE_RouteContext, logV6DeprecationWarnings as UNSAFE_logV6DeprecationWarnings, mapRouteProperties as UNSAFE_mapRouteProperties, useRouteId as UNSAFE_useRouteId, useRoutesImpl as UNSAFE_useRoutesImpl, createMemoryRouter, createRoutesFromChildren, createRoutesFromChildren as createRoutesFromElements, renderMatches, useActionData, useAsyncError, useAsyncValue, useBlocker, useHref, useInRouterContext, useLoaderData, useLocation, useMatch, useMatches, useNavigate, useNavigation, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRevalidator, useRouteError, useRouteLoaderData, useRoutes };\n//# sourceMappingURL=index.js.map\n"],"names":["l","n","p","q","r","t","u","v","w","x","y","z","A","a","B","C","D","E","b","e","F","G","H","I","J","K","L","M","d","c","k","h","g","f","m","N","O","escape","P","Q","R","S","T","U","V","W","X","react_production_min","reactModule","require$$0","reactJsxRuntime_production_min","jsxRuntimeModule","_extends","target","i","source","key","Action","PopStateEventType","createBrowserHistory","options","createBrowserLocation","window","globalHistory","pathname","search","hash","createLocation","createBrowserHref","to","createPath","getUrlBasedHistory","invariant","value","message","warning","cond","createKey","getHistoryState","location","index","current","state","parsePath","_ref","path","parsedPath","hashIndex","searchIndex","getLocation","createHref","validateLocation","v5Compat","action","listener","getIndex","handlePop","nextIndex","delta","history","push","historyState","url","error","replace","createURL","base","href","fn","ResultType","immutableRouteKeys","isIndexRoute","route","convertRoutesToDataRoutes","routes","mapRouteProperties","parentPath","manifest","treePath","id","indexRoute","pathOrLayoutRoute","matchRoutes","locationArg","basename","matchRoutesImpl","allowPartial","stripBasename","branches","flattenRoutes","rankRouteBranches","matches","decoded","decodePath","matchRouteBranch","convertRouteMatchToUiMatch","match","loaderData","params","parentsMeta","flattenRoute","relativePath","meta","joinPaths","routesMeta","computeScore","_route$path","exploded","explodeOptionalSegments","segments","first","rest","isOptional","required","restExploded","result","subpath","compareIndexes","paramRe","dynamicSegmentValue","indexRouteValue","emptySegmentValue","staticSegmentValue","splatPenalty","isSplat","s","initialScore","score","segment","branch","matchedParams","matchedPathname","end","remainingPathname","matchPath","normalizePathname","pattern","matcher","compiledParams","compilePath","pathnameBase","captureGroups","memo","paramName","splatValue","caseSensitive","regexpSource","_","startIndex","nextChar","resolvePath","fromPathname","toPathname","resolvePathname","normalizeSearch","normalizeHash","getInvalidPathError","char","field","dest","getPathContributingMatches","getResolveToMatches","v7_relativeSplatPath","pathMatches","idx","resolveTo","toArg","routePathnames","locationPathname","isPathRelative","isEmptyPath","from","routePathnameIndex","toSegments","hasExplicitTrailingSlash","hasCurrentTrailingSlash","paths","json","data","init","responseInit","headers","DataWithResponseInit","AbortedDeferredError","DeferredData","reject","onAbort","acc","_ref2","promise","undefinedError","aborted","settledKey","subscriber","signal","resolve","_ref3","unwrapTrackedPromise","isTrackedPromise","defer","redirect","redirectDocument","response","ErrorResponseImpl","status","statusText","internal","isRouteErrorResponse","validMutationMethodsArr","validMutationMethods","validRequestMethodsArr","validRequestMethods","redirectStatusCodes","redirectPreserveMethodStatusCodes","IDLE_NAVIGATION","IDLE_FETCHER","IDLE_BLOCKER","ABSOLUTE_URL_REGEX","defaultMapRouteProperties","TRANSITIONS_STORAGE_KEY","createRouter","routerWindow","isBrowser","isServer","detectErrorBoundary","dataRoutes","inFlightDataRoutes","dataStrategyImpl","defaultDataStrategy","patchRoutesOnNavigationImpl","future","unlistenHistory","subscribers","savedScrollPositions","getScrollRestorationKey","getScrollPosition","initialScrollRestored","initialMatches","initialMatchesIsFOW","initialErrors","getInternalRouterError","getShortCircuitMatches","checkFogOfWar","initialized","errors","shouldLoadRouteOnHydration","fogOfWar","router","pendingAction","pendingPreventScrollReset","pendingNavigationController","pendingViewTransitionEnabled","appliedViewTransitions","removePageHideEventListener","isUninterruptedRevalidation","isRevalidationRequired","cancelledDeferredRoutes","cancelledFetcherLoads","fetchControllers","incrementingLoadId","pendingNavigationLoadId","fetchReloadIds","fetchRedirectIds","fetchLoadMatches","activeFetchers","deletedFetchers","activeDeferreds","blockerFunctions","unblockBlockerHistoryUpdate","initialize","historyAction","blockerKey","shouldBlockNavigation","nextHistoryUpdatePromise","updateBlocker","blockers","updateState","startNavigation","restoreAppliedTransitions","_saveAppliedTransitions","persistAppliedTransitions","dispose","deleteFetcher","deleteBlocker","subscribe","newState","opts","completedFetchers","deletedFetchersKeys","fetcher","completeNavigation","_temp","_location$state","_location$state2","flushSync","isActionReload","isMutationMethod","actionData","mergeLoaderData","preventScrollReset","viewTransitionOpts","priorPaths","toPaths","getSavedScrollPosition","navigate","normalizedPath","normalizeTo","submission","normalizeNavigateOptions","currentLocation","nextLocation","userReplace","revalidate","interruptActiveLoads","saveScrollPosition","routesToUse","loadingNavigation","notFoundMatches","handleNavigational404","isHashChangeOnly","request","createClientSideRequest","pendingActionResult","findNearestBoundary","actionResult","handleAction","routeId","isErrorResult","getLoadingNavigation","shortCircuited","updatedMatches","handleLoaders","getActionDataForCommit","isFogOfWar","navigation","getSubmittingNavigation","discoverResult","discoverRoutes","boundaryId","actionMatch","getTargetMatch","callDataStrategy","isRedirectResult","normalizeRedirectLocation","startRedirectNavigation","isDeferredResult","boundaryMatch","overrideNavigation","fetcherSubmission","initialHydration","activeSubmission","getSubmissionFromNavigation","shouldUpdateNavigationState","getUpdatedActionData","matchesToLoad","revalidatingFetchers","getMatchesToLoad","cancelActiveDeferreds","updatedFetchers","markFetchRedirectsDone","updates","getUpdatedRevalidatingFetchers","rf","abortFetcher","abortPendingFetchRevalidations","loaderResults","fetcherResults","callLoadersAndMaybeResolveData","findRedirect","processLoaderData","deferredData","didAbortFetchLoads","abortStaleFetchLoads","shouldUpdateFetchers","revalidatingFetcher","getLoadingFetcher","fetch","setFetcherError","handleFetcherAction","handleFetcherLoader","requestMatches","detectAndHandle405Error","existingFetcher","updateFetcherState","getSubmittingFetcher","abortController","fetchRequest","originatingLoadId","getDoneFetcher","revalidationRequest","loadId","loadFetcher","staleKey","doneFetcher","resolveDeferredData","isNavigation","_temp2","redirectLocation","isDocumentReload","redirectHistoryAction","formMethod","formAction","formEncType","type","fetcherKey","results","dataResults","callDataStrategyImpl","isRedirectDataStrategyResultResult","normalizeRelativeRoutingRedirectResponse","convertDataStrategyResultToDataResult","fetchersToLoad","currentMatches","loaderResultsPromise","fetcherResultsPromise","resolveNavigationDeferredResults","resolveFetcherDeferredResults","getFetcher","deleteFetcherAndUpdateState","count","controller","markFetchersDone","keys","doneKeys","landedId","yeetedKeys","getBlocker","blocker","newBlocker","entries","blockerFunction","predicate","cancelledRouteIds","dfd","enableScrollRestoration","positions","getPosition","getKey","getScrollKey","partialMatches","isNonHMR","localManifest","children","patchRoutesImpl","newMatches","newPartialMatches","_internalSetRoutes","newRoutes","patchRoutes","UNSAFE_DEFERRED_SYMBOL","createStaticHandler","query","_temp3","requestContext","skipLoaderErrorBubbling","dataStrategy","method","isValidMethod","methodNotAllowedMatches","queryImpl","isResponse","queryRoute","_temp4","_result$activeDeferre","routeMatch","submit","loadRouteData","isDataStrategyResult","isRedirectResponse","isRouteRequest","throwStaticHandlerAbortedError","loaderRequest","context","getLoaderMatchesUntilBoundary","processRouteLoaderData","executedLoaders","getStaticContextFromError","isSubmissionNavigation","prependBasename","fromRouteId","relative","contextualMatches","activeRouteMatch","nakedIndex","hasNakedIndexQuery","indexValues","qs","normalizeFormMethod","isFetcher","getInvalidBodyError","rawFormMethod","stripHashFromPath","text","name","searchParams","formData","convertFormDataToSearchParams","convertSearchParamsToFormData","includeBoundary","skipActionErrorRevalidation","currentUrl","nextUrl","boundaryMatches","actionStatus","shouldSkipRevalidation","navigationMatches","isNewLoader","currentRouteMatch","nextRouteMatch","shouldRevalidateLoader","isNewRouteInstance","fetcherMatches","fetcherMatch","shouldRevalidate","hasData","hasError","currentLoaderData","currentMatch","isNew","isMissingData","currentPath","loaderMatch","arg","routeChoice","_childrenToPatch","childrenToPatch","uniqueChildren","newRoute","existingRoute","isSameRoute","aChild","_existingRoute$childr","bChild","loadLazyRouteModule","lazyRoute","routeToUpdate","routeUpdates","lazyRouteProperty","isPropertyStaticallyDefined","_ref4","loadRouteDefinitionsPromises","dsMatches","loadRoutePromise","shouldLoad","handlerOverride","callLoaderOrAction","staticContext","onReject","runHandler","handler","abortPromise","actualHandler","ctx","handlerPromise","handlerError","dataStrategyResult","contentType","isDataWithResponseInit","_result$init3","_result$init4","_result$init","_result$init2","isDeferredData","_result$init5","_result$init6","_result$init7","_result$init8","trimmedMatches","normalizedLocation","isSameBasename","statusCode","foundError","loaderHeaders","pendingError","newLoaderData","mergedLoaderData","_temp5","errorMessage","deferred","isRevalidatingLoader","unwrap","_window","transitions","sessionPositions","DataRouterContext","React.createContext","DataRouterStateContext","AwaitContext","NavigationContext","LocationContext","RouteContext","RouteErrorContext","useHref","useInRouterContext","UNSAFE_invariant","navigator","React.useContext","useResolvedPath","joinedPathname","useLocation","useIsomorphicLayoutEffect","cb","React.useLayoutEffect","useNavigate","isDataRoute","useNavigateStable","useNavigateUnstable","dataRouterContext","routePathnamesJson","UNSAFE_getResolveToMatches","activeRef","React.useRef","React.useCallback","OutletContext","useOutlet","outlet","React.createElement","useParams","React.useMemo","useRoutesImpl","dataRouterState","isStatic","parentMatches","parentParams","parentPathnameBase","locationFromContext","parentSegments","_renderMatches","DefaultErrorComponent","useRouteError","stack","preStyles","React.Fragment","defaultErrorElement","RenderErrorBoundary","React.Component","props","errorInfo","RenderedRoute","routeContext","_dataRouterState","_future","renderedMatches","errorIndex","renderFallback","fallbackIndex","needsToRunLoader","shouldRenderHydrateFallback","errorElement","hydrateFallbackElement","getChildren","DataRouterHook","DataRouterStateHook","useDataRouterContext","hookName","useDataRouterState","useRouteContext","useCurrentRouteId","thisRoute","useRouteId","useNavigation","useMatches","UNSAFE_convertRouteMatchToUiMatch","useLoaderData","useRouteLoaderData","useActionData","_state$errors","useAsyncValue","useAsyncError","blockerId","useBlocker","shouldBlock","setBlockerKey","React.useState","React.useEffect","logV6DeprecationWarnings","renderFuture","routerFuture","Outlet","Router","_ref5","basenameProp","locationProp","navigationType","staticProp","navigationContext","locationContext","trailingPathname","Await","_ref7","AwaitErrorBoundary","ResolveAwait","AwaitRenderStatus","neverSettledPromise","renderError","_ref8","toRender"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5]}